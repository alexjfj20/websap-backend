{"version":3,"file":"js/869.32f50314.js","mappings":"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","sources":["webpack://websap/./src/components/admin/AdminBackups.vue","webpack://websap/./src/services/backupService.js","webpack://websap/./src/components/admin/AdminBackups.vue?729c","webpack://websap/./src/components/admin/AdminInventory.vue","webpack://websap/./src/components/admin/AdminInventory.vue?f710","webpack://websap/./src/components/admin/AdminUsers.vue","webpack://websap/./src/components/admin/AdminUsers.vue?d7db","webpack://websap/./node_modules/core-js/internals/validate-arguments-length.js","webpack://websap/./src/services/adminService.js","webpack://websap/./src/components/admin/AdminDashboard.vue","webpack://websap/./src/components/admin/AdminDashboard.vue?60de","webpack://websap/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://websap/./src/components/admin/AdminLogs.vue","webpack://websap/./src/components/admin/AdminLogs.vue?af13","webpack://websap/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://websap/./node_modules/core-js/modules/web.url-search-params.size.js"],"sourcesContent":["<template>\r\n  <div class=\"backups-container\">\r\n    <h2 class=\"section-title\">Gestión de Respaldos</h2>\r\n    \r\n    <div class=\"backups-actions\">\r\n      <button @click=\"createNewBackup\" class=\"create-backup-btn\" :disabled=\"creating\">\r\n        <span v-if=\"creating\">\r\n          <span class=\"loading-spinner\"></span> Creando respaldo...\r\n        </span>\r\n        <span v-else>\r\n          <span class=\"action-icon\">💾</span> Crear respaldo ahora\r\n        </span>\r\n      </button>\r\n    </div>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando respaldos...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"backups.length === 0\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">📂</div>\r\n      <p>No hay respaldos disponibles</p>\r\n      <p class=\"empty-desc\">Crea tu primer respaldo haciendo clic en el botón \"Crear respaldo ahora\"</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"backups-grid\">\r\n      <div v-for=\"backup in backups\" :key=\"backup.id\" class=\"backup-card\">\r\n        <div class=\"backup-icon\">💾</div>\r\n        <div class=\"backup-info\">\r\n          <h3>{{ backup.archivo }}</h3>\r\n          <p class=\"backup-date\">Fecha: {{ formatDate(backup.fecha) }}</p>\r\n          <p class=\"backup-size\">Tamaño: {{ backup.tamano }}</p>\r\n        </div>\r\n        <div class=\"backup-actions\">\r\n          <button @click=\"restoreBackup(backup)\" class=\"restore-btn\" :disabled=\"restoring === backup.id\">\r\n            <span v-if=\"restoring === backup.id\">Restaurando...</span>\r\n            <span v-else>Restaurar</span>\r\n          </button>\r\n          <button @click=\"downloadBackup(backup)\" class=\"download-btn\">Descargar</button>\r\n          <button @click=\"deleteBackup(backup)\" class=\"delete-btn\" :disabled=\"deleting === backup.id\">\r\n            <span v-if=\"deleting === backup.id\">Eliminando...</span>\r\n            <span v-else>Eliminar</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Modal de confirmación para restaurar respaldo -->\r\n    <div v-if=\"showRestoreModal\" class=\"modal-overlay\" @click.self=\"cancelRestore\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>Confirmar restauración</h3>\r\n          <button @click=\"cancelRestore\" class=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p class=\"warning-text\">\r\n            <span class=\"warning-icon\">⚠️</span>\r\n            Estás a punto de restaurar el sistema a partir del respaldo seleccionado. Esta acción sobrescribirá los datos actuales.\r\n          </p>\r\n          <p>¿Estás seguro de que deseas continuar?</p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"cancelRestore\" class=\"cancel-btn\">Cancelar</button>\r\n          <button @click=\"confirmRestore\" class=\"confirm-btn\">Confirmar restauración</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { getBackups, createBackup, restoreBackup, deleteBackup as deleteBackupFromDB } from '../../services/backupService';\r\nimport { confirm, alert } from '../../services/dialogService';\r\n\r\nexport default {\r\n  name: 'AdminBackups',\r\n  setup() {\r\n    const backups = ref([]);\r\n    const loading = ref(true);\r\n    const creating = ref(false);\r\n    const restoring = ref(null);\r\n    const deleting = ref(null);\r\n    const selectedBackup = ref(null);\r\n    const showRestoreModal = ref(false);\r\n    \r\n    // Cargar respaldos al montar el componente\r\n    onMounted(async () => {\r\n      await fetchBackups();\r\n    });\r\n    \r\n    // Obtener respaldos\r\n    const fetchBackups = async () => {\r\n      try {\r\n        loading.value = true;\r\n        const response = await getBackups();\r\n        \r\n        if (response && response.success) {\r\n          backups.value = response.data || [];\r\n          \r\n          // Ordenar por fecha (más reciente primero)\r\n          backups.value.sort((a, b) => new Date(b.fecha) - new Date(a.fecha));\r\n        } else {\r\n          throw new Error('Error al cargar respaldos');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener respaldos:', error);\r\n        await alert('Error al cargar los respaldos: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'N/A';\r\n      \r\n      try {\r\n        const date = new Date(dateStr);\r\n        if (isNaN(date.getTime())) return 'Fecha inválida';\r\n        \r\n        return new Intl.DateTimeFormat('es-ES', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        }).format(date);\r\n      } catch (e) {\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Crear nuevo respaldo\r\n    const createNewBackup = async () => {\r\n      try {\r\n        creating.value = true;\r\n        const result = await createBackup();\r\n        \r\n        if (result && result.success) {\r\n          // Agregar el nuevo respaldo a la lista\r\n          backups.value.unshift(result.data);\r\n          await alert('Respaldo creado correctamente');\r\n        } else {\r\n          throw new Error('Error al crear el respaldo');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al crear respaldo:', error);\r\n        await alert('Error al crear respaldo: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        creating.value = false;\r\n      }\r\n    };\r\n    \r\n    // Iniciar proceso de restauración\r\n    const restoreBackup = (backup) => {\r\n      selectedBackup.value = backup;\r\n      showRestoreModal.value = true;\r\n    };\r\n    \r\n    // Cancelar restauración\r\n    const cancelRestore = () => {\r\n      showRestoreModal.value = false;\r\n      selectedBackup.value = null;\r\n    };\r\n    \r\n    // Confirmar restauración\r\n    const confirmRestore = async () => {\r\n      try {\r\n        if (!selectedBackup.value) return;\r\n        \r\n        showRestoreModal.value = false;\r\n        restoring.value = selectedBackup.value.id;\r\n        \r\n        const result = await restoreBackup(selectedBackup.value.id);\r\n        \r\n        if (result && result.success) {\r\n          await alert('Respaldo restaurado correctamente. Se recargará la página para aplicar los cambios.');\r\n          // Recargar la página\r\n          window.location.reload();\r\n        } else {\r\n          throw new Error('Error al restaurar el respaldo');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al restaurar respaldo:', error);\r\n        await alert('Error al restaurar respaldo: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        restoring.value = null;\r\n        selectedBackup.value = null;\r\n      }\r\n    };\r\n    \r\n    // Descargar respaldo\r\n    const downloadBackup = async (backup) => {\r\n      try {\r\n        // En una implementación real, esto descargaría el archivo del servidor\r\n        // Para el prototipo, simulamos la descarga\r\n        const element = document.createElement('a');\r\n        element.setAttribute('href', 'data:application/zip;charset=utf-8,' + encodeURIComponent('Contenido simulado de respaldo'));\r\n        element.setAttribute('download', backup.archivo);\r\n        \r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        \r\n        element.click();\r\n        \r\n        document.body.removeChild(element);\r\n        \r\n        await alert('Respaldo descargado correctamente');\r\n      } catch (error) {\r\n        console.error('Error al descargar respaldo:', error);\r\n        await alert('Error al descargar respaldo: ' + (error.message || 'Error desconocido'));\r\n      }\r\n    };\r\n    \r\n    // Eliminar respaldo\r\n    const deleteBackup = async (backup) => {\r\n      try {\r\n        const confirmed = await confirm(`¿Estás seguro de eliminar el respaldo \"${backup.archivo}\"?`, {\r\n          title: 'Confirmar eliminación',\r\n          confirmText: 'Eliminar',\r\n          cancelText: 'Cancelar'\r\n        });\r\n        \r\n        if (confirmed) {\r\n          deleting.value = backup.id;\r\n          const result = await deleteBackupFromDB(backup.id);\r\n          \r\n          if (result && result.success) {\r\n            // Eliminar el respaldo de la lista\r\n            backups.value = backups.value.filter(b => b.id !== backup.id);\r\n            await alert('Respaldo eliminado correctamente');\r\n          } else {\r\n            throw new Error('Error al eliminar el respaldo');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al eliminar respaldo:', error);\r\n        await alert('Error al eliminar respaldo: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        deleting.value = null;\r\n      }\r\n    };\r\n    \r\n    return {\r\n      backups,\r\n      loading,\r\n      creating,\r\n      restoring,\r\n      deleting,\r\n      selectedBackup,\r\n      showRestoreModal,\r\n      formatDate,\r\n      createNewBackup,\r\n      restoreBackup,\r\n      cancelRestore,\r\n      confirmRestore,\r\n      downloadBackup,\r\n      deleteBackup\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.backups-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.backups-actions {\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.create-backup-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 12px 20px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.create-backup-btn:hover:not(:disabled) {\r\n  background-color: #45a049;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.create-backup-btn:disabled {\r\n  background-color: #a5d6a7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.action-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n  gap: 15px;\r\n}\r\n\r\n.spinner, .loading-spinner {\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  border: 3px solid rgba(255,255,255,0.3);\r\n  border-top: 3px solid white;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #f3f3f3;\r\n  border-top: 3px solid #4CAF50;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 50px 20px;\r\n  color: #666;\r\n  text-align: center;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border: 1px dashed #ddd;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n  opacity: 0.5;\r\n}\r\n\r\n.empty-desc {\r\n  font-style: italic;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n  color: #888;\r\n}\r\n\r\n.backups-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.backup-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.backup-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n}\r\n\r\n.backup-icon {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  height: 80px;\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.backup-info {\r\n  padding: 15px;\r\n}\r\n\r\n.backup-info h3 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 16px;\r\n  color: #333;\r\n  word-break: break-all;\r\n}\r\n\r\n.backup-date, .backup-size {\r\n  margin: 5px 0;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.backup-actions {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 8px;\r\n  padding: 15px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.backup-actions button {\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.restore-btn {\r\n  grid-column: 1 / 3;\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.restore-btn:hover:not(:disabled) {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.download-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.download-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\n.delete-btn:hover:not(:disabled) {\r\n  background-color: #d32f2f;\r\n}\r\n\r\n.restore-btn:disabled,\r\n.delete-btn:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Modal styles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-container {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\r\n  animation: fadeIn 0.3s;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #666;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n}\r\n\r\n.warning-text {\r\n  background-color: #fff3e0;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n}\r\n\r\n.warning-icon {\r\n  font-size: 20px;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.cancel-btn, .confirm-btn {\r\n  padding: 8px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #f1f1f1;\r\n  color: #333;\r\n}\r\n\r\n.cancel-btn:hover {\r\n  background-color: #e1e1f1;\r\n}\r\n\r\n.confirm-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.confirm-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .backups-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .backup-actions {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .restore-btn {\r\n    grid-column: auto;\r\n  }\r\n}\r\n</style>\r\n","/**\r\n * Servicio para gestión de respaldos del sistema\r\n */\r\n\r\n/**\r\n * Obtiene la lista de respaldos disponibles\r\n * @returns {Promise<Object>} Respuesta con los respaldos\r\n */\r\nexport async function getBackups() {\r\n  // En una implementación real, esto llamaría a una API\r\n  // Por ahora, simulamos datos para desarrollo\r\n  \r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        data: [\r\n          {\r\n            id: 1,\r\n            fecha: new Date().toISOString(),\r\n            archivo: 'backup_' + formatDateForFilename(new Date()) + '.zip',\r\n            tamano: '2.5 MB'\r\n          },\r\n          {\r\n            id: 2,\r\n            fecha: new Date(Date.now() - 86400000).toISOString(), // 1 día atrás\r\n            archivo: 'backup_' + formatDateForFilename(new Date(Date.now() - 86400000)) + '.zip',\r\n            tamano: '2.3 MB'\r\n          },\r\n          {\r\n            id: 3,\r\n            fecha: new Date(Date.now() - 86400000 * 7).toISOString(), // 7 días atrás\r\n            archivo: 'backup_' + formatDateForFilename(new Date(Date.now() - 86400000 * 7)) + '.zip',\r\n            tamano: '2.1 MB'\r\n          }\r\n        ]\r\n      });\r\n    }, 1000);\r\n  });\r\n}\r\n\r\n/**\r\n * Crea un nuevo respaldo del sistema\r\n * @returns {Promise<Object>} Respuesta con información del respaldo creado\r\n */\r\nexport async function createBackup() {\r\n  // Simulación de creación de respaldo\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      const now = new Date();\r\n      resolve({\r\n        success: true,\r\n        data: {\r\n          id: Date.now(),\r\n          fecha: now.toISOString(),\r\n          archivo: 'backup_' + formatDateForFilename(now) + '.zip',\r\n          tamano: '2.4 MB'\r\n        },\r\n        message: 'Respaldo creado exitosamente'\r\n      });\r\n    }, 2000);\r\n  });\r\n}\r\n\r\n/**\r\n * Restaura un respaldo específico\r\n * @param {number} backupId ID del respaldo a restaurar\r\n * @returns {Promise<Object>} Resultado de la operación\r\n */\r\nexport async function restoreBackup(backupId) {\r\n  // Simulación de restauración\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        message: 'Respaldo restaurado exitosamente'\r\n      });\r\n    }, 3000);\r\n  });\r\n}\r\n\r\n/**\r\n * Elimina un respaldo específico\r\n * @param {number} backupId ID del respaldo a eliminar\r\n * @returns {Promise<Object>} Resultado de la operación\r\n */\r\nexport async function deleteBackup(backupId) {\r\n  // Simulación de eliminación\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        success: true,\r\n        message: 'Respaldo eliminado exitosamente'\r\n      });\r\n    }, 1000);\r\n  });\r\n}\r\n\r\n/**\r\n * Formatea una fecha para su uso en nombres de archivo\r\n * @param {Date} date Fecha a formatear\r\n * @returns {string} Fecha formateada como YYYYMMDD_HHMMSS\r\n */\r\nfunction formatDateForFilename(date) {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n  \r\n  return `${year}${month}${day}_${hours}${minutes}${seconds}`;\r\n}\r\n\r\nexport default {\r\n  getBackups,\r\n  createBackup,\r\n  restoreBackup,\r\n  deleteBackup\r\n};\r\n","import { render } from \"./AdminBackups.vue?vue&type=template&id=1ca49867&scoped=true\"\nimport script from \"./AdminBackups.vue?vue&type=script&lang=js\"\nexport * from \"./AdminBackups.vue?vue&type=script&lang=js\"\n\nimport \"./AdminBackups.vue?vue&type=style&index=0&id=1ca49867&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1ca49867\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"inventory-container\">\r\n    <h2 class=\"section-title\">Gestión de Inventario</h2>\r\n    \r\n    <!-- Controles de filtrado y búsqueda -->\r\n    <div class=\"inventory-controls\">\r\n      <div class=\"search-container\">\r\n        <input \r\n          v-model=\"searchTerm\" \r\n          placeholder=\"Buscar producto...\" \r\n          class=\"search-input\"\r\n          @input=\"handleSearchInput\"\r\n        />\r\n      </div>\r\n      \r\n      <div class=\"filters\">\r\n        <select v-model=\"stockFilter\" @change=\"applyFilters\" class=\"filter-select\">\r\n          <option value=\"all\">Todos los productos</option>\r\n          <option value=\"low\">Stock bajo</option>\r\n          <option value=\"out\">Sin stock</option>\r\n        </select>\r\n        \r\n        <select v-model=\"categoryFilter\" @change=\"applyFilters\" class=\"filter-select\">\r\n          <option value=\"\">Todas las categorías</option>\r\n          <option value=\"con_refresco\">Con refresco</option>\r\n          <option value=\"sin_refresco\">Sin refresco</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <div class=\"actions\">\r\n        <button @click=\"refreshInventory\" class=\"refresh-btn\">\r\n          <span class=\"btn-icon\">🔄</span> Actualizar\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Estados de carga y error -->\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando inventario...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error-container\">\r\n      <p class=\"error-message\">{{ error }}</p>\r\n      <button @click=\"loadInventory\" class=\"retry-btn\">Reintentar</button>\r\n    </div>\r\n    \r\n    <div v-else-if=\"filteredProducts.length === 0\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">📦</div>\r\n      <p>No se encontraron productos</p>\r\n      <p class=\"empty-desc\">Intenta cambiar los filtros de búsqueda o agrega nuevos productos al inventario</p>\r\n    </div>\r\n    \r\n    <!-- Tabla de inventario -->\r\n    <div v-else class=\"inventory-table-container\">\r\n      <table class=\"inventory-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Categoría</th>\r\n            <th>Stock Actual</th>\r\n            <th>Estado</th>\r\n            <th>Última Actualización</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"product in filteredProducts\" :key=\"product.id\" :class=\"getRowClass(product)\">\r\n            <td>{{ product.name }}</td>\r\n            <td>{{ product.includesDrink ? 'Con refresco' : 'Sin refresco' }}</td>\r\n            <td>{{ product.availableQuantity }}</td>\r\n            <td>\r\n              <span :class=\"getStatusClass(product)\">\r\n                {{ getStatusText(product) }}\r\n              </span>\r\n            </td>\r\n            <td>{{ formatDate(product.lastUpdated) }}</td>\r\n            <td class=\"actions-cell\">\r\n              <button @click=\"openUpdateStockModal(product)\" class=\"update-btn\" title=\"Actualizar stock\">\r\n                📝\r\n              </button>\r\n              <button @click=\"openHistoryModal(product)\" class=\"history-btn\" title=\"Ver historial\">\r\n                📋\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n    <!-- Modal para actualizar stock -->\r\n    <div v-if=\"showUpdateModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>Actualizar Stock</h3>\r\n          <button @click=\"closeUpdateModal\" class=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p><strong>Producto:</strong> {{ selectedProduct?.name }}</p>\r\n          <p><strong>Stock actual:</strong> {{ selectedProduct?.availableQuantity || 0 }}</p>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"newStock\">Nuevo stock:</label>\r\n            <input \r\n              type=\"number\" \r\n              id=\"newStock\" \r\n              v-model=\"updateStockForm.newQuantity\" \r\n              min=\"0\" \r\n              class=\"form-input\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"reason\">Motivo del ajuste:</label>\r\n            <textarea \r\n              id=\"reason\" \r\n              v-model=\"updateStockForm.reason\" \r\n              class=\"form-textarea\" \r\n              placeholder=\"Explique el motivo del ajuste de inventario\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"closeUpdateModal\" class=\"cancel-btn\">Cancelar</button>\r\n          <button @click=\"updateStock\" class=\"save-btn\" :disabled=\"updateStockForm.isUpdating\">\r\n            <span v-if=\"updateStockForm.isUpdating\">Actualizando...</span>\r\n            <span v-else>Guardar Cambios</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Modal para ver historial -->\r\n    <div v-if=\"showHistoryModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-container history-modal\">\r\n        <div class=\"modal-header\">\r\n          <h3>Historial de {{ selectedProduct?.name }}</h3>\r\n          <button @click=\"closeHistoryModal\" class=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div v-if=\"productHistory.length === 0\" class=\"empty-history\">\r\n            <p>No hay registros de movimientos para este producto.</p>\r\n          </div>\r\n          <div v-else class=\"history-list\">\r\n            <div v-for=\"(record, index) in productHistory\" :key=\"index\" class=\"history-item\">\r\n              <div class=\"history-date\">{{ formatDate(record.date) }}</div>\r\n              <div class=\"history-details\">\r\n                <span class=\"history-type\" :class=\"record.type\">\r\n                  {{ record.type === 'increase' ? 'Incremento' : record.type === 'decrease' ? 'Reducción' : 'Ajuste' }}\r\n                </span>\r\n                <span class=\"history-quantity\">\r\n                  {{ record.type === 'increase' ? '+' : '' }}{{ record.change }}\r\n                </span>\r\n                <span class=\"history-stock\">\r\n                  Stock resultante: {{ record.newQuantity }}\r\n                </span>\r\n              </div>\r\n              <div class=\"history-reason\">\r\n                {{ record.reason || 'Sin motivo especificado' }}\r\n              </div>\r\n              <div class=\"history-user\">\r\n                Por: {{ record.userName || 'Sistema' }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"closeHistoryModal\" class=\"cancel-btn\">Cerrar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { getMenuItems, updateItemStock } from '../../services/adminService';\r\nimport { alert, confirm } from '../../services/dialogService';\r\nimport { getCurrentUser } from '../../services/authService';\r\n\r\nexport default {\r\n  name: 'AdminInventory',\r\n  setup() {\r\n    // Estados\r\n    const products = ref([]);\r\n    const loading = ref(true);\r\n    const error = ref(null);\r\n    const searchTerm = ref('');\r\n    const stockFilter = ref('all');\r\n    const categoryFilter = ref('');\r\n    \r\n    // Estados para modales\r\n    const showUpdateModal = ref(false);\r\n    const showHistoryModal = ref(false);\r\n    const selectedProduct = ref(null);\r\n    const productHistory = ref([]);\r\n    \r\n    // Formulario para actualizar stock\r\n    const updateStockForm = ref({\r\n      newQuantity: 0,\r\n      reason: '',\r\n      isUpdating: false\r\n    });\r\n    \r\n    // Cargar productos al montar el componente\r\n    onMounted(() => {\r\n      loadInventory();\r\n    });\r\n    \r\n    // Cargar inventario de productos\r\n    const loadInventory = async () => {\r\n      try {\r\n        loading.value = true;\r\n        error.value = null;\r\n        \r\n        const response = await getMenuItems();\r\n        \r\n        if (response.success) {\r\n          // Asegurar que cada producto tiene propiedades relacionadas con el inventario\r\n          products.value = response.data.map(item => ({\r\n            ...item,\r\n            availableQuantity: item.availableQuantity || 0,\r\n            lastUpdated: item.lastUpdated || new Date().toISOString(),\r\n            stockHistory: item.stockHistory || []\r\n          }));\r\n          \r\n          console.log('Inventario cargado:', products.value);\r\n        } else {\r\n          throw new Error(response.message || 'Error al cargar el inventario');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error al cargar inventario:', err);\r\n        error.value = `Error al cargar inventario: ${err.message || 'Error desconocido'}`;\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Refrescar inventario\r\n    const refreshInventory = () => {\r\n      loadInventory();\r\n    };\r\n    \r\n    // Función para manejar la búsqueda\r\n    const handleSearchInput = () => {\r\n      // La búsqueda se aplica automáticamente a través del computed filteredProducts\r\n    };\r\n    \r\n    // Aplicar filtros\r\n    const applyFilters = () => {\r\n      // Los filtros se aplican automáticamente a través del computed filteredProducts\r\n    };\r\n    \r\n    // Productos filtrados\r\n    const filteredProducts = computed(() => {\r\n      let result = [...products.value];\r\n      \r\n      // Aplicar búsqueda por término\r\n      if (searchTerm.value) {\r\n        const term = searchTerm.value.toLowerCase();\r\n        result = result.filter(product => \r\n          product.name?.toLowerCase().includes(term)\r\n        );\r\n      }\r\n      \r\n      // Aplicar filtro por estado de stock\r\n      if (stockFilter.value !== 'all') {\r\n        if (stockFilter.value === 'low') {\r\n          result = result.filter(product => \r\n            product.availableQuantity > 0 && product.availableQuantity <= 5\r\n          );\r\n        } else if (stockFilter.value === 'out') {\r\n          result = result.filter(product => \r\n            product.availableQuantity === 0\r\n          );\r\n        }\r\n      }\r\n      \r\n      // Aplicar filtro por categoría\r\n      if (categoryFilter.value) {\r\n        if (categoryFilter.value === 'con_refresco') {\r\n          result = result.filter(product => product.includesDrink);\r\n        } else if (categoryFilter.value === 'sin_refresco') {\r\n          result = result.filter(product => !product.includesDrink);\r\n        }\r\n      }\r\n      \r\n      return result;\r\n    });\r\n    \r\n    // Obtener clase para la fila según el estado del stock\r\n    const getRowClass = (product) => {\r\n      if (product.availableQuantity === 0) {\r\n        return 'out-of-stock-row';\r\n      } else if (product.availableQuantity <= 5) {\r\n        return 'low-stock-row';\r\n      }\r\n      return '';\r\n    };\r\n    \r\n    // Obtener clase para el estado\r\n    const getStatusClass = (product) => {\r\n      if (product.availableQuantity === 0) {\r\n        return 'status-badge out-of-stock';\r\n      } else if (product.availableQuantity <= 5) {\r\n        return 'status-badge low-stock';\r\n      }\r\n      return 'status-badge in-stock';\r\n    };\r\n    \r\n    // Obtener texto de estado\r\n    const getStatusText = (product) => {\r\n      if (product.availableQuantity === 0) {\r\n        return 'Sin stock';\r\n      } else if (product.availableQuantity <= 5) {\r\n        return 'Stock bajo';\r\n      }\r\n      return 'Disponible';\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return 'N/A';\r\n      \r\n      try {\r\n        const date = new Date(dateString);\r\n        return new Intl.DateTimeFormat('es-ES', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        }).format(date);\r\n      } catch (err) {\r\n        console.error('Error al formatear fecha:', err);\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Abrir modal para actualizar stock\r\n    const openUpdateStockModal = (product) => {\r\n      selectedProduct.value = { ...product };\r\n      updateStockForm.value = {\r\n        newQuantity: product.availableQuantity,\r\n        reason: '',\r\n        isUpdating: false\r\n      };\r\n      showUpdateModal.value = true;\r\n    };\r\n    \r\n    // Cerrar modal de actualización\r\n    const closeUpdateModal = () => {\r\n      showUpdateModal.value = false;\r\n      selectedProduct.value = null;\r\n    };\r\n    \r\n    // Actualizar stock\r\n    const updateStock = async () => {\r\n      if (!selectedProduct.value) return;\r\n      \r\n      // Validar datos\r\n      if (isNaN(updateStockForm.value.newQuantity) || updateStockForm.value.newQuantity < 0) {\r\n        await alert('Por favor ingrese una cantidad válida (mayor o igual a 0)');\r\n        return;\r\n      }\r\n      \r\n      if (!updateStockForm.value.reason.trim()) {\r\n        await alert('Por favor ingrese un motivo para el ajuste de inventario');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        updateStockForm.value.isUpdating = true;\r\n        \r\n        // Determinar el tipo de movimiento\r\n        const currentQuantity = selectedProduct.value.availableQuantity;\r\n        const newQuantity = parseInt(updateStockForm.value.newQuantity);\r\n        const difference = newQuantity - currentQuantity;\r\n        const type = difference > 0 ? 'increase' : difference < 0 ? 'decrease' : 'adjustment';\r\n        \r\n        // Crear registro de historial\r\n        const currentUser = getCurrentUser();\r\n        const historyRecord = {\r\n          date: new Date().toISOString(),\r\n          type,\r\n          change: Math.abs(difference),\r\n          previousQuantity: currentQuantity,\r\n          newQuantity,\r\n          reason: updateStockForm.value.reason,\r\n          userId: currentUser?.id,\r\n          userName: currentUser?.nombre || 'Usuario'\r\n        };\r\n        \r\n        // Actualizar en base de datos\r\n        await updateItemStock(\r\n          selectedProduct.value.id, \r\n          newQuantity, \r\n          historyRecord\r\n        );\r\n        \r\n        // Actualizar en estado local\r\n        const productIndex = products.value.findIndex(p => p.id === selectedProduct.value.id);\r\n        if (productIndex !== -1) {\r\n          products.value[productIndex].availableQuantity = newQuantity;\r\n          products.value[productIndex].lastUpdated = new Date().toISOString();\r\n          \r\n          // Añadir al historial\r\n          if (!products.value[productIndex].stockHistory) {\r\n            products.value[productIndex].stockHistory = [];\r\n          }\r\n          products.value[productIndex].stockHistory.push(historyRecord);\r\n        }\r\n        \r\n        // Mostrar confirmación\r\n        await alert('Stock actualizado correctamente', { title: 'Actualización Exitosa' });\r\n        \r\n        // Cerrar modal\r\n        closeUpdateModal();\r\n      } catch (err) {\r\n        console.error('Error al actualizar stock:', err);\r\n        await alert(`Error al actualizar stock: ${err.message || 'Error desconocido'}`);\r\n      } finally {\r\n        updateStockForm.value.isUpdating = false;\r\n      }\r\n    };\r\n    \r\n    // Abrir modal de historial\r\n    const openHistoryModal = (product) => {\r\n      selectedProduct.value = { ...product };\r\n      \r\n      // Obtener historial del producto\r\n      productHistory.value = product.stockHistory || [];\r\n      \r\n      showHistoryModal.value = true;\r\n    };\r\n    \r\n    // Cerrar modal de historial\r\n    const closeHistoryModal = () => {\r\n      showHistoryModal.value = false;\r\n      selectedProduct.value = null;\r\n      productHistory.value = [];\r\n    };\r\n    \r\n    return {\r\n      products,\r\n      loading,\r\n      error,\r\n      searchTerm,\r\n      stockFilter,\r\n      categoryFilter,\r\n      filteredProducts,\r\n      showUpdateModal,\r\n      showHistoryModal,\r\n      selectedProduct,\r\n      productHistory,\r\n      updateStockForm,\r\n      loadInventory,\r\n      refreshInventory,\r\n      handleSearchInput,\r\n      applyFilters,\r\n      getRowClass,\r\n      getStatusClass,\r\n      getStatusText,\r\n      formatDate,\r\n      openUpdateStockModal,\r\n      closeUpdateModal,\r\n      updateStock,\r\n      openHistoryModal,\r\n      closeHistoryModal\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.inventory-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n/* Controles y filtros */\r\n.inventory-controls {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.search-container {\r\n  flex-grow: 1;\r\n  min-width: 250px;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.filter-select {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n}\r\n\r\n.actions {\r\n  margin-left: auto;\r\n}\r\n\r\n.refresh-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.refresh-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 16px;\r\n}\r\n\r\n/* Estados de carga y error */\r\n.loading-container, .error-container, .empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 50px 20px;\r\n  text-align: center;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  margin: 20px 0;\r\n}\r\n\r\n.spinner {\r\n  border: 4px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 50%;\r\n  border-top: 4px solid #4CAF50;\r\n  width: 30px;\r\n  height: 30px;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.error-message {\r\n  color: #f44336;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.retry-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 8px 15px;\r\n  cursor: pointer;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 15px;\r\n  color: #bbb;\r\n}\r\n\r\n.empty-desc {\r\n  color: #777;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* Tabla de inventario */\r\n.inventory-table-container {\r\n  overflow-x: auto;\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n}\r\n\r\n.inventory-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.inventory-table th,\r\n.inventory-table td {\r\n  padding: 12px 15px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.inventory-table thead {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.inventory-table tbody tr:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.inventory-table .actions-cell {\r\n  white-space: nowrap;\r\n  text-align: center;\r\n}\r\n\r\n/* Clases para estados de stock */\r\n.out-of-stock-row {\r\n  background-color: #ffebee;\r\n}\r\n\r\n.low-stock-row {\r\n  background-color: #fff8e1;\r\n}\r\n\r\n.status-badge {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n}\r\n\r\n.in-stock {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.low-stock {\r\n  background-color: #FFC107;\r\n  color: #333;\r\n}\r\n\r\n.out-of-stock {\r\n  background-color: #F44336;\r\n  color: white;\r\n}\r\n\r\n/* Botones de acción */\r\n.update-btn, .history-btn {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  margin: 0 2px;\r\n}\r\n\r\n.update-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.update-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.history-btn {\r\n  background-color: #9E9E9E;\r\n  color: white;\r\n}\r\n\r\n.history-btn:hover {\r\n  background-color: #757575;\r\n}\r\n\r\n/* Modales */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-container {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n  width: 90%;\r\n  max-width: 500px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  animation: modalFadeIn 0.3s;\r\n}\r\n\r\n.history-modal {\r\n  max-width: 700px;\r\n}\r\n\r\n@keyframes modalFadeIn {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #777;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 15px 20px;\r\n  border-top: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n/* Formulario */\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.form-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.form-textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  min-height: 100px;\r\n  resize: vertical;\r\n}\r\n\r\n/* Botones modal */\r\n.cancel-btn, .save-btn {\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  border: none;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.save-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.save-btn:disabled {\r\n  background-color: #9E9E9E;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Historial */\r\n.history-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.history-item {\r\n  padding: 12px;\r\n  border-bottom: 1px solid #eee;\r\n  position: relative;\r\n}\r\n\r\n.history-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.history-date {\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.history-details {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 5px;\r\n  align-items: center;\r\n}\r\n\r\n.history-type {\r\n  display: inline-block;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n}\r\n\r\n.history-type.increase {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.history-type.decrease {\r\n  background-color: #F44336;\r\n  color: white;\r\n}\r\n\r\n.history-type.adjustment {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.history-quantity {\r\n  font-weight: bold;\r\n}\r\n\r\n.history-reason {\r\n  margin-top: 5px;\r\n  font-style: italic;\r\n  color: #555;\r\n}\r\n\r\n.history-user {\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n  color: #777;\r\n  text-align: right;\r\n}\r\n\r\n.empty-history {\r\n  padding: 30px;\r\n  text-align: center;\r\n  color: #777;\r\n  font-style: italic;\r\n}\r\n\r\n/* Responsive */\r\n@media (max-width: 768px) {\r\n  .inventory-controls {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .search-container, .filters, .actions {\r\n    width: 100%;\r\n  }\r\n  \r\n  .actions {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .inventory-table th,\r\n  .inventory-table td {\r\n    padding: 8px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style> ","import { render } from \"./AdminInventory.vue?vue&type=template&id=55f4fd9a&scoped=true\"\nimport script from \"./AdminInventory.vue?vue&type=script&lang=js\"\nexport * from \"./AdminInventory.vue?vue&type=script&lang=js\"\n\nimport \"./AdminInventory.vue?vue&type=style&index=0&id=55f4fd9a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55f4fd9a\"]])\n\nexport default __exports__","<template>\n  <div class=\"users-container\">\n    <h2 class=\"section-title\">Gestión de Usuarios</h2>\n    \n    <!-- Controles de búsqueda y filtros -->\n    <div class=\"users-controls\">\n      <div class=\"search-container\">\n        <input \n          v-model=\"searchTerm\" \n          placeholder=\"Buscar usuario...\" \n          class=\"search-input\"\n          @input=\"handleSearchInput\"\n        />\n      </div>\n      \n      <div class=\"filters\">\n        <select v-model=\"roleFilter\" @change=\"fetchUsers\" class=\"filter-select\">\n          <option value=\"\">Todos los roles</option>\n          <option \n            v-for=\"role in roles\" \n            :key=\"role.id\" \n            :value=\"role.nombre\"\n          >\n            {{ role.nombre }}\n          </option>\n        </select>\n        \n        <select v-model=\"statusFilter\" @change=\"fetchUsers\" class=\"filter-select\">\n          <option value=\"\">Todos los estados</option>\n          <option value=\"activo\">Activos</option>\n          <option value=\"inactivo\">Inactivos</option>\n        </select>\n      </div>\n      \n      <div class=\"actions\">\n        <button @click=\"showCreateForm\" class=\"create-user-btn\">\n          <span class=\"btn-icon\">➕</span> Nuevo Usuario\n        </button>\n      </div>\n    </div>\n    \n    <!-- Tabla de usuarios -->\n    <div v-if=\"loading\" class=\"loading-container\">\n      <div class=\"spinner\"></div>\n      <p>Cargando usuarios...</p>\n    </div>\n    \n    <div v-else-if=\"error\" class=\"error-container\">\n      <p class=\"error-message\">{{ error }}</p>\n      <button @click=\"fetchUsers\" class=\"retry-btn\">Reintentar</button>\n    </div>\n    \n    <div v-else-if=\"users.length === 0\" class=\"empty-state\">\n      <div class=\"empty-icon\">👥</div>\n      <p class=\"empty-title\">No se encontraron usuarios</p>\n      <p class=\"empty-description\">No hay usuarios que coincidan con los criterios de búsqueda</p>\n      <button @click=\"resetFilters\" class=\"reset-filters-btn\">Limpiar filtros</button>\n    </div>\n    \n    <div v-else class=\"users-table-container\">\n      <table class=\"users-table\">\n        <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Email</th>\n            <th>Teléfono</th>\n            <th>Rol</th>\n            <th>Estado</th>\n            <th>Fecha de registro</th>\n            <th>Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"user in users\" :key=\"user.id\" :class=\"{'inactive-user': user.estado === 'inactivo'}\">\n            <td>{{ user.nombre }}</td>\n            <td>{{ user.email }}</td>\n            <td>{{ user.telefono || '-' }}</td>\n            <td>\n              <div class=\"roles-list\">\n                <span \n                  v-for=\"(role, index) in user.roles\" \n                  :key=\"index\" \n                  class=\"role-badge\"\n                  :class=\"{'admin-role': role === 'Administrador', 'superadmin-role': role === 'Superadministrador'}\"\n                >\n                  {{ role }}\n                </span>\n              </div>\n            </td>\n            <td>\n              <span \n                class=\"status-badge\" \n                :class=\"user.estado === 'activo' ? 'active-status' : 'inactive-status'\"\n              >\n                {{ user.estado === 'activo' ? 'Activo' : 'Inactivo' }}\n              </span>\n            </td>\n            <td>{{ formatDate(user.fecha_creacion) }}</td>\n            <td>\n              <div class=\"action-buttons\">\n                <button @click=\"editUser(user)\" class=\"edit-btn\" title=\"Editar\">\n                  <span class=\"btn-icon\">✏️</span>\n                </button>\n                <button \n                  v-if=\"user.estado === 'activo'\" \n                  @click=\"deactivateUser(user)\" \n                  class=\"deactivate-btn\" \n                  title=\"Desactivar\"\n                >\n                  <span class=\"btn-icon\">🔴</span>\n                </button>\n                <button \n                  v-else \n                  @click=\"activateUser(user)\" \n                  class=\"activate-btn\" \n                  title=\"Activar\"\n                >\n                  <span class=\"btn-icon\">🟢</span>\n                </button>\n                <button @click=\"deleteUser(user)\" class=\"delete-btn\" title=\"Eliminar\">\n                  <span class=\"btn-icon\">❌</span>\n                </button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    \n    <!-- Form Modal -->\n    <div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\n      <div class=\"modal-container\">\n        <div class=\"modal-header\">\n          <h3>{{ isEditing ? 'Editar Usuario' : 'Crear Nuevo Usuario' }}</h3>\n          <button @click=\"closeModal\" class=\"close-btn\">&times;</button>\n        </div>\n        \n        <div class=\"modal-body\">\n          <!-- Mensaje de error -->\n          <div v-if=\"error\" class=\"alert alert-danger mb-3\">\n            {{ error }}\n          </div>\n          \n          <form @submit.prevent=\"saveUser\" class=\"user-form\">\n            <div class=\"form-group\">\n              <label for=\"nombre\">Nombre completo</label>\n              <input\n                type=\"text\"\n                id=\"nombre\"\n                v-model=\"formData.nombre\"\n                required\n                placeholder=\"Ej: Juan Pérez\"\n              >\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"email\">Correo electrónico</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                v-model=\"formData.email\"\n                required\n                placeholder=\"ejemplo@correo.com\"\n                :disabled=\"isEditing\"\n              >\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"telefono\">Teléfono</label>\n              <input\n                type=\"tel\"\n                id=\"telefono\"\n                v-model=\"formData.telefono\"\n                placeholder=\"Ej: 3001234567\"\n              >\n            </div>\n            \n            <div class=\"form-group\">\n              <label for=\"password\">Contraseña {{ isEditing ? '(dejar en blanco para mantener actual)' : '' }}</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                v-model=\"formData.password\"\n                :required=\"!isEditing\"\n                placeholder=\"Contraseña segura\"\n                autocomplete=\"new-password\"\n              >\n            </div>\n            \n            <div class=\"form-group\">\n              <label>Roles</label>\n              <div class=\"roles-checkboxes\">\n                <div \n                  v-for=\"role in availableRoles\" \n                  :key=\"role.id\" \n                  class=\"role-checkbox\"\n                >\n                  <input \n                    type=\"checkbox\" \n                    :id=\"'role-' + role.id\" \n                    :value=\"role.nombre\" \n                    v-model=\"formData.roles\"\n                  >\n                  <label :for=\"'role-' + role.id\">{{ role.nombre }}</label>\n                </div>\n              </div>\n            </div>\n            \n            <div v-if=\"isEditing\" class=\"form-group\">\n              <label for=\"estado\">Estado</label>\n              <select id=\"estado\" v-model=\"formData.estado\">\n                <option value=\"activo\">Activo</option>\n                <option value=\"inactivo\">Inactivo</option>\n              </select>\n            </div>\n            \n            <div class=\"form-buttons\">\n              <button type=\"button\" @click=\"closeModal\" class=\"cancel-btn\">Cancelar</button>\n              <button type=\"submit\" class=\"save-btn\">{{ isEditing ? 'Actualizar' : 'Crear' }}</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// Importamos el servicio que creamos para los datos de administración\nimport adminService from '@/services/adminDashboardService';\nimport { ref, computed, onMounted } from 'vue';\nimport { getCurrentUser, hasRole } from '@/services/authService';\nimport { alert, confirm } from '@/services/dialogService';\n\nexport default {\n  name: 'AdminUsers',\n  emits: ['user-created'], // Declarar los eventos que emite el componente\n  setup(props, { emit }) { // Obtener emit desde el contexto\n    const allUsers = ref([]); // Almacena todos los usuarios sin filtrar\n    const users = ref([]); // Usuarios filtrados para mostrar\n    const roles = ref([]);\n    const loading = ref(true);\n    const error = ref(null);\n    \n    // Filtros\n    const searchTerm = ref('');\n    const roleFilter = ref('');\n    const statusFilter = ref('');\n    \n    // Formulario\n    const showModal = ref(false);\n    const isEditing = ref(false);\n    const formData = ref({\n      id: null,\n      nombre: '',\n      email: '',\n      telefono: '',\n      password: '',\n      roles: [],\n      estado: 'activo'\n    });\n    \n    // Obtener referencias a las funciones del servicio admin\n    const { \n      getUsers, \n      getRoles, \n      createUser, \n      updateUser, \n      cambiarEstadoUsuario, \n      deleteUser: removeUser \n    } = adminService;\n    \n    // Búsqueda con debounce\n    let searchTimeout = null;\n    \n    // Obtener si el usuario actual es Administrador (no Superadministrador)\n    const isOnlyAdmin = computed(() => {\n      return hasRole('Administrador') && !hasRole('Superadministrador');\n    });\n\n    // Obtener si el usuario actual es Superadministrador\n    const isSuperAdmin = computed(() => {\n      return hasRole('Superadministrador');\n    });\n\n    // Filtrar roles disponibles según el rol del usuario actual\n    const availableRoles = computed(() => {\n      if (isOnlyAdmin.value) {\n        // Si es solo Administrador, mostrar solo el rol de Empleado\n        return roles.value.filter(role => role.nombre === 'Empleado');\n      }\n      // Si es Superadministrador, mostrar todos los roles\n      return roles.value;\n    });\n\n    // Filtrar usuarios según el rol del usuario actual\n    const filteredUsers = computed(() => {\n      // Obtener el usuario actual\n      const currentUser = getCurrentUser();\n      \n      // Filtrar usuarios\n      return allUsers.value.filter(user => {\n        // Si el usuario actual es el mismo que estamos revisando, siempre mostrarlo\n        if (currentUser && user.email === currentUser.email) {\n          return true;\n        }\n        \n        // Ocultar el Super Administrador (superadmin@example.com) solo si el usuario actual NO es Superadministrador\n        if (user.email === 'superadmin@example.com' && !isSuperAdmin.value) {\n          return false;\n        }\n        \n        // Si es solo Administrador, ocultar usuarios con rol de Superadministrador\n        if (isOnlyAdmin.value) {\n          if (user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n            return false;\n          }\n        }\n        \n        // Los usuarios ya vienen filtrados desde el backend según quién los creó\n        // Esta función solo aplica filtros adicionales de UI\n        \n        // Aplicar filtros adicionales\n        if (roleFilter.value && (!user.roles || !user.roles.includes(roleFilter.value))) {\n          return false;\n        }\n        \n        if (statusFilter.value && user.estado !== statusFilter.value) {\n          return false;\n        }\n        \n        if (searchTerm.value && searchTerm.value.length >= 2) {\n          const term = searchTerm.value.toLowerCase();\n          const matchesName = user.nombre && user.nombre.toLowerCase().includes(term);\n          const matchesEmail = user.email && user.email.toLowerCase().includes(term);\n          \n          return matchesName || matchesEmail;\n        }\n        \n        return true;\n      });\n    });\n    \n    onMounted(async () => {\n      try {\n        console.log(\"AdminUsers componente montado - inicializando...\");\n        // Inicializar la lista de usuarios vacía\n        allUsers.value = [];\n        users.value = [];\n        // Cargar datos\n        await Promise.all([\n          fetchUsers(),\n          fetchRoles()\n        ]);\n        console.log(\"Inicialización completa, usuarios cargados:\", users.value.length);\n      } catch (initError) {\n        console.error(\"Error durante la inicialización:\", initError);\n        error.value = `Error durante la inicialización: ${initError.message}`;\n      }\n    });\n    \n    // Obtener usuarios con filtros aplicados\n    const fetchUsers = async () => {\n      try {\n        loading.value = true;\n        error.value = '';\n        \n        // Limpiar la lista de usuarios actual para evitar datos residuales\n        allUsers.value = [];\n        users.value = [];\n        \n        try {\n          console.log('Obteniendo usuarios con filtros:', {\n            searchTerm: searchTerm.value,\n            role: roleFilter.value,\n            status: statusFilter.value\n          });\n          \n          const response = await getUsers({\n            searchTerm: searchTerm.value,\n            role: roleFilter.value,\n            status: statusFilter.value\n          });\n          \n          if (response && response.success) {\n            console.log(`Recibidos ${response.data.length} usuarios de la API`);\n            \n            // Guardar usuarios en la lista local\n            allUsers.value = response.data;\n            \n            // Aplicar filtro para ocultar superadministradores y superadmin@example.com\n            users.value = filteredUsers.value;\n            return; // Salir de la función si todo fue exitoso\n          }\n          \n          // Si llegamos aquí, hubo algún problema con la respuesta\n          console.warn(\"Respuesta no exitosa de la API o formato incorrecto:\", response);\n          throw new Error(response?.message || 'Error al cargar usuarios');\n          \n        } catch (apiError) {\n          console.error(\"Error al llamar a la API:\", apiError);\n          throw apiError; // Propagar el error para que se maneje en el bloque catch externo\n        }\n        \n      } catch (err) {\n        console.error('Error general al cargar usuarios:', err);\n        error.value = `Error al cargar usuarios: ${err.message || 'Error desconocido'}`;\n        // Inicializar arrays vacíos para evitar errores\n        allUsers.value = [];\n        users.value = [];\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Obtener roles disponibles\n    const fetchRoles = async () => {\n      try {\n        try {\n          const response = await getRoles();\n          \n          if (response && response.success) {\n            roles.value = Array.isArray(response.data) ? response.data : [];\n            return; // Salir si todo fue exitoso\n          }\n          \n          // Si llegamos aquí, hubo algún problema con la respuesta\n          console.warn(\"Respuesta no exitosa de la API de roles:\", response);\n          throw new Error(response?.message || 'Error al cargar roles');\n          \n        } catch (apiError) {\n          console.error(\"Error al llamar a la API de roles:\", apiError);\n          \n          // Usar roles básicos cuando la API falla para mantener la funcionalidad\n          roles.value = [\n            { id: 1, nombre: 'Superadministrador', descripcion: 'Control total del sistema' },\n            { id: 2, nombre: 'Administrador', descripcion: 'Gestión de usuarios y configuración' },\n            { id: 3, nombre: 'Empleado', descripcion: 'Operaciones básicas' }\n          ];\n          \n          console.log(\"Usando roles básicos para mantener la funcionalidad:\", roles.value.length);\n        }\n      } catch (err) {\n        console.error('Error general al cargar roles:', err);\n        // Inicializar con roles básicos para evitar errores\n        roles.value = [\n          { id: 1, nombre: 'Superadministrador' },\n          { id: 2, nombre: 'Administrador' },\n          { id: 3, nombre: 'Empleado' }\n        ];\n      }\n    };\n    \n    // Manejar cambios en el campo de búsqueda con debounce\n    const handleSearchInput = () => {\n      clearTimeout(searchTimeout);\n      searchTimeout = setTimeout(() => {\n        // Si la búsqueda está vacía o tiene al menos 2 caracteres, realizar la búsqueda\n        if (searchTerm.value === '' || searchTerm.value.length >= 2) {\n          fetchUsers();\n        }\n      }, 300);\n    };\n    \n    // Resetear filtros\n    const resetFilters = () => {\n      searchTerm.value = '';\n      roleFilter.value = '';\n      statusFilter.value = '';\n      fetchUsers();\n    };\n    \n    // Mostrar formulario de creación\n    const showCreateForm = () => {\n      isEditing.value = false;\n      formData.value = {\n        id: null,\n        nombre: '',\n        email: '',\n        telefono: '',\n        password: '',\n        roles: ['Empleado'], // Rol por defecto\n        estado: 'activo'\n      };\n      showModal.value = true;\n    };\n    \n    // Editar usuario\n    const editUser = (user) => {\n      // No permitir editar usuarios superadministradores si el usuario actual es solo administrador\n      if (isOnlyAdmin.value && user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n        alert('No tienes permisos para editar usuarios con rol de Superadministrador');\n        return;\n      }\n\n      isEditing.value = true;\n      formData.value = {\n        id: user.id,\n        nombre: user.nombre,\n        email: user.email,\n        telefono: user.telefono || '',\n        password: '', // Dejamos vacío para mantener la contraseña actual\n        roles: [...user.roles],\n        estado: user.estado\n      };\n      showModal.value = true;\n    };\n    \n    // Guardar usuario (crear o actualizar)\n    const saveUser = async () => {\n      try {\n        loading.value = true;\n        error.value = ''; // Limpiar errores previos\n        \n        // Validar que al menos se seleccionó un rol\n        if (!formData.value.roles.length) {\n          await alert('Debe seleccionar al menos un rol para el usuario');\n          loading.value = false;\n          return;\n        }\n\n        // Validar que un Administrador no asigne roles superiores\n        if (isOnlyAdmin.value) {\n          // Filtrar los roles para mantener solo el de Empleado\n          formData.value.roles = formData.value.roles.filter(role => role === 'Empleado');\n          \n          // Si después del filtro no queda ningún rol, añadimos Empleado\n          if (formData.value.roles.length === 0) {\n            formData.value.roles = ['Empleado'];\n          }\n        }\n        \n        if (isEditing.value) {\n          // Filtrar para enviar solo los campos necesarios\n          const userData = {\n            nombre: formData.value.nombre,\n            telefono: formData.value.telefono,\n            roles: formData.value.roles,\n            estado: formData.value.estado\n          };\n          \n          // Si se proporciona una contraseña, incluirla\n          if (formData.value.password) {\n            userData.password = formData.value.password;\n          }\n          \n          const response = await updateUser(formData.value.id, userData);\n          \n          if (response && response.success) {\n            await alert(response.message || 'Usuario actualizado exitosamente');\n            \n            // Actualizar el usuario en la lista local\n            const index = allUsers.value.findIndex(u => u.id === formData.value.id);\n            if (index !== -1) {\n              allUsers.value[index] = { ...allUsers.value[index], ...userData };\n              // Refrescar la lista de usuarios filtrados\n              users.value = filteredUsers.value;\n            } else {\n              // Si no se encuentra el usuario, refrescar toda la lista\n              await fetchUsers();\n            }\n          } else {\n            throw new Error(response?.message || 'Error al actualizar usuario');\n          }\n        } else {\n          // Crear nuevo usuario\n          const userData = {\n            nombre: formData.value.nombre,\n            email: formData.value.email,\n            password: formData.value.password,\n            telefono: formData.value.telefono,\n            roles: formData.value.roles,\n            fecha_creacion: new Date().toISOString() // Añadir fecha de creación\n          };\n          \n          try {\n            console.log(\"Llamando a createUser con:\", userData);\n            const response = await createUser(userData);\n            \n            if (response && response.success) {\n              await alert(response.message || 'Usuario creado exitosamente');\n              showModal.value = false; // Cerrar el modal después de crear exitosamente\n              \n              // Añadir directamente el usuario creado a la lista local\n              if (response.data) {\n                // Asegurarse de que el usuario tenga fecha de creación\n                const newUser = {\n                  ...response.data,\n                  fecha_creacion: response.data.fecha_creacion || new Date().toISOString()\n                };\n                allUsers.value = [newUser, ...allUsers.value];\n                // Refrescar la lista de usuarios filtrados\n                users.value = filteredUsers.value;\n              } else {\n                // Si no tenemos los datos del usuario creado, refrescar toda la lista\n                await fetchUsers();\n              }\n              \n              // Emitir evento para refrescar estadísticas en el dashboard\n              emit('user-created');\n            } else {\n              throw new Error(response?.message || 'Error al crear usuario');\n            }\n          } catch (createError) {\n            console.error('Error al crear usuario:', createError);\n            error.value = createError.message || 'Error al crear usuario';\n            // No cerrar el modal para permitir corregir el error\n          }\n        }\n      } catch (err) {\n        console.error('Error al guardar el usuario:', err);\n        error.value = err.message || 'Error al guardar el usuario';\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Activar usuario\n    const activateUser = async (user) => {\n      // No permitir activar usuarios superadministradores si el usuario actual es solo administrador\n      if (isOnlyAdmin.value && user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n        alert('No tienes permisos para modificar usuarios con rol de Superadministrador');\n        return;\n      }\n\n      try {\n        const confirmed = await confirm(\n          `¿Estás seguro de que deseas activar el usuario ${user.nombre}?`,\n          { \n            title: 'Confirmar activación',\n            confirmText: 'Activar',\n            cancelText: 'Cancelar' \n          }\n        );\n        \n        if (confirmed) {\n          loading.value = true;\n          \n          console.log(`Activando usuario con ID: ${user.id}`);\n          const response = await cambiarEstadoUsuario(user.id, 'activo');\n          \n          if (response && response.success) {\n            await alert(response.message || 'Usuario activado exitosamente');\n            \n            // Actualizar estado del usuario localmente en la lista\n            const index = allUsers.value.findIndex(u => u.id === user.id);\n            if (index !== -1) {\n              allUsers.value[index].estado = 'activo';\n              // Refrescar la lista de usuarios filtrados\n              users.value = filteredUsers.value;\n            }\n          } else {\n            throw new Error(response?.message || 'Error al activar usuario');\n          }\n        }\n      } catch (err) {\n        console.error('Error al activar usuario:', err);\n        await alert(`Error al activar usuario: ${err.message || 'Error desconocido'}`);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Desactivar usuario\n    const deactivateUser = async (user) => {\n      // No permitir desactivar usuarios superadministradores si el usuario actual es solo administrador\n      if (isOnlyAdmin.value && user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n        alert('No tienes permisos para modificar usuarios con rol de Superadministrador');\n        return;\n      }\n\n      try {\n        const confirmed = await confirm(\n          `¿Estás seguro de que deseas desactivar el usuario ${user.nombre}? No podrá acceder al sistema mientras esté inactivo.`,\n          { title: 'Confirmar desactivación' }\n        );\n        \n        if (confirmed) {\n          loading.value = true;\n          \n          console.log(`Desactivando usuario con ID: ${user.id}`);\n          const response = await cambiarEstadoUsuario(user.id, 'inactivo');\n          \n          if (response && response.success) {\n            await alert(response.message || 'Usuario desactivado exitosamente');\n            \n            // Actualizar estado del usuario localmente en la lista\n            const index = allUsers.value.findIndex(u => u.id === user.id);\n            if (index !== -1) {\n              allUsers.value[index].estado = 'inactivo';\n              // Refrescar la lista de usuarios filtrados\n              users.value = filteredUsers.value;\n            }\n          } else {\n            throw new Error(response?.message || 'Error al desactivar usuario');\n          }\n        }\n      } catch (err) {\n        console.error('Error al desactivar usuario:', err);\n        await alert(`Error al desactivar usuario: ${err.message || 'Error desconocido'}`);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Eliminar usuario\n    const deleteUser = async (user) => {\n      // No permitir eliminar usuarios superadministradores si el usuario actual es solo administrador\n      if (isOnlyAdmin.value && user.roles && Array.isArray(user.roles) && user.roles.includes('Superadministrador')) {\n        alert('No tienes permisos para eliminar usuarios con rol de Superadministrador');\n        return;\n      }\n\n      try {\n        const confirmed = await confirm(\n          `¿Estás seguro de que deseas eliminar permanentemente el usuario ${user.nombre}? Esta acción no se puede deshacer.`,\n          { \n            title: 'Confirmar eliminación',\n            confirmText: 'Eliminar',\n            cancelText: 'Cancelar' \n          }\n        );\n        \n        if (confirmed) {\n          loading.value = true;\n          \n          console.log(`Eliminando usuario con ID: ${user.id}`);\n          const response = await removeUser(user.id);\n          \n          if (response && response.success) {\n            await alert(response.message || 'Usuario eliminado exitosamente');\n            \n            // Eliminar usuario de la lista local\n            allUsers.value = allUsers.value.filter(u => u.id !== user.id);\n            // Refrescar la lista de usuarios filtrados\n            users.value = filteredUsers.value;\n          } else {\n            throw new Error(response?.message || 'Error al eliminar usuario');\n          }\n        }\n      } catch (err) {\n        console.error('Error al eliminar usuario:', err);\n        await alert(`Error al eliminar usuario: ${err.message || 'Error desconocido'}`);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // Cerrar modal\n    const closeModal = () => {\n      showModal.value = false;\n    };\n    \n    // Formatear fecha\n    const formatDate = (dateStr) => {\n      // Si no hay fecha, usar la fecha actual en lugar de mostrar N/A\n      if (!dateStr) {\n        dateStr = new Date().toISOString();\n      }\n      \n      try {\n        const date = new Date(dateStr);\n        if (isNaN(date.getTime())) return 'Fecha inválida';\n        \n        return new Intl.DateTimeFormat('es-ES', {\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        }).format(date);\n      } catch (e) {\n        return 'Fecha inválida';\n      }\n    };\n    \n    return {\n      users,\n      roles,\n      loading,\n      error,\n      searchTerm,\n      roleFilter,\n      statusFilter,\n      showModal,\n      isEditing,\n      formData,\n      fetchUsers,\n      handleSearchInput,\n      resetFilters,\n      showCreateForm,\n      editUser,\n      saveUser,\n      activateUser,\n      deactivateUser,\n      deleteUser,\n      closeModal,\n      formatDate,\n      availableRoles,\n      isOnlyAdmin,\n      filteredUsers\n    };\n  }\n}\n</script>\n\n<style scoped>\n.users-container {\n  padding: 0;\n}\n\n.section-title {\n  font-size: 24px;\n  margin-bottom: 30px;\n  color: #333;\n  border-bottom: 2px solid #4CAF50;\n  padding-bottom: 10px;\n}\n\n/* Controles y filtros */\n.users-controls {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-bottom: 30px;\n}\n\n.search-container {\n  flex-grow: 1;\n  min-width: 250px;\n}\n\n.search-input {\n  width: 100%;\n  padding: 10px 15px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n}\n\n.filters {\n  display: flex;\n  gap: 10px;\n}\n\n.filter-select {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: white;\n}\n\n.actions {\n  margin-left: auto;\n}\n\n.create-user-btn {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  transition: background-color 0.3s;\n}\n\n.create-user-btn:hover {\n  background-color: #45a049;\n}\n\n.btn-icon {\n  font-size: 16px;\n}\n\n/* Estados de carga y error */\n.loading-container, .error-container, .empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 50px 20px;\n  text-align: center;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  margin: 20px 0;\n}\n\n.spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  border-left-color: #4CAF50;\n  animation: spin 1s linear infinite;\n  margin-bottom: 15px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.error-message {\n  color: #f44336;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n\n.retry-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.retry-btn:hover {\n  background-color: #0b7dda;\n}\n\n.empty-icon {\n  font-size: 48px;\n  color: #ccc;\n  margin-bottom: 10px;\n}\n\n.empty-title {\n  font-size: 20px;\n  color: #666;\n  margin-bottom: 10px;\n}\n\n.empty-description {\n  color: #888;\n  margin-bottom: 20px;\n}\n\n.reset-filters-btn {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.reset-filters-btn:hover {\n  background-color: #45a049;\n}\n\n/* Tabla de usuarios */\n.users-table-container {\n  overflow-x: auto;\n  margin-top: 20px;\n}\n\n.users-table {\n  width: 100%;\n  border-collapse: collapse;\n  box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.users-table th, .users-table td {\n  padding: 15px;\n  text-align: left;\n}\n\n.users-table th {\n  background-color: #4CAF50;\n  color: white;\n  font-weight: normal;\n}\n\n.users-table tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\n.users-table tr:hover {\n  background-color: #f1f1f1;\n}\n\n.inactive-user {\n  opacity: 0.7;\n  background-color: #f5f5f5 !important;\n}\n\n/* Badges */\n.roles-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n}\n\n.role-badge {\n  padding: 3px 8px;\n  border-radius: 20px;\n  font-size: 12px;\n  background-color: #e0e0e0;\n  color: #333;\n}\n\n.admin-role {\n  background-color: #2196F3;\n  color: white;\n}\n\n.superadmin-role {\n  background-color: #673AB7;\n  color: white;\n}\n\n.status-badge {\n  padding: 3px 8px;\n  border-radius: 20px;\n  font-size: 12px;\n}\n\n.active-status {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.inactive-status {\n  background-color: #f44336;\n  color: white;\n}\n\n/* Botones de acción */\n.action-buttons {\n  display: flex;\n  gap: 5px;\n}\n\n.edit-btn, .activate-btn, .deactivate-btn, .delete-btn {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s;\n}\n\n.edit-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.edit-btn:hover {\n  background-color: #0b7dda;\n}\n\n.activate-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.activate-btn:hover {\n  background-color: #45a049;\n}\n\n.deactivate-btn {\n  background-color: #FF9800;\n  color: white;\n}\n\n.deactivate-btn:hover {\n  background-color: #e68a00;\n}\n\n.delete-btn {\n  background-color: #f44336;\n  color: white;\n}\n\n.delete-btn:hover {\n  background-color: #d32f2f;\n}\n\n/* Modal */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.modal-container {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  animation: modalFadeIn 0.3s;\n}\n\n@keyframes modalFadeIn {\n  from { opacity: 0; transform: translateY(-20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom: 1px solid #eee;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #999;\n}\n\n.close-btn:hover {\n  color: #666;\n}\n\n.modal-body {\n  padding: 20px;\n}\n\n/* Formulario */\n.user-form {\n  display: grid;\n  gap: 15px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.form-group label {\n  color: #666;\n  font-weight: 600;\n}\n\n.form-group input, .form-group select {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.form-group input:focus, .form-group select:focus {\n  outline: none;\n  border-color: #4CAF50;\n}\n\n.form-group input:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.roles-checkboxes {\n  display: grid;\n  gap: 10px;\n}\n\n.role-checkbox {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.role-checkbox input[type=\"checkbox\"] {\n  width: auto;\n  margin: 0;\n}\n\n.form-buttons {\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.cancel-btn, .save-btn {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  flex: 1;\n}\n\n.cancel-btn {\n  background-color: #f1f1f1;\n  color: #333;\n}\n\n.cancel-btn:hover {\n  background-color: #e1e1e1;\n}\n\n.save-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.save-btn:hover {\n  background-color: #45a049;\n}\n\n@media (max-width: 768px) {\n  .users-controls {\n    flex-direction: column;\n  }\n  \n  .actions {\n    margin-left: 0;\n    width: 100%;\n  }\n  \n  .create-user-btn {\n    width: 100%;\n  }\n}\n</style>\n","import { render } from \"./AdminUsers.vue?vue&type=template&id=1ce8111d&scoped=true\"\nimport script from \"./AdminUsers.vue?vue&type=script&lang=js\"\nexport * from \"./AdminUsers.vue?vue&type=script&lang=js\"\n\nimport \"./AdminUsers.vue?vue&type=style&index=0&id=1ce8111d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1ce8111d\"]])\n\nexport default __exports__","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","/**\n * Servicio para gestionar las operaciones administrativas\n */\nimport * as storageService from './storageService';\nimport apiService from './apiService';\n\n// Lista local de usuarios para mantener estado entre llamadas\nlet localUsers = [];\n\n/**\n * Obtiene estadísticas para el dashboard de administrador\n * @returns {Promise<Object>} Estadísticas del sistema\n */\nexport async function getDashboardStats() {\n  try {\n    // En desarrollo, devolver datos simulados pero con lógica para actualizarlos\n    if (process.env.NODE_ENV === 'development') {\n      // Obtener usuarios actuales para tener un conteo real\n      const usersResponse = await getUsers();\n      \n      const userCount = (usersResponse && usersResponse.success && Array.isArray(usersResponse.data)) \n        ? usersResponse.data.length \n        : 45; // Valor por defecto si no podemos obtener el conteo real\n\n      // Calcular usuarios activos/inactivos\n      const activeUsers = usersResponse && usersResponse.success && Array.isArray(usersResponse.data)\n        ? usersResponse.data.filter(user => user.estado === 'activo').length\n        : Math.floor(userCount * 0.75); // Aproximadamente 75% activos por defecto\n        \n      const inactiveUsers = userCount - activeUsers;\n\n      console.log(`Estadísticas actualizadas: ${userCount} usuarios totales (${activeUsers} activos, ${inactiveUsers} inactivos)`);\n\n      return {\n        success: true,\n        data: {\n          totalUsers: userCount,\n          activeUsers: activeUsers,\n          inactiveUsers: inactiveUsers,\n          activePayments: 28,\n          pendingPayments: 8,\n          overduePayments: 3,\n          totalIncome: 15750000,\n          status: 'Normal',\n          lastBackup: new Date().toISOString(),\n          recentActivity: [\n            // Añadir actividad reciente de creación de usuario si se ha creado uno recientemente\n            {\n              tipo: 'user_login',\n              usuario_nombre: 'Admin',\n              accion: 'inició sesión en el sistema',\n              fecha: new Date().toISOString()\n            },\n            {\n              tipo: 'system',\n              usuario_nombre: 'Sistema',\n              accion: 'realizó una sincronización de datos',\n              fecha: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()\n            }\n          ]\n        }\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get('/admin/dashboard');\n    return response;\n  } catch (error) {\n    console.error('Error al obtener estadísticas del dashboard:', error);\n    \n    // En caso de error, devolver datos simulados básicos\n    return {\n      success: true,\n      data: {\n        totalUsers: 45,\n        activeUsers: 38,\n        inactiveUsers: 7,\n        activePayments: 28,\n        pendingPayments: 8,\n        overduePayments: 3,\n        totalIncome: 15750000,\n        status: 'Normal',\n        lastBackup: new Date().toISOString(),\n        recentActivity: [\n          {\n            tipo: 'system',\n            usuario_nombre: 'Sistema',\n            accion: 'inició en modo de respaldo',\n            fecha: new Date().toISOString()\n          }\n        ]\n      }\n    };\n  }\n}\n\n/**\n * Obtiene los elementos del menú\n * @returns {Promise<Object>} Lista de elementos del menú\n */\nexport async function getMenuItems() {\n  try {\n    // En desarrollo, simular llamada a la API\n    if (process.env.NODE_ENV === 'development') {\n      // Obtener datos del servicio de almacenamiento\n      const menuItems = await storageService.getMenuItems();\n      return {\n        success: true,\n        data: menuItems,\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get('/admin/menu-items');\n    return response;\n  } catch (error) {\n    console.error('Error al obtener elementos del menú:', error);\n    return {\n      success: false,\n      error: error.message || 'Error al obtener elementos del menú'\n    };\n  }\n}\n\n/**\n * Obtiene los elementos vendidos para el inventario\n * @returns {Promise<Object>} Lista de elementos vendidos\n */\nexport async function getSoldItems() {\n  try {\n    // En desarrollo, simular llamada a la API\n    if (process.env.NODE_ENV === 'development') {\n      return {\n        success: true,\n        data: [\n          { id: 1, name: 'Hamburguesa Clásica', quantity: 45, price: 12000 },\n          { id: 2, name: 'Pizza Margherita', quantity: 38, price: 18000 },\n          { id: 3, name: 'Ensalada César', quantity: 22, price: 9000 },\n          { id: 4, name: 'Pasta Carbonara', quantity: 30, price: 15000 },\n          { id: 5, name: 'Sushi Variado', quantity: 15, price: 25000 }\n        ]\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get('/admin/sold-items');\n    return response;\n  } catch (error) {\n    console.error('Error al obtener elementos vendidos:', error);\n    return {\n      success: false,\n      error: error.message || 'Error al obtener elementos vendidos'\n    };\n  }\n}\n\n/**\n * Obtiene los usuarios del sistema\n * @param {Object} options Opciones de filtrado y paginación\n * @returns {Promise<Array>} Lista de usuarios\n */\nexport async function getUsers(options = {}) {\n  try {\n    // Construir la URL con los parámetros de consulta\n    let url = '/admin/users';\n    const queryParams = [];\n    \n    if (options.searchTerm) {\n      queryParams.push(`search=${encodeURIComponent(options.searchTerm)}`);\n    }\n    \n    if (options.role) {\n      queryParams.push(`role=${encodeURIComponent(options.role)}`);\n    }\n    \n    if (options.status) {\n      queryParams.push(`status=${encodeURIComponent(options.status)}`);\n    }\n    \n    if (queryParams.length > 0) {\n      url += `?${queryParams.join('&')}`;\n    }\n    \n    console.log('Solicitando usuarios a la API:', url);\n    \n    // Realizar la petición a la API\n    const response = await apiService.get(url);\n    \n    // Verificar si la respuesta es válida\n    if (response && response.success) {\n      console.log(`Recibidos ${response.data.length} usuarios de la API`);\n      \n      // Guardar los usuarios en la variable local para uso futuro\n      localUsers = response.data;\n      \n      return {\n        success: true,\n        data: response.data\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al obtener usuarios');\n  } catch (error) {\n    console.error('Error al obtener usuarios:', error);\n    \n    // Si hay un error, devolver los usuarios locales si existen\n    if (localUsers.length > 0) {\n      console.log('Usando usuarios en caché:', localUsers.length);\n      return {\n        success: true,\n        data: localUsers\n      };\n    }\n    \n    // Si no hay datos en caché, mostrar error pero no usar datos simulados\n    return {\n      success: false,\n      message: `Error al obtener usuarios: ${error.message}`,\n      data: []\n    };\n  }\n}\n\n/**\n * Obtiene los roles disponibles en el sistema\n * @returns {Promise<Object>} Lista de roles\n */\nexport async function getRoles() {\n  try {\n    // Realizar la petición a la API\n    const response = await apiService.get('/admin/roles');\n    \n    if (response && response.success) {\n      return response;\n    }\n    \n    throw new Error(response?.message || 'Error al obtener roles');\n  } catch (error) {\n    console.error('Error al obtener roles:', error);\n    \n    // En caso de error, devolver una lista básica de roles para mantener la funcionalidad\n    return {\n      success: false,\n      message: error.message,\n      data: [\n        { id: 1, nombre: 'Superadministrador', descripcion: 'Control total del sistema' },\n        { id: 2, nombre: 'Administrador', descripcion: 'Gestión de usuarios y configuración' },\n        { id: 3, nombre: 'Empleado', descripcion: 'Operaciones básicas' }\n      ]\n    };\n  }\n}\n\n/**\n * Crea un nuevo usuario\n * @param {Object} userData - Datos del nuevo usuario\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function createUser(userData) {\n  try {\n    // Validar datos mínimos\n    if (!userData.nombre || !userData.email || !userData.password) {\n      return {\n        success: false,\n        message: 'Faltan datos obligatorios'\n      };\n    }\n    \n    console.log('Enviando solicitud para crear usuario:', userData.email);\n    \n    // Realizar la petición a la API\n    const response = await apiService.post('/admin/users', userData);\n    \n    if (response && response.success) {\n      console.log('Usuario creado exitosamente:', response.data?.email);\n      \n      // Usar los datos devueltos por el backend\n      const newUser = response.data || {\n        id: Date.now(), // ID temporal si no hay uno real\n        nombre: userData.nombre,\n        email: userData.email,\n        telefono: userData.telefono || '',\n        roles: userData.roles,\n        estado: 'activo',\n        fecha_creacion: new Date().toISOString()\n      };\n      \n      // Actualizar la lista local de usuarios\n      localUsers = [newUser, ...localUsers];\n      \n      return {\n        success: true,\n        message: response.message || 'Usuario creado correctamente',\n        data: newUser\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al crear usuario');\n  } catch (error) {\n    console.error('Error al crear usuario:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al crear usuario'\n    };\n  }\n}\n\n/**\n * Actualiza un usuario existente\n * @param {number} userId - ID del usuario a actualizar\n * @param {Object} userData - Nuevos datos del usuario\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function updateUser(userId, userData) {\n  try {\n    console.log(`Actualizando usuario ${userId}:`, userData);\n    \n    // Realizar la petición a la API\n    const response = await apiService.put(`/admin/users/${userId}`, userData);\n    \n    if (response && response.success) {\n      console.log('Usuario actualizado exitosamente');\n      \n      // Actualizar el usuario en la lista local\n      const userIndex = localUsers.findIndex(u => u.id === userId);\n      if (userIndex !== -1) {\n        localUsers[userIndex] = {\n          ...localUsers[userIndex],\n          ...userData,\n          // Mantener el email y el ID original\n          id: userId,\n          email: localUsers[userIndex].email\n        };\n      }\n      \n      return {\n        success: true,\n        message: response.message || 'Usuario actualizado correctamente',\n        data: response.user\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al actualizar usuario');\n  } catch (error) {\n    console.error('Error al actualizar usuario:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al actualizar usuario'\n    };\n  }\n}\n\n/**\n * Cambia el estado de un usuario (activo/inactivo)\n * @param {number} userId - ID del usuario\n * @param {string} estado - Nuevo estado ('activo' o 'inactivo')\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function cambiarEstadoUsuario(userId, estado) {\n  try {\n    // Validar estado\n    if (estado !== 'activo' && estado !== 'inactivo') {\n      return {\n        success: false,\n        message: 'Estado inválido'\n      };\n    }\n    \n    console.log(`Cambiando estado de usuario ${userId} a ${estado}`);\n    \n    // Convertir estado a valor numérico para la API (1 = activo, 0 = inactivo)\n    const activo = estado === 'activo' ? 1 : 0;\n    \n    // Realizar la petición a la API\n    const response = await apiService.put(`/admin/users/${userId}`, { \n      activo \n    });\n    \n    if (response && response.success) {\n      console.log(`Estado de usuario cambiado exitosamente a ${estado}`);\n      \n      // Actualizar el usuario en la lista local\n      const userIndex = localUsers.findIndex(u => u.id === userId);\n      if (userIndex !== -1) {\n        localUsers[userIndex].estado = estado;\n      }\n      \n      return {\n        success: true,\n        message: `Usuario ${estado === 'activo' ? 'activado' : 'desactivado'} correctamente`,\n        data: {\n          id: userId,\n          estado\n        }\n      };\n    }\n    \n    throw new Error(response?.message || `Error al ${estado === 'activo' ? 'activar' : 'desactivar'} usuario`);\n  } catch (error) {\n    console.error(`Error al cambiar estado de usuario a ${estado}:`, error);\n    return {\n      success: false,\n      message: error.message || `Error al ${estado === 'activo' ? 'activar' : 'desactivar'} usuario`\n    };\n  }\n}\n\n/**\n * Elimina un usuario\n * @param {number} userId - ID del usuario a eliminar\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function deleteUser(userId) {\n  try {\n    console.log(`Eliminando usuario ${userId}`);\n    \n    // Realizar la petición a la API\n    const response = await apiService.delete(`/admin/users/${userId}`);\n    \n    if (response && response.success) {\n      console.log('Usuario eliminado exitosamente');\n      \n      // Eliminar el usuario de la lista local\n      localUsers = localUsers.filter(u => u.id !== userId);\n      \n      return {\n        success: true,\n        message: response.message || 'Usuario eliminado correctamente'\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al eliminar usuario');\n  } catch (error) {\n    console.error('Error al eliminar usuario:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al eliminar usuario'\n    };\n  }\n}\n\n/**\n * Obtiene los registros del sistema\n * @returns {Promise<Object>} Lista de logs\n */\nexport async function getLogs() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        success: true,\n        data: [\n          {\n            id: 1,\n            timestamp: new Date().toISOString(),\n            type: 'info',\n            user: 'Admin',\n            message: 'Inicio de sesión exitoso',\n            details: { ip: '192.168.1.1', userAgent: 'Chrome/96.0' }\n          },\n          {\n            id: 2,\n            timestamp: new Date(Date.now() - 3600000).toISOString(), // 1 hora atrás\n            type: 'warning',\n            user: 'Sistema',\n            message: 'Intento de acceso fallido',\n            details: { ip: '203.0.113.1', userAgent: 'Edge/96.0', attempts: 3 }\n          },\n          {\n            id: 3,\n            timestamp: new Date(Date.now() - 7200000).toISOString(), // 2 horas atrás\n            type: 'error',\n            user: 'Sistema',\n            message: 'Error en la creación de backup',\n            details: { error: 'Espacio insuficiente', code: 'E0023' }\n          },\n          {\n            id: 4,\n            timestamp: new Date(Date.now() - 86400000).toISOString(), // 1 día atrás\n            type: 'success',\n            user: 'Juan Pérez',\n            message: 'Nuevo usuario creado',\n            details: { newUser: 'carlos@ejemplo.com' }\n          }\n        ]\n      });\n    }, 500);\n  });\n}\n\n/**\n * Descarga los registros del sistema en formato CSV\n * @returns {Promise<Object>} Resultado de la operación con datos CSV\n */\nexport async function downloadLogsCSV() {\n  try {\n    // Primero obtenemos los logs\n    const logsResponse = await getLogs();\n    \n    if (!logsResponse.success || !Array.isArray(logsResponse.data)) {\n      throw new Error('No se pudieron obtener los logs para descargar');\n    }\n    \n    // Convertir los logs a formato CSV\n    const logs = logsResponse.data;\n    \n    // Cabeceras del CSV\n    const headers = ['ID', 'Fecha', 'Tipo', 'Usuario', 'Mensaje', 'Detalles'];\n    \n    // Filas de datos\n    const rows = logs.map(log => [\n      log.id || '',\n      log.timestamp || '',\n      log.type || '',\n      log.user || 'Sistema',\n      log.message || '',\n      log.details ? JSON.stringify(log.details) : ''\n    ]);\n    \n    // Combinar cabeceras y filas\n    const csvContent = [\n      headers.join(','),\n      ...rows.map(row => row.map(cell => `\"${String(cell).replace(/\"/g, '\"\"')}\"`).join(','))\n    ].join('\\n');\n    \n    return {\n      success: true,\n      data: csvContent,\n      message: 'Logs descargados correctamente'\n    };\n  } catch (error) {\n    console.error('Error al descargar logs en CSV:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al descargar logs'\n    };\n  }\n}\n\n/**\n * Obtiene un elemento del menú por su ID\n * @param {string} itemId - ID del elemento a obtener\n * @returns {Promise<Object>} Elemento del menú\n */\nexport async function getMenuItem(itemId) {\n  try {\n    // En desarrollo, usar el servicio de almacenamiento local\n    if (process.env.NODE_ENV === 'development') {\n      const menuItems = await storageService.getMenuItems();\n      const item = menuItems.find(item => item.id === itemId);\n      \n      if (!item) {\n        return {\n          success: false,\n          message: 'Elemento no encontrado'\n        };\n      }\n      \n      return {\n        success: true,\n        data: item\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get(`/admin/menu-items/${itemId}`);\n    return response;\n  } catch (error) {\n    console.error(`Error al obtener elemento del menú con ID ${itemId}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Actualiza el stock de un elemento del inventario\n * @param {string} itemId - ID del elemento a actualizar\n * @param {number} newStock - Nuevo valor de stock\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function updateItemStock(itemId, newStock) {\n  try {\n    // Realizar la petición a la API\n    const response = await apiService.put(`/admin/menu-items/${itemId}/stock`, { stock: newStock });\n    \n    if (response && response.success) {\n      return {\n        success: true,\n        message: 'Stock actualizado correctamente',\n        data: response.data\n      };\n    }\n    \n    throw new Error(response?.message || 'Error al actualizar stock');\n  } catch (error) {\n    console.error('Error al actualizar stock:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al actualizar stock'\n    };\n  }\n}\n\n/**\n * Realiza un respaldo del sistema\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function createBackup() {\n  try {\n    // En desarrollo, simular respaldo\n    if (process.env.NODE_ENV === 'development') {\n      // Simular tiempo de procesamiento\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      const backupId = Date.now().toString();\n      const backupDate = new Date().toISOString();\n      \n      console.log(`Respaldo creado: ${backupId} (${backupDate})`);\n      \n      return {\n        success: true,\n        message: 'Respaldo creado correctamente',\n        data: {\n          id: backupId,\n          fecha: backupDate,\n          tamaño: '2.3 MB',\n          estado: 'Completado'\n        }\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.post('/admin/backups');\n    return response;\n  } catch (error) {\n    console.error('Error al crear respaldo:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al crear respaldo'\n    };\n  }\n}\n\n/**\n * Obtiene la lista de respaldos\n * @returns {Promise<Object>} Lista de respaldos\n */\nexport async function getBackups() {\n  try {\n    // En desarrollo, devolver respaldos simulados\n    if (process.env.NODE_ENV === 'development') {\n      const now = Date.now();\n      \n      return {\n        success: true,\n        data: [\n          {\n            id: '1',\n            fecha: new Date(now - 3600000).toISOString(), // 1 hora atrás\n            tamaño: '2.3 MB',\n            usuario: 'Admin',\n            estado: 'Completado',\n            tipo: 'Manual'\n          },\n          {\n            id: '2',\n            fecha: new Date(now - 86400000).toISOString(), // 1 día atrás\n            tamaño: '2.1 MB',\n            usuario: 'Sistema',\n            estado: 'Completado',\n            tipo: 'Automático'\n          },\n          {\n            id: '3',\n            fecha: new Date(now - 172800000).toISOString(), // 2 días atrás\n            tamaño: '2.0 MB',\n            usuario: 'Sistema',\n            estado: 'Completado',\n            tipo: 'Automático'\n          }\n        ]\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.get('/admin/backups');\n    return response;\n  } catch (error) {\n    console.error('Error al obtener respaldos:', error);\n    return {\n      success: false,\n      message: error.message,\n      data: []\n    };\n  }\n}\n\n/**\n * Restaura el sistema desde un respaldo\n * @param {string} backupId - ID del respaldo a restaurar\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function restoreBackup(backupId) {\n  try {\n    // En desarrollo, simular restauración\n    if (process.env.NODE_ENV === 'development') {\n      // Simular tiempo de procesamiento\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      console.log(`Restauración desde respaldo ${backupId} completada`);\n      \n      return {\n        success: true,\n        message: 'Sistema restaurado correctamente'\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.post(`/admin/backups/${backupId}/restore`);\n    return response;\n  } catch (error) {\n    console.error('Error al restaurar desde respaldo:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al restaurar desde respaldo'\n    };\n  }\n}\n\n/**\n * Elimina un respaldo\n * @param {string} backupId - ID del respaldo a eliminar\n * @returns {Promise<Object>} Resultado de la operación\n */\nexport async function deleteBackup(backupId) {\n  try {\n    // En desarrollo, simular eliminación\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`Respaldo ${backupId} eliminado`);\n      \n      return {\n        success: true,\n        message: 'Respaldo eliminado correctamente'\n      };\n    }\n    \n    // En producción, hacer la llamada a la API real\n    const response = await apiService.delete(`/admin/backups/${backupId}`);\n    return response;\n  } catch (error) {\n    console.error('Error al eliminar respaldo:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al eliminar respaldo'\n    };\n  }\n}\n","<template>\n  <div class=\"admin-dashboard\">\n    <h2>Panel de Control</h2>\n    \n    <!-- Panel de carga -->\n    <div v-if=\"loading\" class=\"loading-panel\">\n      <div class=\"spinner\"></div>\n      <p>Cargando estadísticas del dashboard...</p>\n    </div>\n    \n    <!-- Panel de error -->\n    <div v-else-if=\"error\" class=\"error-panel\">\n      <p class=\"error-message\">{{ error }}</p>\n      <button @click=\"cargarDatos\" class=\"btn btn-retry\">Reintentar</button>\n    </div>\n    \n    <!-- Contenido del dashboard -->\n    <div v-else-if=\"dashboardData\" class=\"dashboard-content\">\n      <!-- Tarjetas de estadísticas -->\n      <div class=\"stats-cards\">\n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">👤</div>\n          <div class=\"stat-value\">{{ dashboardData.estadisticas.totalUsuarios }}</div>\n          <div class=\"stat-label\">Usuarios</div>\n        </div>\n        \n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">🍽️</div>\n          <div class=\"stat-value\">{{ dashboardData.estadisticas.totalRestaurantes }}</div>\n          <div class=\"stat-label\">Restaurantes</div>\n        </div>\n        \n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">📝</div>\n          <div class=\"stat-value\">{{ dashboardData.estadisticas.totalPedidos }}</div>\n          <div class=\"stat-label\">Pedidos</div>\n        </div>\n        \n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">💰</div>\n          <div class=\"stat-value\">{{ formatCurrency(dashboardData.estadisticas.totalVentas) }}</div>\n          <div class=\"stat-label\">Ventas</div>\n        </div>\n      </div>\n      \n      <!-- Gráfico de ventas -->\n      <div class=\"chart-panel\">\n        <h3>Ventas Mensuales</h3>\n        <div class=\"chart-container\">\n          <div class=\"chart\">\n            <div \n              v-for=\"(item, index) in dashboardData.graficoVentas\" \n              :key=\"`venta-${index}`\" \n              class=\"chart-bar\"\n              :style=\"{ height: calcBarHeight(item.ventas) + '%' }\">\n              <span class=\"chart-tooltip\">{{ formatCurrency(item.ventas) }}</span>\n            </div>\n          </div>\n          <div class=\"chart-labels\">\n            <span \n              v-for=\"(item, index) in dashboardData.graficoVentas\" \n              :key=\"`label-${index}`\" \n              class=\"chart-label\">\n              {{ item.mes }}\n            </span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Paneles inferiores -->\n      <div class=\"lower-panels\">\n        <!-- Restaurantes populares -->\n        <div class=\"panel\">\n          <h3>Restaurantes Populares</h3>\n          <div class=\"restaurant-list\">\n            <div \n              v-for=\"(restaurante, index) in dashboardData.restaurantesPopulares\" \n              :key=\"`rest-${index}`\"\n              class=\"restaurant-item\">\n              <div class=\"restaurant-rank\">{{ index + 1 }}</div>\n              <div class=\"restaurant-info\">\n                <div class=\"restaurant-name\">{{ restaurante.nombre }}</div>\n                <div class=\"restaurant-orders\">{{ restaurante.pedidos }} pedidos</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Usuarios activos -->\n        <div class=\"panel\">\n          <h3>Usuarios Activos</h3>\n          <div class=\"user-list\">\n            <div \n              v-for=\"(usuario, index) in dashboardData.usuariosActivos\" \n              :key=\"`user-${index}`\"\n              class=\"user-item\">\n              <div class=\"user-avatar\">\n                {{ getInitials(usuario.nombre) }}\n              </div>\n              <div class=\"user-info\">\n                <div class=\"user-name\">{{ usuario.nombre }}</div>\n                <div class=\"user-role\">{{ usuario.rol }}</div>\n              </div>\n              <div class=\"user-access\">\n                <span class=\"access-date\">{{ formatDate(usuario.ultimoAcceso) }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Pie de página del dashboard -->\n      <div class=\"dashboard-footer\">\n        <div class=\"data-updated\">\n          Datos actualizados: {{ fechaActualizacion }}\n        </div>\n      </div>\n    </div>\n    \n    <!-- Sin datos -->\n    <div v-else class=\"no-data\">\n      <p>No hay datos disponibles para mostrar.</p>\n      <button @click=\"cargarDatos\" class=\"btn btn-retry\">Cargar datos</button>\n    </div>\n  </div>\n</template>\n\n<script>\n// Importamos el nuevo servicio\nimport { obtenerDatosDashboard } from '@/services/adminDashboardService';\n\nexport default {\n  name: 'AdminDashboard',\n  \n  data() {\n    return {\n      dashboardData: {\n        estadisticas: {\n          totalUsuarios: 0,\n          totalRestaurantes: 0,\n          totalPedidos: 0,\n          totalVentas: 0\n        },\n        graficoVentas: [],\n        restaurantesPopulares: [],\n        usuariosActivos: []\n      },\n      loading: true,\n      error: null\n    };\n  },\n  \n  async created() {\n    await this.cargarDatosDashboard();\n  },\n  \n  methods: {\n    async cargarDatosDashboard() {\n      try {\n        console.log('Cargando estadísticas del dashboard...');\n        this.loading = true;\n        \n        const respuesta = await obtenerDatosDashboard();\n        \n        if (respuesta && respuesta.success && respuesta.data) {\n          this.dashboardData = respuesta.data;\n          console.log('Datos del dashboard cargados correctamente');\n        } else {\n          console.warn('Respuesta incorrecta del API de dashboard');\n          // No hacemos nada porque el servicio ya proporciona datos de respaldo\n        }\n      } catch (error) {\n        console.error('Error al cargar datos del dashboard:', error);\n        // No hacemos nada porque el servicio ya maneja los errores\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    formatCurrency(value) {\n      return new Intl.NumberFormat('es-ES', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(value);\n    },\n    \n    formatDate(dateStr) {\n      try {\n        const date = new Date(dateStr);\n        return date.toLocaleDateString('es-ES', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (error) {\n        return dateStr;\n      }\n    },\n    \n    getInitials(name) {\n      return name\n        .split(' ')\n        .map(word => word[0])\n        .join('')\n        .toUpperCase()\n        .substring(0, 2);\n    },\n    \n    calcBarHeight(value) {\n      if (!this.dashboardData || !this.dashboardData.graficoVentas) return 0;\n      \n      const maxVenta = Math.max(\n        ...this.dashboardData.graficoVentas.map(item => item.ventas)\n      );\n      \n      return (value / maxVenta) * 80; // 80% como altura máxima\n    }\n  }\n};\n</script>\n\n<style scoped>\n.admin-dashboard {\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n}\n\nh2 {\n  margin-bottom: 20px;\n  color: #333;\n}\n\n/* Estilos para el panel de carga */\n.loading-panel {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n}\n\n.spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top: 4px solid #3498db;\n  width: 30px;\n  height: 30px;\n  animation: spin 1s linear infinite;\n  margin-bottom: 15px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Estilos para el panel de error */\n.error-panel {\n  background-color: #ffebee;\n  border-left: 4px solid #f44336;\n  padding: 15px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n}\n\n.error-message {\n  color: #d32f2f;\n  margin: 0 0 10px 0;\n}\n\n.btn-retry {\n  background-color: #2196f3;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n}\n\n.btn-retry:hover {\n  background-color: #1976d2;\n}\n\n/* Estilos para las tarjetas de estadísticas */\n.stats-cards {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n@media (max-width: 1000px) {\n  .stats-cards {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (max-width: 600px) {\n  .stats-cards {\n    grid-template-columns: 1fr;\n  }\n}\n\n.stat-card {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.stat-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n}\n\n.stat-icon {\n  font-size: 28px;\n  margin-bottom: 10px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 5px;\n}\n\n.stat-label {\n  color: #666;\n  font-size: 14px;\n}\n\n/* Estilos para el gráfico */\n.chart-panel {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\nh3 {\n  margin-top: 0;\n  margin-bottom: 15px;\n  color: #333;\n}\n\n.chart-container {\n  height: 250px;\n  margin-top: 20px;\n}\n\n.chart {\n  display: flex;\n  align-items: flex-end;\n  height: 200px;\n  gap: 10px;\n}\n\n.chart-bar {\n  flex: 1;\n  background-color: #3498db;\n  min-width: 30px;\n  border-radius: 4px 4px 0 0;\n  position: relative;\n  transition: height 0.3s;\n}\n\n.chart-bar:hover {\n  background-color: #2980b9;\n}\n\n.chart-tooltip {\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  opacity: 0;\n  transition: opacity 0.2s;\n  white-space: nowrap;\n}\n\n.chart-bar:hover .chart-tooltip {\n  opacity: 1;\n}\n\n.chart-labels {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n}\n\n.chart-label {\n  flex: 1;\n  text-align: center;\n  font-size: 12px;\n  color: #666;\n  min-width: 30px;\n}\n\n/* Estilos para paneles inferiores */\n.lower-panels {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n@media (max-width: 768px) {\n  .lower-panels {\n    grid-template-columns: 1fr;\n  }\n}\n\n.panel {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* Estilos para lista de restaurantes */\n.restaurant-item {\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #eee;\n}\n\n.restaurant-item:last-child {\n  border-bottom: none;\n}\n\n.restaurant-rank {\n  width: 24px;\n  height: 24px;\n  background-color: #f5f5f5;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: #333;\n  margin-right: 12px;\n}\n\n.restaurant-info {\n  flex: 1;\n}\n\n.restaurant-name {\n  font-weight: 500;\n  margin-bottom: 2px;\n}\n\n.restaurant-orders {\n  font-size: 12px;\n  color: #666;\n}\n\n/* Estilos para lista de usuarios */\n.user-item {\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #eee;\n}\n\n.user-item:last-child {\n  border-bottom: none;\n}\n\n.user-avatar {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #3498db;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  margin-right: 12px;\n}\n\n.user-info {\n  flex: 1;\n}\n\n.user-name {\n  font-weight: 500;\n  margin-bottom: 2px;\n}\n\n.user-role {\n  font-size: 12px;\n  color: #666;\n}\n\n.user-access {\n  font-size: 12px;\n  color: #888;\n}\n\n/* Estilos para pie de página */\n.dashboard-footer {\n  margin-top: 20px;\n  padding-top: 10px;\n  border-top: 1px solid #eee;\n  color: #888;\n  font-size: 12px;\n  text-align: right;\n}\n\n/* Sin datos */\n.no-data {\n  padding: 40px;\n  text-align: center;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  color: #666;\n}\n</style>\n","import { render } from \"./AdminDashboard.vue?vue&type=template&id=0d384ca6&scoped=true\"\nimport script from \"./AdminDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./AdminDashboard.vue?vue&type=script&lang=js\"\n\nimport \"./AdminDashboard.vue?vue&type=style&index=0&id=0d384ca6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0d384ca6\"]])\n\nexport default __exports__","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","<template>\r\n  <div class=\"logs-container\">\r\n    <h2 class=\"section-title\">Registros del Sistema</h2>\r\n    \r\n    <div class=\"logs-controls\">\r\n      <div class=\"search-box\">\r\n        <input \r\n          type=\"text\" \r\n          v-model=\"searchTerm\" \r\n          placeholder=\"Buscar en registros...\" \r\n          class=\"search-input\"\r\n          @input=\"debounceSearch\"\r\n        />\r\n        <button class=\"search-btn\">🔍</button>\r\n      </div>\r\n      \r\n      <div class=\"filters\">\r\n        <select v-model=\"typeFilter\" class=\"filter-select\" @change=\"applyFilters\">\r\n          <option value=\"\">Todos los tipos</option>\r\n          <option value=\"info\">Información</option>\r\n          <option value=\"warning\">Advertencia</option>\r\n          <option value=\"error\">Error</option>\r\n          <option value=\"success\">Éxito</option>\r\n        </select>\r\n        \r\n        <select v-model=\"dateFilter\" class=\"filter-select\" @change=\"applyFilters\">\r\n          <option value=\"\">Todas las fechas</option>\r\n          <option value=\"today\">Hoy</option>\r\n          <option value=\"yesterday\">Ayer</option>\r\n          <option value=\"week\">Esta semana</option>\r\n          <option value=\"month\">Este mes</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <div class=\"actions\">\r\n        <button @click=\"refreshLogs\" class=\"refresh-btn\">\r\n          <span class=\"btn-icon\">🔄</span> Actualizar\r\n        </button>\r\n        <button @click=\"downloadLogs\" class=\"download-btn\">\r\n          <span class=\"btn-icon\">⬇️</span> Descargar\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando registros...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"filteredLogs.length === 0\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">📝</div>\r\n      <p>No se encontraron registros</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"logs-table-wrapper\">\r\n      <table class=\"logs-table\">\r\n        <thead>\r\n          <tr>\r\n            <th class=\"timestamp-col\">Fecha y Hora</th>\r\n            <th class=\"type-col\">Tipo</th>\r\n            <th class=\"user-col\">Usuario</th>\r\n            <th class=\"message-col\">Mensaje</th>\r\n            <th class=\"actions-col\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"log in filteredLogs\" :key=\"log.id\" :class=\"'log-row ' + log.type\">\r\n            <td>{{ formatDate(log.timestamp) }}</td>\r\n            <td>\r\n              <span class=\"log-type\" :class=\"log.type\">\r\n                {{ getTypeLabel(log.type) }}\r\n              </span>\r\n            </td>\r\n            <td>{{ log.user || 'Sistema' }}</td>\r\n            <td class=\"message-cell\">{{ log.message }}</td>\r\n            <td>\r\n              <button @click=\"viewLogDetails(log)\" class=\"detail-btn\">\r\n                <span>👁️</span>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n    <div v-if=\"filteredLogs.length > 0\" class=\"pagination\">\r\n      <button \r\n        @click=\"changePage(currentPage - 1)\" \r\n        :disabled=\"currentPage === 1\"\r\n        class=\"pagination-btn\"\r\n      >\r\n        &lt; Anterior\r\n      </button>\r\n      \r\n      <div class=\"page-numbers\">\r\n        <button \r\n          v-for=\"page in displayedPages\" \r\n          :key=\"page\" \r\n          @click=\"changePage(page)\"\r\n          :class=\"['page-number', { active: currentPage === page }]\"\r\n        >\r\n          {{ page }}\r\n        </button>\r\n      </div>\r\n      \r\n      <button \r\n        @click=\"changePage(currentPage + 1)\" \r\n        :disabled=\"currentPage === totalPages\"\r\n        class=\"pagination-btn\"\r\n      >\r\n        Siguiente &gt;\r\n      </button>\r\n    </div>\r\n    \r\n    <!-- Modal para ver detalles de un log -->\r\n    <div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\r\n      <div class=\"modal-container\">\r\n        <div class=\"modal-header\">\r\n          <h3>Detalles del Registro</h3>\r\n          <button @click=\"closeModal\" class=\"close-btn\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Fecha y Hora:</span>\r\n            <span class=\"detail-value\">{{ formatDate(selectedLog.timestamp) }}</span>\r\n          </div>\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Tipo:</span>\r\n            <span class=\"detail-value\">\r\n              <span class=\"log-type\" :class=\"selectedLog.type\">\r\n                {{ getTypeLabel(selectedLog.type) }}\r\n              </span>\r\n            </span>\r\n          </div>\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Usuario:</span>\r\n            <span class=\"detail-value\">{{ selectedLog.user || 'Sistema' }}</span>\r\n          </div>\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Mensaje:</span>\r\n            <span class=\"detail-value\">{{ selectedLog.message }}</span>\r\n          </div>\r\n          <div class=\"log-detail-item\">\r\n            <span class=\"detail-label\">Detalles adicionales:</span>\r\n            <pre class=\"detail-value detail-json\">{{ JSON.stringify(selectedLog.details, null, 2) }}</pre>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button @click=\"closeModal\" class=\"close-btn\">Cerrar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { getLogs, downloadLogsCSV } from '../../services/adminService';\r\nimport { alert } from '../../services/dialogService';\r\n\r\nexport default {\r\n  name: 'AdminLogs',\r\n  setup() {\r\n    const logs = ref([]);\r\n    const loading = ref(true);\r\n    const searchTerm = ref('');\r\n    const typeFilter = ref('');\r\n    const dateFilter = ref('');\r\n    const currentPage = ref(1);\r\n    const pageSize = ref(10);\r\n    \r\n    // Modal para detalles\r\n    const showModal = ref(false);\r\n    const selectedLog = ref({});\r\n    \r\n    // Variable para setTimeout de búsqueda\r\n    let searchTimeout = null;\r\n    \r\n    onMounted(async () => {\r\n      await fetchLogs();\r\n    });\r\n    \r\n    // Obtener logs\r\n    const fetchLogs = async () => {\r\n      try {\r\n        loading.value = true;\r\n        \r\n        const response = await getLogs();\r\n        \r\n        if (response && response.success) {\r\n          logs.value = response.data || [];\r\n        } else {\r\n          throw new Error('Error al cargar logs');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener logs:', error);\r\n        await alert('Error al cargar los logs: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Formatear fecha\r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'N/A';\r\n      \r\n      try {\r\n        const date = new Date(dateStr);\r\n        if (isNaN(date.getTime())) return 'Fecha inválida';\r\n        \r\n        return new Intl.DateTimeFormat('es-ES', {\r\n          day: '2-digit',\r\n          month: '2-digit',\r\n          year: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        }).format(date);\r\n      } catch (e) {\r\n        return 'Fecha inválida';\r\n      }\r\n    };\r\n    \r\n    // Obtener etiqueta para el tipo de log\r\n    const getTypeLabel = (type) => {\r\n      switch (type) {\r\n        case 'info': return 'Información';\r\n        case 'warning': return 'Advertencia';\r\n        case 'error': return 'Error';\r\n        case 'success': return 'Éxito';\r\n        default: return type;\r\n      }\r\n    };\r\n    \r\n    // Filtrar logs\r\n    const filteredLogs = computed(() => {\r\n      let result = [...logs.value];\r\n      \r\n      // Filtrar por término de búsqueda\r\n      if (searchTerm.value) {\r\n        const term = searchTerm.value.toLowerCase();\r\n        result = result.filter(log => \r\n          (log.message && log.message.toLowerCase().includes(term)) ||\r\n          (log.user && log.user.toLowerCase().includes(term))\r\n        );\r\n      }\r\n      \r\n      // Filtrar por tipo\r\n      if (typeFilter.value) {\r\n        result = result.filter(log => log.type === typeFilter.value);\r\n      }\r\n      \r\n      // Filtrar por fecha\r\n      if (dateFilter.value) {\r\n        const now = new Date();\r\n        const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n        \r\n        switch (dateFilter.value) {\r\n          case 'today':\r\n            result = result.filter(log => {\r\n              const logDate = new Date(log.timestamp);\r\n              return logDate >= today;\r\n            });\r\n            break;\r\n          case 'yesterday':\r\n            const yesterday = new Date(today);\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            result = result.filter(log => {\r\n              const logDate = new Date(log.timestamp);\r\n              return logDate >= yesterday && logDate < today;\r\n            });\r\n            break;\r\n          case 'week':\r\n            const lastWeek = new Date(today);\r\n            lastWeek.setDate(lastWeek.getDate() - 7);\r\n            result = result.filter(log => {\r\n              const logDate = new Date(log.timestamp);\r\n              return logDate >= lastWeek;\r\n            });\r\n            break;\r\n          case 'month':\r\n            const lastMonth = new Date(today);\r\n            lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n            result = result.filter(log => {\r\n              const logDate = new Date(log.timestamp);\r\n              return logDate >= lastMonth;\r\n            });\r\n            break;\r\n        }\r\n      }\r\n      \r\n      return result;\r\n    });\r\n    \r\n    // Paginación\r\n    const totalPages = computed(() => {\r\n      return Math.ceil(filteredLogs.value.length / pageSize.value);\r\n    });\r\n    \r\n    const displayedPages = computed(() => {\r\n      const pages = [];\r\n      const maxVisiblePages = 5;\r\n      \r\n      if (totalPages.value <= maxVisiblePages) {\r\n        for (let i = 1; i <= totalPages.value; i++) {\r\n          pages.push(i);\r\n        }\r\n      } else {\r\n        let startPage = Math.max(1, currentPage.value - Math.floor(maxVisiblePages / 2));\r\n        const endPage = Math.min(totalPages.value, startPage + maxVisiblePages - 1);\r\n        \r\n        if (endPage - startPage + 1 < maxVisiblePages) {\r\n          startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n        }\r\n        \r\n        for (let i = startPage; i <= endPage; i++) {\r\n          pages.push(i);\r\n        }\r\n      }\r\n      \r\n      return pages;\r\n    });\r\n    \r\n    const paginatedLogs = computed(() => {\r\n      const startIdx = (currentPage.value - 1) * pageSize.value;\r\n      return filteredLogs.value.slice(startIdx, startIdx + pageSize.value);\r\n    });\r\n    \r\n    // Cambiar página\r\n    const changePage = (page) => {\r\n      if (page >= 1 && page <= totalPages.value) {\r\n        currentPage.value = page;\r\n      }\r\n    };\r\n    \r\n    // Debounce para la búsqueda\r\n    const debounceSearch = () => {\r\n      clearTimeout(searchTimeout);\r\n      searchTimeout = setTimeout(() => {\r\n        currentPage.value = 1;\r\n      }, 300);\r\n    };\r\n    \r\n    // Aplicar filtros\r\n    const applyFilters = () => {\r\n      currentPage.value = 1;\r\n    };\r\n    \r\n    // Actualizar logs\r\n    const refreshLogs = async () => {\r\n      await fetchLogs();\r\n      await alert('Registros actualizados correctamente');\r\n    };\r\n    \r\n    // Descargar logs\r\n    const downloadLogs = async () => {\r\n      try {\r\n        loading.value = true;\r\n        const result = await downloadLogsCSV();\r\n        \r\n        if (result && result.success) {\r\n          // En una implementación real, esto descargaría un archivo\r\n          const blob = new Blob([result.data], { type: 'text/csv;charset=utf-8;' });\r\n          const link = document.createElement('a');\r\n          const url = URL.createObjectURL(blob);\r\n          \r\n          link.setAttribute('href', url);\r\n          link.setAttribute('download', `logs_${new Date().toISOString().split('T')[0]}.csv`);\r\n          link.style.visibility = 'hidden';\r\n          \r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          \r\n          await alert('Logs descargados correctamente');\r\n        } else {\r\n          throw new Error('Error al descargar logs');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al descargar logs:', error);\r\n        await alert('Error al descargar logs: ' + (error.message || 'Error desconocido'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Ver detalles de log\r\n    const viewLogDetails = (log) => {\r\n      selectedLog.value = log;\r\n      showModal.value = true;\r\n    };\r\n    \r\n    // Cerrar modal\r\n    const closeModal = () => {\r\n      showModal.value = false;\r\n    };\r\n    \r\n    return {\r\n      logs,\r\n      loading,\r\n      searchTerm,\r\n      typeFilter,\r\n      dateFilter,\r\n      currentPage,\r\n      totalPages,\r\n      displayedPages,\r\n      filteredLogs,\r\n      showModal,\r\n      selectedLog,\r\n      formatDate,\r\n      getTypeLabel,\r\n      debounceSearch,\r\n      applyFilters,\r\n      refreshLogs,\r\n      downloadLogs,\r\n      changePage,\r\n      viewLogDetails,\r\n      closeModal\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.logs-container {\r\n  padding: 0;\r\n}\r\n\r\n.section-title {\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.logs-controls {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-box {\r\n  position: relative;\r\n  flex: 1;\r\n  min-width: 200px;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 40px 10px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 50px;\r\n  font-size: 15px;\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.05);\r\n}\r\n\r\n.search-btn {\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n}\r\n\r\n.filters {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.filter-select {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  min-width: 150px;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.refresh-btn, \r\n.download-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.refresh-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.refresh-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.download-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.download-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 16px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n  gap: 15px;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  border: 3px solid #f3f3f3;\r\n  border-top: 3px solid #4CAF50;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.empty-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 50px 20px;\r\n  color: #666;\r\n  font-style: italic;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border: 1px dashed #ddd;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n  opacity: 0.5;\r\n}\r\n\r\n.logs-table-wrapper {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.logs-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.logs-table th, \r\n.logs-table td {\r\n  padding: 15px;\r\n  text-align: left;\r\n}\r\n\r\n.logs-table th {\r\n  background-color: #f5f5f5;\r\n  font-weight: 600;\r\n}\r\n\r\n.logs-table td {\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.logs-table tr:hover td {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.timestamp-col {\r\n  width: 180px;\r\n}\r\n\r\n.type-col {\r\n  width: 120px;\r\n}\r\n\r\n.user-col {\r\n  width: 150px;\r\n}\r\n\r\n.actions-col {\r\n  width: 80px;\r\n  text-align: center;\r\n}\r\n\r\n.message-cell {\r\n  max-width: 400px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.log-type {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 50px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n}\r\n\r\n.log-type.info {\r\n  background-color: #e3f2fd;\r\n  color: #1976d2;\r\n}\r\n\r\n.log-type.warning {\r\n  background-color: #fff3e0;\r\n  color: #f57c00;\r\n}\r\n\r\n.log-type.error {\r\n  background-color: #ffebee;\r\n  color: #d32f2f;\r\n}\r\n\r\n.log-type.success {\r\n  background-color: #e8f5e9;\r\n  color: #388e3c;\r\n}\r\n\r\n.detail-btn {\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  opacity: 0.7;\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.detail-btn:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n  align-items: center;\r\n}\r\n\r\n.pagination-btn {\r\n  background-color: #f1f1f1;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.pagination-btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.pagination-btn:not(:disabled):hover {\r\n  background-color: #e1e1e1;\r\n}\r\n\r\n.page-numbers {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.page-number {\r\n  background-color: #f1f1f1;\r\n  border: none;\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.page-number.active {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.page-number:not(.active):hover {\r\n  background-color: #e1e1e1;\r\n}\r\n\r\n/* Modal de detalles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-container {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 600px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.3);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #666;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n}\r\n\r\n.log-detail-item {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.detail-label {\r\n  font-weight: bold;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #333;\r\n}\r\n\r\n.detail-value {\r\n  display: block;\r\n  color: #666;\r\n}\r\n\r\n.detail-json {\r\n  background-color: #f5f5f5;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  font-family: monospace;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 15px 20px;\r\n  border-top: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.modal-footer button {\r\n  padding: 8px 15px;\r\n  background-color: #f1f1f1;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-footer button:hover {\r\n  background-color: #e1e1e1;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .logs-controls {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .search-box, .filters, .actions {\r\n    width: 100%;\r\n  }\r\n  \r\n  .filters {\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .filter-select {\r\n    flex: 1;\r\n    min-width: 100px;\r\n  }\r\n  \r\n  .actions {\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .logs-table .timestamp-col,\r\n  .logs-table .user-col {\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./AdminLogs.vue?vue&type=template&id=4dbe11f6&scoped=true\"\nimport script from \"./AdminLogs.vue?vue&type=script&lang=js\"\nexport * from \"./AdminLogs.vue?vue&type=script&lang=js\"\n\nimport \"./AdminLogs.vue?vue&type=style&index=0&id=4dbe11f6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4dbe11f6\"]])\n\nexport default __exports__","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","createNewBackup","disabled","creating","_hoisted_4","_createTextVNode","_hoisted_5","_hoisted_3","loading","_hoisted_6","backups","length","_hoisted_7","_hoisted_8","_Fragment","_renderList","backup","id","_hoisted_9","_toDisplayString","archivo","_hoisted_10","formatDate","fecha","_hoisted_11","tamano","_hoisted_12","$event","restoreBackup","restoring","_hoisted_14","_hoisted_15","_hoisted_13","downloadBackup","_hoisted_16","deleteBackup","deleting","_hoisted_18","_hoisted_19","_hoisted_17","showRestoreModal","_withModifiers","cancelRestore","_hoisted_20","_hoisted_21","_hoisted_22","confirmRestore","_createCommentVNode","async","getBackups","Promise","resolve","setTimeout","success","data","Date","toISOString","formatDateForFilename","now","createBackup","message","backupId","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","name","setup","ref","selectedBackup","onMounted","fetchBackups","value","response","Error","sort","a","b","error","console","alert","dateStr","isNaN","getTime","Intl","DateTimeFormat","hour","minute","second","format","e","result","unshift","window","location","reload","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","confirmed","confirm","title","confirmText","cancelText","deleteBackupFromDB","filter","__exports__","render","searchTerm","placeholder","onInput","handleSearchInput","stockFilter","onChange","applyFilters","categoryFilter","refreshInventory","loadInventory","filteredProducts","product","_normalizeClass","getRowClass","includesDrink","availableQuantity","getStatusClass","getStatusText","lastUpdated","openUpdateStockModal","openHistoryModal","showUpdateModal","closeUpdateModal","selectedProduct","for","type","updateStockForm","newQuantity","min","reason","updateStock","isUpdating","_hoisted_23","_hoisted_24","showHistoryModal","_hoisted_25","_hoisted_26","_hoisted_27","closeHistoryModal","_hoisted_28","productHistory","_hoisted_29","_hoisted_30","record","index","_hoisted_31","_hoisted_32","_hoisted_33","change","_hoisted_34","_hoisted_35","_hoisted_36","userName","_hoisted_37","products","getMenuItems","map","item","stockHistory","log","err","computed","term","toLowerCase","includes","dateString","trim","currentQuantity","parseInt","difference","currentUser","getCurrentUser","historyRecord","Math","abs","previousQuantity","userId","nombre","updateItemStock","productIndex","findIndex","p","push","roleFilter","fetchUsers","roles","role","statusFilter","showCreateForm","users","resetFilters","user","estado","email","telefono","fecha_creacion","editUser","deactivateUser","activateUser","deleteUser","showModal","closeModal","isEditing","onSubmit","saveUser","formData","required","password","autocomplete","availableRoles","emits","props","emit","allUsers","getUsers","getRoles","createUser","updateUser","cambiarEstadoUsuario","removeUser","adminService","searchTimeout","isOnlyAdmin","hasRole","isSuperAdmin","filteredUsers","Array","isArray","matchesName","matchesEmail","all","fetchRoles","initError","status","warn","apiError","descripcion","clearTimeout","userData","u","newUser","createError","$TypeError","TypeError","module","exports","passed","process","apiService","get","getLogs","timestamp","details","ip","userAgent","attempts","code","downloadLogsCSV","logsResponse","logs","headers","rows","JSON","stringify","csvContent","join","row","cell","replace","itemId","newStock","put","stock","$data","_ctx","cargarDatos","dashboardData","estadisticas","totalUsuarios","totalRestaurantes","totalPedidos","$options","formatCurrency","totalVentas","graficoVentas","_normalizeStyle","height","calcBarHeight","ventas","mes","restaurantesPopulares","restaurante","pedidos","usuariosActivos","usuario","getInitials","rol","ultimoAcceso","fechaActualizacion","created","this","cargarDatosDashboard","methods","respuesta","obtenerDatosDashboard","NumberFormat","currency","toLocaleDateString","split","word","toUpperCase","substring","maxVenta","max","defineBuiltIn","uncurryThis","toString","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","prototype","append","$delete","forEach","params","undefined","arguments","$value","entries","v","k","entry","dindex","found","entriesLength","enumerable","unsafe","debounceSearch","typeFilter","_createStaticVNode","dateFilter","refreshLogs","downloadLogs","filteredLogs","getTypeLabel","viewLogDetails","changePage","currentPage","displayedPages","page","active","totalPages","selectedLog","pageSize","fetchLogs","today","logDate","yesterday","setDate","lastWeek","lastMonth","setMonth","ceil","pages","maxVisiblePages","i","startPage","floor","endPage","startIdx","slice","blob","Blob","link","url","URL","createObjectURL","visibility","getAll","$has","has","values","DESCRIPTORS","defineBuiltInAccessor","count","configurable"],"sourceRoot":""}