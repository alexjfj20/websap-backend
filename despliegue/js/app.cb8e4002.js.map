{"version":3,"file":"js/app.cb8e4002.js","mappings":"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","sources":["webpack://websap/./src/services/apiService.js","webpack://websap/./src/services/authService.js","webpack://websap/./src/App.vue","webpack://websap/./src/components/DialogContainer.vue","webpack://websap/./src/components/DialogContainer.vue?32d6","webpack://websap/./src/components/WhatsAppReservationHandler.vue","webpack://websap/./src/components/WhatsAppReservationHandler.vue?8c2a","webpack://websap/./src/components/WhatsAppSimulator.vue","webpack://websap/./src/components/WhatsAppSimulator.vue?8dd5","webpack://websap/./src/utils/whatsappSimulator.js","webpack://websap/./src/utils/testReservations.js","webpack://websap/./src/services/webSocketService.js","webpack://websap/./src/config/apiConfig.js","webpack://websap/./src/utils/connectionHandler.js","webpack://websap/./src/services/syncService.js","webpack://websap/./src/App.vue?7ccd","webpack://websap/./src/views/HomeView.vue","webpack://websap/./src/views/HomeView.vue?1da1","webpack://websap/./src/views/LoginView.vue","webpack://websap/./src/views/LoginView.vue?5755","webpack://websap/./src/router/index.js","webpack://websap/./src/services/dbInitializer.js","webpack://websap/./src/main.js","webpack://websap/./src/services/indexedDBService.js","webpack://websap/./src/services/dialogService.js","webpack://websap/./src/services/reservaService.js","webpack://websap/./src/utils/eventBus.js","webpack://websap/./src/services/imageService.js","webpack://websap/webpack/bootstrap","webpack://websap/webpack/runtime/chunk loaded","webpack://websap/webpack/runtime/compat get default export","webpack://websap/webpack/runtime/create fake namespace object","webpack://websap/webpack/runtime/define property getters","webpack://websap/webpack/runtime/ensure chunk","webpack://websap/webpack/runtime/get javascript chunk filename","webpack://websap/webpack/runtime/get mini-css chunk filename","webpack://websap/webpack/runtime/global","webpack://websap/webpack/runtime/hasOwnProperty shorthand","webpack://websap/webpack/runtime/load script","webpack://websap/webpack/runtime/make namespace object","webpack://websap/webpack/runtime/publicPath","webpack://websap/webpack/runtime/css loading","webpack://websap/webpack/runtime/jsonp chunk loading","webpack://websap/webpack/startup"],"sourcesContent":["/**\n * Servicio para manejar las peticiones API al backend\n */\n\n// URL base de la API\nconst API_URL = process.env.NODE_ENV === 'development' \n  ? 'http://localhost:3000/api' \n  : '/api';\n\n// Token de autenticación\nlet token = localStorage.getItem('token') || '';\n\n/**\n * Configura el token de autenticación\n * @param {string} newToken \n */\nconst setToken = (newToken) => {\n  token = newToken;\n  if (newToken) {\n    localStorage.setItem('token', newToken);\n  } else {\n    localStorage.removeItem('token');\n  }\n};\n\n/**\n * Realiza una petición GET a la API\n * @param {string} endpoint - Ruta de la API\n * @param {Object} options - Opciones adicionales\n * @returns {Promise<any>} - Respuesta de la API\n */\nconst get = async (endpoint, options = {}) => {\n  try {\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(token && { 'Authorization': `Bearer ${token}` }),\n      ...(options.headers || {})\n    };\n    \n    const response = await fetch(`${API_URL}${endpoint}`, {\n      method: 'GET',\n      headers,\n      ...options\n    });\n    \n    if (options.responseType === 'blob') {\n      return response.blob();\n    }\n    \n    // Si la respuesta no es JSON, devolver el texto\n    const contentType = response.headers.get('content-type');\n    if (!contentType || !contentType.includes('application/json')) {\n      const text = await response.text();\n      return {\n        success: response.ok,\n        data: text,\n        status: response.status\n      };\n    }\n    \n    const data = await response.json();\n    \n    // Si la respuesta tiene un código 401 o 403, podría ser un problema de autenticación\n    if (response.status === 401 || response.status === 403) {\n      console.warn(`Error de autenticación en ${endpoint}:`, data);\n      \n      // Si estamos en desarrollo, permitir continuar con una respuesta simulada\n      if (process.env.NODE_ENV === 'development') {\n        console.log('Modo desarrollo: devolviendo respuesta simulada para', endpoint);\n        return {\n          success: false,\n          error: data.message || 'Error de autenticación',\n          status: response.status,\n          simulatedResponse: true\n        };\n      }\n    }\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Error en la petición');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error(`Error en GET ${endpoint}:`, error);\n    throw error;\n  }\n};\n\n/**\n * Realiza una petición POST a la API\n * @param {string} endpoint - Ruta de la API\n * @param {Object} body - Cuerpo de la petición\n * @param {Object} options - Opciones adicionales\n * @returns {Promise<any>} - Respuesta de la API\n */\nconst post = async (endpoint, body = {}, options = {}) => {\n  try {\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(token && { 'Authorization': `Bearer ${token}` }),\n      ...(options.headers || {})\n    };\n    \n    const response = await fetch(`${API_URL}${endpoint}`, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n      ...options\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Error en la petición');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error(`Error en POST ${endpoint}:`, error);\n    throw error;\n  }\n};\n\n/**\n * Realiza una petición PUT a la API\n * @param {string} endpoint - Ruta de la API\n * @param {Object} body - Cuerpo de la petición\n * @param {Object} options - Opciones adicionales\n * @returns {Promise<any>} - Respuesta de la API\n */\nconst put = async (endpoint, body = {}, options = {}) => {\n  try {\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(token && { 'Authorization': `Bearer ${token}` }),\n      ...(options.headers || {})\n    };\n    \n    const response = await fetch(`${API_URL}${endpoint}`, {\n      method: 'PUT',\n      headers,\n      body: JSON.stringify(body),\n      ...options\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Error en la petición');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error(`Error en PUT ${endpoint}:`, error);\n    throw error;\n  }\n};\n\n/**\n * Realiza una petición DELETE a la API\n * @param {string} endpoint - Ruta de la API\n * @param {Object} options - Opciones adicionales\n * @returns {Promise<any>} - Respuesta de la API\n */\nconst del = async (endpoint, options = {}) => {\n  try {\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(token && { 'Authorization': `Bearer ${token}` }),\n      ...(options.headers || {})\n    };\n    \n    const response = await fetch(`${API_URL}${endpoint}`, {\n      method: 'DELETE',\n      headers,\n      ...options\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Error en la petición');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error(`Error en DELETE ${endpoint}:`, error);\n    throw error;\n  }\n};\n\nexport default {\n  setToken,\n  get,\n  post,\n  put,\n  delete: del\n};\n","import axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/api';\n\n// Función para guardar token en localStorage\nconst saveToken = (token) => {\n  localStorage.setItem('token', token);\n};\n\n// Función para obtener token de localStorage\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Función para eliminar token de localStorage\nconst removeToken = () => {\n  localStorage.removeItem('token');\n};\n\n// Configurar Axios\nconst setupAxiosInterceptors = () => {\n  // Interceptor de solicitudes\n  axios.interceptors.request.use(\n    (config) => {\n      const token = getToken();\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n  \n  // Interceptor de respuestas\n  axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      // Si el error es 401, puede ser que el token expiró\n      if (error.response && error.response.status === 401) {\n        removeToken();\n        // Redirigir a la página de login (esto debe ser manejado por el router)\n        if (window.location.pathname !== '/login') {\n          window.location.href = '/login';\n        }\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n\n// Inicializar interceptores\nsetupAxiosInterceptors();\n\n// Función para iniciar sesión\nasync function login(email, password) {\n  console.log('Intentando iniciar sesión con:', email);\n  \n  try {\n    // Limpiar cualquier información de usuario anterior\n    removeToken();\n    localStorage.removeItem('user');\n    localStorage.removeItem('isLoggedIn');\n    \n    // Intentar iniciar sesión con el backend\n    console.log('Enviando solicitud al backend:', `${API_URL}/auth/login`);\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      // No enviar cookies\n      withCredentials: false,\n      // Aumentar el timeout para evitar errores de conexión\n      timeout: 10000\n    });\n    \n    console.log('Respuesta del backend:', response.status, response.data);\n    \n    if (response.status === 200 && response.data.success) {\n      console.log('Login exitoso con el backend');\n      // Guardar token\n      const token = response.data.data.token;\n      saveToken(token);\n      \n      // Actualizar el token en el servicio API\n      import('./apiService').then(apiService => {\n        console.log('Actualizando token en apiService');\n        apiService.default.setToken(token);\n      });\n      \n      // Guardar información del usuario en localStorage\n      localStorage.setItem('user', JSON.stringify(response.data.data.user));\n      \n      // Establecer explícitamente el estado de autenticación\n      localStorage.setItem('isLoggedIn', 'true');\n      \n      return {\n        success: true,\n        user: response.data.data.user\n      };\n    } else {\n      console.error('Respuesta inesperada del servidor:', response.data);\n      throw new Error('Respuesta inesperada del servidor');\n    }\n  } catch (error) {\n    // Verificar si el error es de red o del servidor\n    if (error.response) {\n      // El servidor respondió con un código de estado fuera del rango 2xx\n      console.error('Error de respuesta del servidor:', error.response.status, error.response.data);\n      \n      // Verificar si es un error específico de usuario desactivado\n      if (error.response.data && error.response.data.message) {\n        // Si el mensaje contiene la palabra \"desactivado\", mostrar ese mensaje específico\n        if (error.response.data.message.includes('desactivado')) {\n          throw new Error(error.response.data.message);\n        }\n      }\n    } else if (error.request) {\n      // La solicitud se realizó pero no se recibió respuesta\n      console.error('No se recibió respuesta del servidor:', error.request);\n    } else {\n      // Algo sucedió al configurar la solicitud\n      console.error('Error al configurar la solicitud:', error.message);\n    }\n    \n    console.log('Fallback a autenticación local...');\n    \n    // Datos de usuarios locales para desarrollo/pruebas\n    const localUsers = [\n      {\n        id: 1,\n        email: 'superadmin@example.com',\n        password: '123456',\n        nombre: 'Super Administrador',\n        roles: ['Superadministrador']\n      },\n      {\n        id: 2,\n        email: 'admin@example.com',\n        password: '123456',\n        nombre: 'Administrador',\n        roles: ['Administrador']\n      },\n      {\n        id: 3,\n        email: 'empleado@example.com',\n        password: '123456',\n        nombre: 'Empleado',\n        roles: ['Empleado']\n      },\n      // Añadir el usuario alex para pruebas locales\n      {\n        id: 5,\n        email: 'alex@gmail.com',\n        password: 'password',\n        nombre: 'alex',\n        roles: ['Empleado']\n      }\n    ];\n    \n    // Buscar usuario local\n    const user = localUsers.find(u => u.email === email && u.password === password);\n    \n    if (user) {\n      console.log('Login exitoso con usuario local:', user.email);\n      // Si el usuario local es válido, establecer el estado de autenticación\n      localStorage.setItem('isLoggedIn', 'true');\n      \n      // Crear un token local\n      const localToken = `local_${btoa(JSON.stringify(user))}`;\n      saveToken(localToken);\n      \n      // Actualizar el token en el servicio API\n      import('./apiService').then(apiService => {\n        console.log('Actualizando token en apiService (local)');\n        apiService.default.setToken(localToken);\n      });\n      \n      // Guardar usuario en localStorage\n      localStorage.setItem('user', JSON.stringify({\n        id: user.id,\n        email: user.email,\n        nombre: user.nombre,\n        roles: user.roles\n      }));\n      \n      return {\n        success: true,\n        user: {\n          id: user.id,\n          email: user.email,\n          nombre: user.nombre,\n          roles: user.roles\n        }\n      };\n    }\n    \n    // Si no se encontró usuario local\n    throw new Error('Credenciales incorrectas');\n  }\n};\n\n// Función para cerrar sesión\nconst logout = () => {\n  removeToken();\n  localStorage.removeItem('user');\n  localStorage.removeItem('isLoggedIn');\n};\n\n// Función para verificar si el usuario está autenticado\nconst isAuthenticated = () => {\n  const token = getToken();\n  const isLoggedInFlag = localStorage.getItem('isLoggedIn') === 'true';\n  return !!token && isLoggedInFlag;\n};\n\n// Función para obtener el usuario actual\nconst getCurrentUser = () => {\n  try {\n    const userStr = localStorage.getItem('user');\n    if (!userStr) {\n      console.log('No hay usuario en localStorage');\n      return null;\n    }\n    \n    const user = JSON.parse(userStr);\n    console.log('Usuario actual obtenido de localStorage:', user.email);\n    return user;\n  } catch (error) {\n    console.error('Error al obtener el usuario actual:', error);\n    return null;\n  }\n};\n\n// Función para verificar si el usuario tiene un rol específico\nconst hasRole = (role) => {\n  const user = getCurrentUser();\n  return user && user.roles && user.roles.includes(role);\n};\n\n// Función para verificar si el usuario es administrador\nconst isAdmin = () => {\n  return hasRole('Administrador') || hasRole('Superadministrador');\n};\n\n// Función para verificar si el usuario es superadministrador\nconst isSuperAdmin = () => {\n  return hasRole('Superadministrador');\n};\n\nexport {\n  login,\n  logout,\n  isAuthenticated,\n  getCurrentUser,\n  hasRole,\n  isAdmin,\n  isSuperAdmin,\n  getToken,\n  removeToken\n};\n","<template>\n  <div id=\"app\" :class=\"{ 'dark-mode': isDarkMode }\">\n    <!-- WebSocket Status Indicator with improved messaging -->\n    <div v-if=\"wsState.reconnecting\" class=\"ws-status reconnecting\">\n      <span class=\"loading-spinner\"></span> \n      Reconectando... (Intento {{ wsState.reconnectAttempts }} de {{ wsState.maxReconnectAttempts }})\n      <button @click=\"stopReconnecting\" class=\"reconnect-btn stop-btn\">Cancelar</button>\n    </div>\n    <div v-else-if=\"wsState.error\" class=\"ws-status error\">\n      <span class=\"error-icon\">⚠️</span> Error de conexión: {{ wsState.error }}\n      <button @click=\"handleReconnect\" class=\"reconnect-btn\">Reconectar</button>\n    </div>\n    \n    <nav class=\"main-nav\" v-if=\"showNav\">\n      <div class=\"nav-container\">\n        <router-link to=\"/\" class=\"nav-logo\">WebSAP</router-link>\n        <div class=\"nav-links\">\n          <router-link to=\"/\">Inicio</router-link>\n          <router-link to=\"/about\">Acerca de</router-link>\n          <template v-if=\"isLoggedIn\">\n            <router-link to=\"/menu\">Menú</router-link>\n            <!-- Enlaces específicos según el rol -->\n            <router-link v-if=\"isSuperAdmin\" to=\"/superadmin\">Admin</router-link>\n            <router-link v-if=\"isEmployee\" to=\"/employee\">Panel Empleado</router-link>\n            <a href=\"#\" @click.prevent=\"logout\">Cerrar Sesión</a>\n          </template>\n          <template v-else>\n            <router-link to=\"/login\">Iniciar Sesión</router-link>\n            <router-link to=\"/register\">Registrarse</router-link>\n          </template>\n          \n          <!-- Dark Mode Toggle Button with Inline SVGs as fallback -->\n          <button @click=\"toggleDarkMode\" class=\"dark-mode-toggle\" aria-label=\"Cambiar modo oscuro\">\n            <template v-if=\"isDarkMode\">\n              <!-- Sol - SVG inline como respaldo -->\n              <svg v-if=\"svgFallback\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" class=\"theme-icon\">\n                <path fill=\"currentColor\" d=\"M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.758a.75.75 0 001.06-1.061l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z\" />\n              </svg>\n              <img v-else src=\"@/assets/img/sun.svg\" alt=\"Modo claro\" class=\"theme-icon\">\n            </template>\n            <template v-else>\n              <!-- Luna - SVG inline como respaldo -->\n              <svg v-if=\"svgFallback\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" class=\"theme-icon\">\n                <path fill=\"currentColor\" d=\"M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z\" />\n              </svg>\n              <img v-else src=\"@/assets/img/moon.svg\" alt=\"Modo oscuro\" class=\"theme-icon\">\n            </template>\n          </button>\n        </div>\n      </div>\n    </nav>\n    \n    <router-view />\n    \n    <!-- Componente para manejar reservas de WhatsApp (invisible) -->\n    <WhatsAppReservationHandler ref=\"whatsappHandler\" />\n    \n    <!-- Simulador de WhatsApp para pruebas -->\n    <WhatsAppSimulator />\n    \n    <!-- Dialog component for global usage -->\n    <DialogContainer />\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch, onMounted, onUnmounted, provide, nextTick } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport DialogContainer from './components/DialogContainer.vue';\nimport WhatsAppReservationHandler from './components/WhatsAppReservationHandler.vue';\nimport WhatsAppSimulator from './components/WhatsAppSimulator.vue'; // Importar el componente\nimport './utils/testReservations'; // Importar utilidades de prueba\nimport { \n  webSocketState, \n  initializeWebSocket, \n  closeWebSocket, \n  reconnect, \n  disableWebSocket \n} from './services/webSocketService';\nimport { isAuthenticated, hasRole, logout as authLogout } from './services/authService';\nimport { initSyncService } from './services/syncService';\n\nexport default {\n  name: 'App',\n  components: {\n    DialogContainer,\n    WhatsAppReservationHandler,\n    WhatsAppSimulator // Registrar el componente\n  },\n  data() {\n    return {\n      isLoggedIn: isAuthenticated(),\n      isDarkMode: localStorage.getItem('darkMode') === 'true',\n      svgFallback: false, // Variable para controlar si usamos SVG inline\n      whatsappHandler: null\n    }\n  },\n  computed: {\n    wsState() {\n      return webSocketState;\n    },\n    showNav() {\n      return !this.$route.path.match(/^\\/menu\\/[^\\/]+$/);\n    },\n    isSuperAdmin() {\n      return this.isLoggedIn && hasRole('Superadministrador');\n    },\n    isEmployee() {\n      return this.isLoggedIn && hasRole('Empleado');\n    }\n  },\n  watch: {\n    $route() {\n      this.isLoggedIn = isAuthenticated();\n    }\n  },\n  methods: {\n    logout() {\n      authLogout();\n      this.isLoggedIn = false;\n      this.$router.push('/');\n    },\n    toggleDarkMode() {\n      this.isDarkMode = !this.isDarkMode;\n      \n      // Guardar preferencia en localStorage\n      localStorage.setItem('darkMode', this.isDarkMode);\n      \n      // Aplicar el tema a la etiqueta html y al elemento body para mayor consistencia\n      nextTick(() => {\n        if (this.isDarkMode) {\n          document.documentElement.classList.add('dark-mode');\n          document.body.classList.add('dark-mode');\n        } else {\n          document.documentElement.classList.remove('dark-mode');\n          document.body.classList.remove('dark-mode');\n        }\n      });\n    },\n    handleReconnect() {\n      reconnect();\n    },\n    stopReconnecting() {\n      stopReconnecting();\n    }\n  },\n  mounted() {\n    // Verificar si podemos cargar las imágenes\n    const testImg = new Image();\n    testImg.onerror = () => {\n      console.warn('Error al cargar imágenes SVG, usando fallback inline');\n      this.svgFallback = true;\n    };\n    testImg.src = require('@/assets/img/sun.svg');\n\n    // Aplicar el tema inicial\n    if (this.isDarkMode) {\n      document.documentElement.classList.add('dark-mode');\n      document.body.classList.add('dark-mode');\n    }\n    \n    // Detectar preferencia del sistema si no hay preferencia guardada\n    if (localStorage.getItem('darkMode') === null) {\n      const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.isDarkMode = prefersDarkMode;\n      localStorage.setItem('darkMode', prefersDarkMode);\n      \n      if (prefersDarkMode) {\n        document.documentElement.classList.add('dark-mode');\n        document.body.classList.add('dark-mode');\n      }\n    }\n    \n    // Deshabilitar WebSocket para evitar errores de conexión ya que tu backend no lo soporta aún\n    disableWebSocket();\n\n    // Inicializar el servicio de sincronización al cargar la app\n    initSyncService();\n  },\n  unmounted() {\n    closeWebSocket();\n  }\n}\n</script>\n\n<style>\n@import './assets/theme.css';\n\n/* Estilos globales */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: var(--text-color);\n  background-color: var(--bg-color);\n}\n\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Estilos para la navegación */\n.main-nav {\n  background-color: var(--nav-bg);\n  box-shadow: 0 2px 8px var(--shadow-color);\n  padding: 15px 0;\n  transition: all 0.3s ease;\n}\n\n.nav-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.nav-logo {\n  font-size: 24px;\n  font-weight: bold;\n  color: var(--primary-color);\n  text-decoration: none;\n}\n\n.nav-links {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n.nav-links a {\n  color: var(--text-color);\n  text-decoration: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  transition: all 0.3s;\n}\n\n.nav-links a:hover {\n  background-color: rgba(76, 175, 80, 0.1);\n  color: var(--primary-color);\n}\n\n.nav-links a.router-link-exact-active {\n  color: var(--primary-color);\n  font-weight: bold;\n}\n\n/* Dark Mode Toggle Button */\n.dark-mode-toggle {\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  color: var(--text-color);\n  margin-left: 10px;\n  position: relative;\n}\n\n.dark-mode-toggle:hover {\n  background-color: var(--shadow-color);\n}\n\n.theme-icon {\n  width: 20px;\n  height: 20px;\n  color: var(--text-color);\n  transition: transform 0.5s ease;\n}\n\n.dark-mode-toggle:hover .theme-icon {\n  transform: rotate(30deg);\n}\n\nhtml.dark-mode .dark-mode-toggle .theme-icon {\n  filter: brightness(0.9) contrast(1.5);\n}\n\n/* Ajustes responsivos */\n@media (max-width: 768px) {\n  .nav-container {\n    flex-direction: column;\n    gap: 15px;\n  }\n  \n  .nav-links {\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n}\n\n/* WebSocket status styles */\n.ws-status {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  padding: 6px 15px;\n  font-size: 12px;\n  color: white;\n  z-index: 2000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n}\n\n.ws-status.reconnecting {\n  background-color: #ff9800;\n}\n\n.ws-status.error {\n  background-color: #f44336;\n}\n\n.reconnect-btn, .stop-btn {\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 2px 8px;\n  font-size: 11px;\n  cursor: pointer;\n  margin-left: 8px;\n}\n\n.reconnect-btn {\n  color: #f44336;\n}\n\n.stop-btn {\n  color: #ff9800;\n}\n\n.reconnect-btn:hover, .stop-btn:hover {\n  background-color: #f9f9f9;\n}\n\n.loading-spinner {\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: white;\n  animation: spin 1s linear infinite;\n}\n\n.error-icon {\n  font-size: 14px;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style>","<template>\r\n  <div>\r\n    <!-- Alert Dialog -->\r\n    <div v-if=\"dialogState.show\" class=\"dialog-overlay\">\r\n      <div class=\"dialog-container\">\r\n        <div class=\"dialog-header\">\r\n          <h3>{{ dialogState.title }}</h3>\r\n        </div>\r\n        <div class=\"dialog-content\">\r\n          <p>{{ dialogState.message }}</p>\r\n        </div>\r\n        <div class=\"dialog-footer\">\r\n          <button \r\n            v-if=\"dialogState.showCancel\" \r\n            @click=\"handleCancel\" \r\n            class=\"dialog-button cancel-button\"\r\n          >\r\n            {{ dialogState.cancelText }}\r\n          </button>\r\n          <button \r\n            @click=\"handleConfirm\" \r\n            class=\"dialog-button confirm-button\"\r\n          >\r\n            {{ dialogState.confirmText }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { dialogState, handleConfirm, handleCancel } from '../services/dialogService';\r\n\r\nexport default {\r\n  name: 'DialogContainer',\r\n  setup() {\r\n    return {\r\n      dialogState,\r\n      handleConfirm,\r\n      handleCancel\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.dialog-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 9999;\r\n}\r\n.dialog-container {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n  overflow: hidden;\r\n  animation: dialogFadeIn 0.3s;\r\n}\r\n.dialog-header {\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n.dialog-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n.dialog-content {\r\n  padding: 20px;\r\n}\r\n.dialog-footer {\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  border-top: 1px solid #eee;\r\n}\r\n.dialog-button {\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  border: none;\r\n  transition: all 0.2s;\r\n}\r\n.confirm-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n.confirm-button:hover {\r\n  background-color: #45a049;\r\n}\r\n.cancel-button {\r\n  background-color: #f1f1f1;\r\n  color: #333;\r\n}\r\n.cancel-button:hover {\r\n  background-color: #e1e1e1;\r\n}\r\n@keyframes dialogFadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./DialogContainer.vue?vue&type=template&id=4242f3ee\"\nimport script from \"./DialogContainer.vue?vue&type=script&lang=js\"\nexport * from \"./DialogContainer.vue?vue&type=script&lang=js\"\n\nimport \"./DialogContainer.vue?vue&type=style&index=0&id=4242f3ee&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <!-- Este componente no tiene representación visual, solo maneja la lógica -->\n  <div style=\"display: none;\">\n    <p>Manejador de reservas de WhatsApp activo</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { saveWhatsAppReservation } from '../services/reservaService';\nimport eventBus from '../utils/eventBus';\n\nconst isProcessing = ref(false);\nconst lastProcessedMessage = ref('');\n\n// Función para procesar mensajes de WhatsApp\nconst processWhatsAppMessage = async (message) => {\n  try {\n    // Evitar procesar el mismo mensaje más de una vez\n    if (message === lastProcessedMessage.value) {\n      console.log('Mensaje ya procesado, ignorando duplicado:', message);\n      return;\n    }\n    \n    console.log('Procesando mensaje de WhatsApp:', message);\n    isProcessing.value = true;\n    lastProcessedMessage.value = message;\n    \n    // Extraer información del mensaje\n    const data = extractReservationData(message);\n    \n    if (!data) {\n      console.warn('No se pudo extraer información de reserva del mensaje:', message);\n      return;\n    }\n    \n    console.log('Datos extraídos del mensaje:', data);\n    \n    // Guardar la reserva\n    const result = await saveWhatsAppReservation(data);\n    \n    if (result.success) {\n      console.log('Reserva de WhatsApp guardada correctamente:', result.reservation);\n      \n      // Emitir evento para actualizar la lista de reservas\n      eventBus.emit('nueva-reserva', result.reservation);\n      eventBus.emit('refresh-reservations');\n      \n      console.log('Eventos emitidos: nueva-reserva y refresh-reservations');\n    } else {\n      console.error('Error al guardar reserva de WhatsApp:', result.error);\n    }\n  } catch (error) {\n    console.error('Error al procesar mensaje de WhatsApp:', error);\n  } finally {\n    isProcessing.value = false;\n  }\n};\n\n// Función para extraer datos de reserva del mensaje\nconst extractReservationData = (message) => {\n  // Implementación básica para extraer datos\n  // En un caso real, se usaría una expresión regular más robusta\n  try {\n    // Buscar patrones comunes en el mensaje\n    const nombreMatch = message.match(/\\*Nombre:\\*\\s*([^\\n]+)/i);\n    const telefonoMatch = message.match(/\\*Teléfono móvil:\\*\\s*([^\\n]+)/i);\n    const fechaMatch = message.match(/\\*Fecha:\\*\\s*([^\\n]+)/i);\n    const horaMatch = message.match(/\\*Hora:\\*\\s*([^\\n]+)/i);\n    const personasMatch = message.match(/\\*Personas:\\*\\s*([^\\n]+)/i);\n    const notasMatch = message.match(/\\*Notas:\\*\\s*([^\\n]+)/i);\n    const emailMatch = message.match(/\\*Email:\\*\\s*([^\\n]+)/i);\n    \n    // Si no encontramos al menos nombre y teléfono, no es una reserva válida\n    if (!nombreMatch && !telefonoMatch) {\n      console.warn('El mensaje no contiene información suficiente para una reserva');\n      return null;\n    }\n    \n    // Construir objeto de datos\n    return {\n      nombre: nombreMatch ? nombreMatch[1].trim() : 'Cliente sin nombre',\n      telefono: telefonoMatch ? telefonoMatch[1].trim() : '',\n      email: emailMatch ? emailMatch[1].trim() : '',\n      fecha: fechaMatch ? fechaMatch[1].trim() : new Date().toISOString().split('T')[0],\n      hora: horaMatch ? horaMatch[1].trim() : '19:00',\n      personas: personasMatch ? parseInt(personasMatch[1].trim(), 10) || 2 : 2,\n      notas: notasMatch ? notasMatch[1].trim() : 'Reserva desde WhatsApp'\n    };\n  } catch (error) {\n    console.error('Error al extraer datos del mensaje:', error);\n    return null;\n  }\n};\n\n// Función para simular la recepción de un mensaje de WhatsApp\nconst simulateWhatsAppMessage = (message) => {\n  console.log('Mensaje de WhatsApp simulado recibido');\n  processWhatsAppMessage(message);\n};\n\n// Escuchar eventos de mensajes de WhatsApp\nonMounted(() => {\n  console.log('WhatsAppReservationHandler montado');\n  eventBus.on('whatsapp-message', simulateWhatsAppMessage);\n  \n  // Para pruebas, podemos simular un mensaje después de 5 segundos\n  /*\n  setTimeout(() => {\n    simulateWhatsAppMessage(`\n      *NUEVA RESERVA DE MESA*\n      ---------------------------\n      *Nombre:* Juan Pérez\n      *Teléfono móvil:* 123456789\n      *Email:* juan@example.com\n      *Fecha:* 2023-05-15\n      *Hora:* 20:30\n      *Personas:* 4\n      *Notas:* Mesa cerca de la ventana\n      ---------------------------\n    `);\n  }, 5000);\n  */\n});\n\n// Limpiar listeners al desmontar\nonUnmounted(() => {\n  console.log('WhatsAppReservationHandler desmontado');\n  eventBus.off('whatsapp-message', simulateWhatsAppMessage);\n});\n\n// Exponer funciones para uso externo\ndefineExpose({\n  processWhatsAppMessage,\n  simulateWhatsAppMessage\n});\n</script>\n","import script from \"./WhatsAppReservationHandler.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WhatsAppReservationHandler.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"whatsapp-simulator\" v-if=\"shouldShowSimulator\">\n    <button @click=\"toggleSimulator\" class=\"toggle-button\">\n      <span v-if=\"showSimulator\">❌ Cerrar Simulador</span>\n      <span v-else>📱 Simular WhatsApp</span>\n    </button>\n    \n    <div v-if=\"showSimulator\" class=\"simulator-panel\">\n      <h3>Simulador de Reservas WhatsApp</h3>\n      \n      <div class=\"form-group\">\n        <label for=\"nombre\">Nombre:</label>\n        <input type=\"text\" id=\"nombre\" v-model=\"reservationData.nombre\" placeholder=\"Nombre del cliente\">\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"telefono\">Teléfono:</label>\n        <input type=\"text\" id=\"telefono\" v-model=\"reservationData.telefono\" placeholder=\"612345678\">\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"reservationData.email\" placeholder=\"cliente@example.com\">\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"fecha\">Fecha:</label>\n        <input type=\"date\" id=\"fecha\" v-model=\"reservationData.fecha\">\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"hora\">Hora:</label>\n        <select id=\"hora\" v-model=\"reservationData.hora\">\n          <option value=\"13:00\">13:00</option>\n          <option value=\"13:30\">13:30</option>\n          <option value=\"14:00\">14:00</option>\n          <option value=\"14:30\">14:30</option>\n          <option value=\"20:00\">20:00</option>\n          <option value=\"20:30\">20:30</option>\n          <option value=\"21:00\">21:00</option>\n          <option value=\"21:30\">21:30</option>\n        </select>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"personas\">Personas:</label>\n        <select id=\"personas\" v-model=\"reservationData.personas\">\n          <option :value=\"1\">1 persona</option>\n          <option :value=\"2\">2 personas</option>\n          <option :value=\"3\">3 personas</option>\n          <option :value=\"4\">4 personas</option>\n          <option :value=\"5\">5 personas</option>\n          <option :value=\"6\">6 personas</option>\n          <option :value=\"8\">8 personas</option>\n        </select>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"notas\">Notas:</label>\n        <textarea id=\"notas\" v-model=\"reservationData.notas\" placeholder=\"Notas adicionales\"></textarea>\n      </div>\n      \n      <div class=\"buttons\">\n        <button @click=\"sendReservation\" class=\"send-button\" :disabled=\"isProcessing\">Enviar Reserva</button>\n      </div>\n      \n      <div v-if=\"status\" :class=\"['status', status.type]\">\n        {{ status.message }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted, onUnmounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport eventBus from '@/utils/eventBus';\n\nconst route = useRoute();\nconst showSimulator = ref(false);\nconst isProcessing = ref(false);\nconst status = ref(null);\nconst buttonEnabled = ref(false); // Inicializado en false para que esté desactivado por defecto\n\n// Determinar si estamos en la vista de login\nconst isLoginPage = computed(() => {\n  const isLoginRoute = route.name === 'login';\n  const isLoginPath = route.path === '/login' || route.path === '/login/';\n  console.log(`WhatsAppSimulator - Route check: name=${route.name}, path=${route.path}, isLoginRoute=${isLoginRoute}, isLoginPath=${isLoginPath}`);\n  return isLoginRoute || isLoginPath;\n});\n\n// Determinar si estamos en la vista de menú compartido\nconst isSharedMenuView = computed(() => {\n  return route.name === 'shared-menu' || route.path.startsWith('/menu/');\n});\n\n// Determinar si debemos mostrar el simulador basado en la página actual y la configuración\nconst shouldShowSimulator = computed(() => {\n  // No mostrar en login o menu compartido (lógica existente)\n  const showBasedOnRoute = !isLoginPage.value && !isSharedMenuView.value;\n  // No mostrar si está desactivado en la configuración\n  const result = showBasedOnRoute && buttonEnabled.value;\n  console.log(`WhatsAppSimulator - Visibility check: isLoginPage=${isLoginPage.value}, isSharedMenuView=${isSharedMenuView.value}, shouldShow=${result}`);\n  return result;\n});\n\n// Función que maneja los cambios en la configuración del botón\nconst handleConfigChange = (isEnabled) => {\n  console.log(`WhatsAppSimulator - Config changed: button enabled = ${isEnabled}`);\n  buttonEnabled.value = isEnabled;\n};\n\n// Cargar la configuración al montar el componente\nonMounted(() => {\n  console.log(`WhatsAppSimulator - Component mounted on route: ${route.name} (${route.path})`);\n  \n  // Cargar configuración del botón desde localStorage\n  const storedValue = localStorage.getItem('whatsappButtonEnabled');\n  if (storedValue !== null) {\n    buttonEnabled.value = storedValue === 'true';\n    console.log(`WhatsAppSimulator - Loaded config: button enabled = ${buttonEnabled.value}`);\n  }\n  \n  // Escuchar eventos de cambio de configuración\n  eventBus.on('whatsapp-button-config-changed', handleConfigChange);\n});\n\n// Limpiar suscripciones al desmontar el componente\nonUnmounted(() => {\n  eventBus.off('whatsapp-button-config-changed', handleConfigChange);\n});\n\n// Datos de la reserva\nconst reservationData = reactive({\n  nombre: '',\n  telefono: '',\n  email: '',\n  fecha: new Date().toISOString().split('T')[0],\n  hora: '20:00',\n  personas: 2,\n  notas: ''\n});\n\n// Función para mostrar/ocultar el simulador\nconst toggleSimulator = () => {\n  showSimulator.value = !showSimulator.value;\n};\n\n// Función para enviar la reserva\nconst sendReservation = async () => {\n  try {\n    isProcessing.value = true;\n    status.value = { type: 'info', message: 'Enviando reserva...' };\n    \n    // Validar datos mínimos\n    if (!reservationData.nombre || !reservationData.telefono) {\n      alert('Por favor, completa al menos el nombre y teléfono');\n      status.value = { type: 'error', message: 'Faltan datos obligatorios' };\n      return;\n    }\n    \n    console.log('Enviando reserva desde WhatsApp Simulator:', reservationData);\n    \n    // Construir el mensaje de WhatsApp\n    const message = `\n*NUEVA RESERVA DE MESA*\n---------------------------\n*Nombre:* ${reservationData.nombre}\n*Teléfono móvil:* ${reservationData.telefono}\n${reservationData.email ? `*Email:* ${reservationData.email}` : ''}\n*Fecha:* ${reservationData.fecha}\n*Hora:* ${reservationData.hora}\n*Personas:* ${reservationData.personas}\n${reservationData.notas ? `*Notas:* ${reservationData.notas}` : ''}\n---------------------------\nReserva enviada desde WhatsApp Simulator\n`;\n    \n    // Emitir el evento con el mensaje\n    console.log('Emitiendo evento whatsapp-message con el mensaje:', message);\n    eventBus.emit('whatsapp-message', message);\n    \n    // Emitir evento para refrescar la lista de reservas\n    console.log('Emitiendo evento refresh-reservations');\n    eventBus.emit('refresh-reservations');\n    \n    // Mostrar confirmación\n    status.value = { type: 'success', message: 'Reserva enviada correctamente' };\n    \n    // Limpiar formulario\n    clearForm();\n  } catch (error) {\n    console.error('Error al enviar reserva:', error);\n    status.value = { type: 'error', message: 'Error al enviar la reserva: ' + error.message };\n  } finally {\n    isProcessing.value = false;\n    \n    // Ocultar el mensaje después de 5 segundos\n    setTimeout(() => {\n      status.value = null;\n    }, 5000);\n  }\n};\n\n// Función para limpiar el formulario\nconst clearForm = () => {\n  reservationData.nombre = '';\n  reservationData.telefono = '';\n  reservationData.email = '';\n  reservationData.fecha = new Date().toISOString().split('T')[0];\n  reservationData.hora = '20:00';\n  reservationData.personas = 2;\n  reservationData.notas = '';\n};\n\n// Exponer funciones para uso externo\ndefineExpose({\n  toggleSimulator,\n  sendReservation\n});\n</script>\n\n<style scoped>\n.whatsapp-simulator {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 1000;\n}\n\n.toggle-button {\n  background-color: #25D366;\n  color: white;\n  border: none;\n  border-radius: 50px;\n  padding: 10px 15px;\n  font-size: 14px;\n  cursor: pointer;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.toggle-button:hover {\n  background-color: #128C7E;\n}\n\n.simulator-panel {\n  position: absolute;\n  bottom: 50px;\n  right: 0;\n  width: 300px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n  padding: 15px;\n  max-height: 80vh;\n  overflow-y: auto;\n}\n\nh3 {\n  color: #128C7E;\n  margin-top: 0;\n  text-align: center;\n  font-size: 16px;\n}\n\n.form-group {\n  margin-bottom: 10px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n  font-size: 14px;\n  color: #333;\n}\n\ninput, select, textarea {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\ntextarea {\n  height: 60px;\n  resize: vertical;\n}\n\n.buttons {\n  display: flex;\n  gap: 10px;\n  margin-top: 15px;\n}\n\n.send-button {\n  flex: 1;\n  padding: 8px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  background-color: #25D366;\n  color: white;\n}\n\n.send-button:hover {\n  background-color: #128C7E;\n}\n\n.send-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.status {\n  margin-top: 15px;\n  padding: 10px;\n  border-radius: 4px;\n  font-size: 14px;\n  text-align: center;\n}\n\n.status.success {\n  background-color: #d4edda;\n  color: #155724;\n}\n\n.status.error {\n  background-color: #f8d7da;\n  color: #721c24;\n}\n\n.status.info {\n  background-color: #d1ecf1;\n  color: #0c5460;\n}\n</style>\n","import script from \"./WhatsAppSimulator.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WhatsAppSimulator.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WhatsAppSimulator.vue?vue&type=style&index=0&id=40696f3f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-40696f3f\"]])\n\nexport default __exports__","// Simulador de mensajes de WhatsApp para pruebas\nimport eventBus from './eventBus';\n\n/**\n * Utilidad para simular el envío de reservas desde WhatsApp\n * Esta es una herramienta de desarrollo que permite probar la funcionalidad\n * de recepción de reservas desde WhatsApp sin necesidad de integrar realmente\n * con la API de WhatsApp.\n */\n\n/**\n * Función para simular el envío de una reserva desde WhatsApp\n * @param {Object} customData - Datos personalizados para la reserva\n * @returns {Promise<boolean>} - Resultado de la operación\n */\nexport function simulateWhatsAppReservation(customData = {}) {\n  try {\n    // Datos por defecto para la reserva\n    const defaultData = {\n      nombre: 'Cliente de Prueba WhatsApp',\n      telefono: '612345678',\n      email: 'whatsapp@example.com',\n      fecha: new Date().toISOString().split('T')[0], // Hoy\n      hora: '20:00',\n      personas: 2,\n      notas: 'Reserva realizada desde WhatsApp'\n    };\n\n    // Combinar datos por defecto con datos personalizados\n    const whatsappData = { ...defaultData, ...customData };\n    \n    console.log(' Simulando mensaje de WhatsApp con datos:', whatsappData);\n    \n    // Crear un evento con la estructura esperada por el handler\n    const whatsappEvent = {\n      type: 'whatsapp_reservation',\n      reservation: whatsappData,\n      timestamp: Date.now(),\n      id: 'whatsapp_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9)\n    };\n    \n    // Enviar el evento a través de eventBus (método principal)\n    eventBus.emit('whatsapp_message', whatsappEvent);\n    \n    // También notificar que se debe actualizar la lista de reservas\n    setTimeout(() => {\n      eventBus.emit('refresh-reservations');\n    }, 1000);\n    \n    console.log(' Simulación de mensaje de WhatsApp completada');\n    return true;\n  } catch (error) {\n    console.error(' Error al simular mensaje de WhatsApp:', error);\n    return false;\n  }\n}\n\n/**\n * Función para configurar el simulador de WhatsApp en la consola\n * Esta función es necesaria para mantener compatibilidad con el código existente\n */\nexport function setupWhatsAppSimulatorForConsole() {\n  // Esta función ahora solo expone la función de simulación en el objeto window\n  // pero no hace nada más para evitar duplicación de mensajes\n  console.log('Simulador de WhatsApp configurado. Usa window.testWhatsAppReservation() para probar.');\n  return true;\n}\n\n// Exponer la función en window para poder llamarla desde la consola\nwindow.testWhatsAppReservation = simulateWhatsAppReservation;\n\nexport default {\n  simulateWhatsAppReservation,\n  setupWhatsAppSimulatorForConsole\n};\n","// Utilidad para probar reservas desde la consola del navegador\nimport { simulateWhatsAppReservation } from './whatsappSimulator';\n\n/**\n * Genera una reserva de prueba con datos aleatorios\n * @returns {Object} Datos de reserva aleatorios\n */\nfunction generateRandomReservation() {\n  const nombres = [\n    'Juan Pérez', 'María García', 'Carlos Rodríguez', 'Ana Martínez', \n    'Luis López', 'Laura Sánchez', 'Pedro González', 'Sofía Fernández'\n  ];\n  \n  const telefonos = [\n    '612345678', '623456789', '634567890', '645678901', \n    '656789012', '667890123', '678901234', '689012345'\n  ];\n  \n  const fechas = [];\n  const hoy = new Date();\n  for (let i = 1; i <= 7; i++) {\n    const fecha = new Date(hoy);\n    fecha.setDate(hoy.getDate() + i);\n    fechas.push(fecha.toISOString().split('T')[0]);\n  }\n  \n  const horas = ['13:00', '13:30', '14:00', '14:30', '20:00', '20:30', '21:00', '21:30'];\n  const personas = [1, 2, 2, 2, 3, 4, 5, 6, 8];\n  \n  return {\n    nombre: nombres[Math.floor(Math.random() * nombres.length)],\n    telefono: telefonos[Math.floor(Math.random() * telefonos.length)],\n    email: Math.random() > 0.5 ? `cliente${Math.floor(Math.random() * 100)}@example.com` : '',\n    fecha: fechas[Math.floor(Math.random() * fechas.length)],\n    hora: horas[Math.floor(Math.random() * horas.length)],\n    personas: personas[Math.floor(Math.random() * personas.length)],\n    notas: Math.random() > 0.7 ? 'Mesa cerca de la ventana si es posible' : \n           Math.random() > 0.5 ? 'Celebración de cumpleaños' : \n           Math.random() > 0.3 ? 'Alergias: gluten' : ''\n  };\n}\n\n/**\n * Envía una reserva de prueba con datos aleatorios\n */\nfunction sendRandomReservation() {\n  const randomData = generateRandomReservation();\n  console.log('Enviando reserva aleatoria:', randomData);\n  return simulateWhatsAppReservation(randomData);\n}\n\n/**\n * Envía múltiples reservas de prueba\n * @param {number} count - Número de reservas a enviar\n * @param {number} interval - Intervalo entre reservas en ms\n */\nfunction sendMultipleReservations(count = 3, interval = 2000) {\n  console.log(`Enviando ${count} reservas aleatorias con intervalo de ${interval}ms`);\n  \n  let sent = 0;\n  \n  const sendNext = () => {\n    if (sent < count) {\n      sendRandomReservation();\n      sent++;\n      setTimeout(sendNext, interval);\n    } else {\n      console.log(`✅ ${count} reservas enviadas correctamente`);\n    }\n  };\n  \n  sendNext();\n}\n\n// Exponer funciones en window para uso desde la consola\nwindow.testReservations = {\n  random: sendRandomReservation,\n  multiple: sendMultipleReservations,\n  generate: generateRandomReservation\n};\n\nexport default {\n  sendRandomReservation,\n  sendMultipleReservations,\n  generateRandomReservation\n};\n","import { reactive } from 'vue';\r\n\r\n// Estado reactivo del WebSocket\r\nexport const webSocketState = reactive({\r\n  connected: false,\r\n  reconnecting: false,\r\n  error: null,\r\n  reconnectAttempts: 0,\r\n  maxReconnectAttempts: 5,\r\n  socket: null,\r\n  messages: [],\r\n  enableWebsocket: false // Nueva bandera para habilitar/deshabilitar conexiones WebSocket\r\n});\r\n\r\n// Opciones de configuración\r\nlet config = {\r\n  reconnectInterval: 2000,\r\n  reconnectAttempts: 5\r\n};\r\n\r\n// Variable para almacenar el temporizador de reconexión\r\nlet reconnectTimer = null;\r\n\r\n/**\r\n * Inicializa la conexión WebSocket\r\n * @param {string} url - URL del servidor WebSocket\r\n * @param {Object} options - Opciones de configuración\r\n */\r\nexport function initializeWebSocket(url, options = {}) {\r\n  config = { ...config, ...options };\r\n  webSocketState.maxReconnectAttempts = config.reconnectAttempts;\r\n  \r\n  // Comprobar si el navegador soporta WebSocket\r\n  if (!('WebSocket' in window)) {\r\n    console.warn('Este navegador no soporta WebSocket');\r\n    return;\r\n  }\r\n  \r\n  // Permitir deshabilitar WebSocket en entornos de desarrollo\r\n  // o cuando el backend no soporta WebSockets\r\n  if (process.env.NODE_ENV === 'development' && !webSocketState.enableWebsocket) {\r\n    console.info('WebSocket deshabilitado en entorno de desarrollo. ' +\r\n                 'Para habilitarlo, use enableWebSocket()');\r\n    return;\r\n  }\r\n  \r\n  // Si ya existe una conexión activa, cerrarla primero\r\n  if (webSocketState.socket) {\r\n    webSocketState.socket.close();\r\n  }\r\n\r\n  try {\r\n    webSocketState.reconnecting = false;\r\n    webSocketState.error = null;\r\n    \r\n    // Crear nueva conexión\r\n    console.log(`Intentando conectar a WebSocket: ${url}`);\r\n    const socket = new WebSocket(url);\r\n    \r\n    socket.onopen = () => {\r\n      console.log('Conexión WebSocket establecida');\r\n      webSocketState.connected = true;\r\n      webSocketState.reconnecting = false;\r\n      webSocketState.error = null;\r\n      webSocketState.reconnectAttempts = 0;\r\n    };\r\n    \r\n    socket.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        webSocketState.messages.push(data);\r\n        console.log('Mensaje recibido:', data);\r\n      } catch (err) {\r\n        console.error('Error al parsear mensaje WebSocket:', event.data);\r\n      }\r\n    };\r\n    \r\n    socket.onclose = (event) => {\r\n      webSocketState.connected = false;\r\n      \r\n      if (!event.wasClean) {\r\n        console.log('Conexión WebSocket cerrada inesperadamente');\r\n        scheduleReconnect();\r\n      } else {\r\n        console.log('Conexión WebSocket cerrada');\r\n      }\r\n    };\r\n    \r\n    socket.onerror = (error) => {\r\n      console.error('Error WebSocket:', error);\r\n      webSocketState.error = 'Error de conexión';\r\n      webSocketState.connected = false;\r\n      \r\n      // Solo programar reconexión si no estamos ya en ese proceso\r\n      if (!webSocketState.reconnecting) {\r\n        scheduleReconnect();\r\n      }\r\n    };\r\n    \r\n    // Guardar referencia al socket\r\n    webSocketState.socket = socket;\r\n    \r\n  } catch (error) {\r\n    console.error('Error al inicializar WebSocket:', error);\r\n    webSocketState.error = `Error al inicializar: ${error.message}`;\r\n    webSocketState.connected = false;\r\n    scheduleReconnect();\r\n  }\r\n}\r\n\r\n/**\r\n * Habilita las conexiones WebSocket\r\n */\r\nexport function enableWebSocket() {\r\n  webSocketState.enableWebsocket = true;\r\n  console.log('WebSocket habilitado. Para conectar, llame a initializeWebSocket() con la URL apropiada');\r\n}\r\n\r\n/**\r\n * Deshabilita las conexiones WebSocket\r\n */\r\nexport function disableWebSocket() {\r\n  webSocketState.enableWebsocket = false;\r\n  if (webSocketState.socket) {\r\n    closeWebSocket();\r\n  }\r\n  console.log('WebSocket deshabilitado');\r\n}\r\n\r\n/**\r\n * Programa un intento de reconexión después del intervalo configurado\r\n */\r\nfunction scheduleReconnect() {\r\n  // Limpiar cualquier temporizador existente\r\n  if (reconnectTimer) {\r\n    clearTimeout(reconnectTimer);\r\n  }\r\n  \r\n  // Verificar si debemos intentar reconectar\r\n  if (webSocketState.reconnectAttempts >= webSocketState.maxReconnectAttempts) {\r\n    console.log('Número máximo de reconexiones alcanzado');\r\n    webSocketState.reconnecting = false;\r\n    return;\r\n  }\r\n  \r\n  if (!webSocketState.enableWebsocket && process.env.NODE_ENV === 'development') {\r\n    console.log('WebSocket deshabilitado. No se intentará reconectar.');\r\n    return;\r\n  }\r\n  \r\n  // Programar reconexión\r\n  webSocketState.reconnecting = true;\r\n  webSocketState.reconnectAttempts++;\r\n  console.log(`Programando reconexión ${webSocketState.reconnectAttempts}/${webSocketState.maxReconnectAttempts} en ${config.reconnectInterval}ms`);\r\n  \r\n  reconnectTimer = setTimeout(() => {\r\n    if (webSocketState.socket && webSocketState.socket.url) {\r\n      console.log('Intentando reconexión...');\r\n      initializeWebSocket(webSocketState.socket.url);\r\n    }\r\n  }, config.reconnectInterval);\r\n}\r\n\r\n/**\r\n * Intenta reconectar inmediatamente\r\n */\r\nexport function reconnect() {\r\n  if (webSocketState.socket && webSocketState.socket.url) {\r\n    initializeWebSocket(webSocketState.socket.url);\r\n  }\r\n}\r\n\r\n/**\r\n * Detiene los intentos de reconexión\r\n */\r\nexport function stopReconnecting() {\r\n  if (reconnectTimer) {\r\n    clearTimeout(reconnectTimer);\r\n  }\r\n  webSocketState.reconnecting = false;\r\n  console.log('Intentos de reconexión detenidos');\r\n}\r\n\r\n/**\r\n * Cierra la conexión WebSocket\r\n */\r\nexport function closeWebSocket() {\r\n  stopReconnecting();\r\n  \r\n  if (webSocketState.socket) {\r\n    try {\r\n      webSocketState.socket.close();\r\n    } catch (error) {\r\n      console.error('Error al cerrar WebSocket:', error);\r\n    }\r\n    webSocketState.socket = null;\r\n  }\r\n  \r\n  webSocketState.connected = false;\r\n  console.log('Conexión WebSocket cerrada manualmente');\r\n}\r\n\r\n/**\r\n * Envía un mensaje a través del WebSocket\r\n * @param {Object} data - Datos a enviar\r\n * @returns {boolean} - true si el mensaje se envió correctamente\r\n */\r\nexport function sendMessage(data) {\r\n  if (!webSocketState.socket || webSocketState.socket.readyState !== WebSocket.OPEN) {\r\n    console.error('WebSocket no está conectado');\r\n    return false;\r\n  }\r\n  \r\n  try {\r\n    const message = JSON.stringify(data);\r\n    webSocketState.socket.send(message);\r\n    console.log('Mensaje enviado:', data);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al enviar mensaje:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Deshabilitar WebSocket por defecto en desarrollo\r\nif (process.env.NODE_ENV === 'development') {\r\n  webSocketState.enableWebsocket = false;\r\n}\r\n\r\nexport default {\r\n  webSocketState,\r\n  initializeWebSocket,\r\n  reconnect,\r\n  closeWebSocket,\r\n  sendMessage,\r\n  stopReconnecting,\r\n  enableWebSocket,\r\n  disableWebSocket\r\n};\r\n","// apiConfig.js - Configuración centralizada para URLs de API\r\n\r\n// Determinar el entorno actual \r\nconst isProd = process.env.NODE_ENV === 'production';\r\n\r\n// Verificar si hay una API URL especificada en localStorage\r\nconst storedApiUrl = localStorage.getItem('apiUrl');\r\n\r\n// API real sin subdirectorios 'api' o 'raw' al final\r\nconst apiDomain = storedApiUrl || (isProd ? 'https://api.allseo.xyz' : 'http://localhost:3000');\r\n\r\n// Configuración para entorno de producción y desarrollo\r\nconst config = {\r\n  // URLs para producción (servidor real)\r\n  production: {\r\n    API_URL: `${apiDomain}/api`,\r\n    RAW_URL: `${apiDomain}/raw`,\r\n    API_TEST_ENDPOINT: `${apiDomain}/api/test/ping`,\r\n    API_DOMAIN: apiDomain\r\n  },\r\n  // URLs para desarrollo local\r\n  development: {\r\n    API_URL: `${apiDomain}/api`,\r\n    RAW_URL: `${apiDomain}/raw`,\r\n    API_TEST_ENDPOINT: `${apiDomain}/api/test/ping`,\r\n    API_DOMAIN: apiDomain\r\n  }\r\n};\r\n\r\n// Exportar la configuración según el entorno\r\nconst currentConfig = isProd ? config.production : config.development;\r\n\r\nexport default currentConfig;","// connectionHandler.js - Utilidad para manejar problemas de conexión\r\n\r\nimport apiConfig from '../config/apiConfig';\r\n\r\n// Estado de la conexión\r\nlet isConnected = navigator.onLine;\r\nlet apiAvailable = false;\r\nlet connectionTestInProgress = false;\r\nlet offlineMode = localStorage.getItem('offlineMode') === 'true';\r\n\r\n/**\r\n * Prueba la conexión al API con diferentes dominios alternativos\r\n * @returns {Promise<boolean>} - true si se encuentra una API disponible\r\n */\r\nexport const testApiConnection = async () => {\r\n  // Si ya está en progreso una prueba, esperar\r\n  if (connectionTestInProgress) {\r\n    return apiAvailable;\r\n  }\r\n\r\n  connectionTestInProgress = true;\r\n  console.log('🔄 Probando conexión con la API...');\r\n\r\n  // Dominios a probar (en orden de preferencia)\r\n  const domains = [\r\n    apiConfig.API_DOMAIN,                   // Dominio configurado actual\r\n    'https://api.allseo.xyz',              // Servidor principal de producción\r\n    'https://allseo.xyz',                  // Servidor principal sin subdominio\r\n    'https://api.websap.app',              // Servidor alternativo\r\n    'http://localhost:3000'                // Local para desarrollo\r\n  ];\r\n\r\n  // Evitar duplicados\r\n  const uniqueDomains = [...new Set(domains)];\r\n  \r\n  // Probar cada dominio\r\n  for (const domain of uniqueDomains) {\r\n    try {\r\n      console.log(`🔍 Probando API en: ${domain}`);\r\n      \r\n      // Usar un timeout para evitar esperar demasiado\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 3000);\r\n      \r\n      const response = await fetch(`${domain}/api/test/ping`, {\r\n        method: 'GET',\r\n        signal: controller.signal,\r\n        headers: { 'Accept': 'application/json' },\r\n        mode: 'cors',\r\n        credentials: 'omit'\r\n      });\r\n      \r\n      clearTimeout(timeoutId);\r\n      \r\n      if (response.ok) {\r\n        console.log(`✅ Conexión exitosa con: ${domain}`);\r\n        \r\n        // Guardar el dominio que funciona\r\n        localStorage.setItem('apiUrl', domain);\r\n        \r\n        // Actualizar configuración\r\n        apiAvailable = true;\r\n        offlineMode = false;\r\n        localStorage.setItem('offlineMode', 'false');\r\n        \r\n        connectionTestInProgress = false;\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.warn(`❌ Error al conectar con ${domain}:`, error.name === 'AbortError' ? 'Timeout' : error.message);\r\n    }\r\n  }\r\n  \r\n  console.error('❌ No se pudo conectar con ningún servidor API');\r\n  \r\n  // Si no hay conexión, activar modo offline\r\n  apiAvailable = false;\r\n  offlineMode = true;\r\n  localStorage.setItem('offlineMode', 'true');\r\n  \r\n  connectionTestInProgress = false;\r\n  return false;\r\n};\r\n\r\n/**\r\n * Comprueba si la aplicación está en modo offline\r\n * @returns {boolean} - true si está en modo offline\r\n */\r\nexport const isOfflineMode = () => offlineMode;\r\n\r\n/**\r\n * Establece manualmente el modo offline\r\n * @param {boolean} status - true para activar el modo offline\r\n */\r\nexport const setOfflineMode = (status) => {\r\n  offlineMode = status;\r\n  localStorage.setItem('offlineMode', status ? 'true' : 'false');\r\n  console.log(`${status ? '🔌 Modo offline activado' : '🌐 Modo offline desactivado'}`);\r\n};\r\n\r\n/**\r\n * Configurar los listeners para eventos de conexión\r\n */\r\nexport const setupConnectionListeners = () => {\r\n  // Escuchar cambios en la conexión\r\n  window.addEventListener('online', async () => {\r\n    isConnected = true;\r\n    console.log('🌐 Conexión a Internet detectada');\r\n    \r\n    // Probar si la API está disponible\r\n    const apiIsAvailable = await testApiConnection();\r\n    \r\n    // Notificar a la aplicación del cambio\r\n    window.dispatchEvent(new CustomEvent('api-connection-change', { detail: { connected: apiIsAvailable } }));\r\n  });\r\n  \r\n  window.addEventListener('offline', () => {\r\n    isConnected = false;\r\n    apiAvailable = false;\r\n    console.log('🔌 Conexión a Internet perdida');\r\n    \r\n    // Notificar a la aplicación del cambio\r\n    window.dispatchEvent(new CustomEvent('api-connection-change', { detail: { connected: false } }));\r\n  });\r\n  \r\n  // Realizar un test inicial al cargar\r\n  setTimeout(() => {\r\n    testApiConnection().then(available => {\r\n      window.dispatchEvent(new CustomEvent('api-connection-change', { detail: { connected: available } }));\r\n    });\r\n  }, 1000);\r\n};\r\n\r\n// Inicializar\r\nsetupConnectionListeners();\r\n\r\nexport default {\r\n  testApiConnection,\r\n  isOfflineMode,\r\n  setOfflineMode,\r\n  apiAvailable,\r\n  isConnected\r\n};","// src/services/syncService.js\n\n// Servicio para gestionar la sincronización y el estado de la conexión\nimport { \n  getPendingPlatos, \n  updatePlatoSyncStatus, \n  getSyncQueue, \n  removeFromSyncQueue,\n  getPlato\n} from './indexedDBService';\nimport { adaptPlatoData } from '../utils/dataAdapters';\nimport { optimizeImageForSync } from './imageService';\nimport apiConfig from '../config/apiConfig';\nimport { testApiConnection, isOfflineMode } from '../utils/connectionHandler';\n\n// Función para obtener las URLs actualizadas del API\nconst getApiUrls = () => {\n  // Si el API URL fue actualizado por el connectionHandler, actualizar la configuración\n  const storedApiUrl = localStorage.getItem('apiUrl');\n  if (storedApiUrl) {\n    // Construir URLs con el dominio correcto\n    return {\n      API_URL: `${storedApiUrl}/api`,\n      RAW_URL: `${storedApiUrl}/raw`\n    };\n  }\n  \n  // Usar configuración por defecto\n  return {\n    API_URL: apiConfig.API_URL,\n    RAW_URL: apiConfig.RAW_URL\n  };\n};\n\n// URLs dinámicas que pueden actualizarse en tiempo de ejecución\nlet { API_URL, RAW_URL } = getApiUrls();\n\n// Función para actualizar las URLs de la API en tiempo de ejecución\nconst refreshApiUrls = () => {\n  const urls = getApiUrls();\n  API_URL = urls.API_URL;\n  RAW_URL = urls.RAW_URL;\n  console.log('🔄 URLs de API actualizadas:', { API_URL, RAW_URL });\n};\n\n// Escuchar los cambios de conexión para actualizar las URLs\nwindow.addEventListener('api-connection-change', (event) => {\n  console.log('🌐 Estado de conexión API cambiado:', event.detail.connected);\n  refreshApiUrls();\n});\n\n// Configuración específica para mejorar la sincronización\nconst SYNC_CONFIG = {\n  skipServerAvailabilityCheck: true,\n  maxPlatoSize: 30000, // 30KB máximo\n  retryIntervals: [5000, 15000, 30000],\n  maxRetries: 2,\n  platoUrl: `${API_URL}/sync/platos`,\n  emergencyPlatoUrl: `${API_URL}/platos/minimal`,\n  useEmergencyEndpoint: true\n};\n\n// Estado de la sincronización\nlet isSyncing = false;\nlet _isOnline = navigator.onLine;\n\n// Alternativa más simple para verificar la conexión\nconst isOnline = async () => {\n  // Primero comprobamos el estado de navigator.onLine\n  if (!navigator.onLine) {\n    return false;\n  }\n  \n  // Intentamos hacer un fetch a un recurso pequeño (como un favicon)\n  try {\n    const response = await fetch(`${API_URL}/favicon.ico`, {\n      method: 'HEAD',\n      mode: 'no-cors',\n      cache: 'no-store',\n      credentials: 'omit'\n    });\n    \n    return true; // Si no hay excepción, asumimos que estamos en línea\n  } catch (error) {\n    console.error('Error al verificar estado de conexión:', error);\n    return false;\n  }\n};\n\n// Configurar escuchas para eventos de conexión\nconst setupConnectionListeners = () => {\n  window.addEventListener('online', async () => {\n    console.log('Evento online detectado');\n    _isOnline = await isOnline();\n    if (_isOnline) {\n      console.log('Conexión a Internet restablecida');\n      // Sincronizar cuando se recupera la conexión\n      syncData();\n    }\n  });\n  \n  window.addEventListener('offline', () => {\n    console.log('Evento offline detectado');\n    _isOnline = false;\n    console.log('Conexión a Internet perdida');\n  });\n  \n  // Verificar estado inicial\n  isOnline().then(online => {\n    console.log(`Estado inicial de conexión: ${online ? 'En línea' : 'Fuera de línea'}`);\n  });\n};\n\n// Función para probar la conexión con el servidor (modo ultra-ligero)\nconst testServerConnection = async () => {\n  console.log('🔄 Probando conexión con el servidor (modo emergencia)...');\n  \n  try {\n    // Usar XMLHttpRequest sin cookies ni headers personalizados\n    const xhr = new XMLHttpRequest();\n    \n    const responsePromise = new Promise((resolve) => {\n      const timeoutId = setTimeout(() => {\n        console.warn('⏱️ Timeout en la prueba de conexión');\n        xhr.abort();\n        resolve(false);\n      }, 5000);\n      \n      xhr.onreadystatechange = function() {\n        if (xhr.readyState === 4) {\n          clearTimeout(timeoutId);\n          if (xhr.status >= 200 && xhr.status < 300) {\n            console.log('✅ Conexión básica establecida');\n            resolve(true);\n          } else if (xhr.status === 431) {\n            console.error('❌ Error 431: Request Header Fields Too Large');\n            console.log('👉 Necesitas reducir el tamaño de las cookies o headers');\n            resolve(false);\n          } else {\n            console.error(`❌ Error en prueba de conexión: ${xhr.status}`);\n            resolve(false);\n          }\n        }\n      };\n      \n      xhr.onerror = function() {\n        clearTimeout(timeoutId);\n        console.error('❌ Error de red en prueba de conexión');\n        // Intentar con endpoint de emergencia sin headers\n        checkAlternativePort().then(resolve);\n      };\n      \n      // Realizar una solicitud GET simple sin headers\n      xhr.open('GET', `${API_URL}/test/ping`, true);\n      // No añadir ningún header\n      xhr.withCredentials = false; // Importante: evitar enviar cookies\n      xhr.send();\n    });\n    \n    return await responsePromise;\n  } catch (error) {\n    console.error('❌ Error en prueba de conexión:', error);\n    return false;\n  }\n};\n\n// Comprobar puerto alternativo\nconst checkAlternativePort = async () => {\n  console.log('🔄 Probando puertos alternativos...');\n  \n  // Lista de puertos comunes para probar\n  const ports = [8080, 3000, 5000, 8000];\n  \n  for (const port of ports) {\n    try {\n      console.log(`Probando en puerto: ${port}`);\n      const response = await fetch(`http://localhost:${port}/raw/ping`, {\n        method: 'GET',\n        mode: 'no-cors',\n        cache: 'no-store',\n        credentials: 'omit'\n      });\n      \n      if (response.ok || response.status === 0) {\n        console.log(`✅ Servidor encontrado en puerto ${port}`);\n        // Actualizar URL global para usar este puerto\n        window.SERVER_PORT = port;\n        return true;\n      }\n    } catch (error) {\n      console.log(`Puerto ${port} no disponible`);\n    }\n  }\n  \n  console.error('❌ No se encontró el servidor en ningún puerto común');\n  return false;\n};\n\n// Función para probar la conexión a MySQL\nconst testMySQLConnection = async () => {\n  console.log('🔄 Probando conexión a MySQL...');\n  \n  try {\n    const response = await fetch(`${API_URL}/test/db`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    \n    if (response.ok) {\n      const data = await response.json();\n      console.log('✅ Conexión a MySQL establecida:', data);\n      \n      // Mostrar información clara sobre la base de datos\n      if (data.data && data.data.database) {\n        console.log(`📊 Base de datos MySQL: ${data.data.database}`);\n        console.log(`📊 Tablas disponibles: ${data.data.tables.join(', ')}`);\n      }\n      \n      return true;\n    } else {\n      console.error('❌ Error al conectar con MySQL:', await response.text());\n      return false;\n    }\n  } catch (error) {\n    console.error('❌ Error de red al probar la conexión MySQL:', error);\n    return false;\n  }\n};\n\n// Función para sincronizar datos entre IndexedDB y el servidor\nconst syncData = async () => {\n  if (!await isOnline()) {\n    console.log('Sin conexión a Internet, la sincronización no es posible');\n    return false;\n  }\n  \n  if (isSyncing) {\n    console.log('Ya hay una sincronización en progreso');\n    return false;\n  }\n  \n  isSyncing = true;\n  \n  console.log('🔄 Iniciando sincronización de datos...');\n  \n  try {\n    // Procesar la cola de sincronización\n    const syncQueue = await getSyncQueue();\n    console.log(`📋 Cola de sincronización: ${syncQueue.length} elementos`);\n    \n    for (const item of syncQueue) {\n      if (item.entityType === 'plato') {\n        // Obtener el plato completo de IndexedDB\n        const plato = await getPlato(item.entityId);\n        \n        if (plato) {\n          console.log(`🍽️ Sincronizando plato: ${plato.name} (${plato.id})`);\n          \n          try {\n            // Intentar sincronización minimalista\n            const success = await syncPlato(plato);\n            \n            if (success.success) {\n              console.log(`✅ Plato ${plato.id} sincronizado correctamente`);\n              await removeFromSyncQueue(item.id);\n            } else {\n              console.error(`❌ Error al sincronizar plato ${plato.id}`);\n            }\n          } catch (syncError) {\n            console.error(`❌ Excepción al sincronizar plato ${plato.id}:`, syncError);\n          }\n        } else {\n          console.warn(`⚠️ Plato ${item.entityId} no encontrado en IndexedDB`);\n          await removeFromSyncQueue(item.id);\n        }\n      }\n    }\n    \n    // Buscar platos pendientes que no estén en la cola\n    console.log('🔍 Buscando platos pendientes de sincronización...');\n    const pendingPlatos = await getPendingPlatos();\n    console.log(`📋 Platos pendientes: ${pendingPlatos.length}`);\n    \n    for (const plato of pendingPlatos) {\n      try {\n        console.log(`🍽️ Sincronizando plato pendiente: ${plato.name} (${plato.id})`);\n        const success = await syncPlato(plato);\n        \n        if (success.success) {\n          console.log(`✅ Plato pendiente ${plato.id} sincronizado correctamente`);\n        } else {\n          console.error(`❌ Error al sincronizar plato pendiente ${plato.id}: ${success.error}`);\n        }\n      } catch (syncError) {\n        console.error(`❌ Excepción al sincronizar plato pendiente ${plato.id}: ${syncError}`);\n      }\n    }\n    \n    console.log('✅ Sincronización completada');\n    return true;\n  } catch (error) {\n    console.error('❌ Error durante la sincronización:', error);\n    return false;\n  } finally {\n    isSyncing = false;\n  }\n};\n\n// Método ultra-minimal usando XMLHttpRequest sin headers\nconst tryUltraMinimalSync = async (data, platoId) => {\n  try {\n    console.log('🚨 Intentando sincronización ultra-minimal para plato:', platoId);\n    \n    // Crear un objeto XMLHttpRequest directamente\n    const xhr = new XMLHttpRequest();\n    \n    // Configurar una promesa para manejar la respuesta\n    const responsePromise = new Promise((resolve) => {\n      // Configurar timeout\n      const timeoutId = setTimeout(() => {\n        console.warn('⏱️ Timeout en sincronización ultra-minimal');\n        xhr.abort();\n        resolve(false);\n      }, 15000);\n      \n      xhr.onreadystatechange = async function() {\n        if (xhr.readyState === 4) {\n          clearTimeout(timeoutId);\n          if (xhr.status >= 200 && xhr.status < 300) {\n            console.log('✅ Sincronización ultra-minimal exitosa');\n            try {\n              await updatePlatoSyncStatus(platoId, 'synced');\n            } catch (dbError) {\n              console.error('Error al actualizar estado en BD:', dbError);\n            }\n            resolve(true);\n          } else {\n            console.error(`❌ Error en sincronización ultra-minimal: ${xhr.status}`);\n            resolve(false);\n          }\n        }\n      };\n      \n      xhr.onerror = function() {\n        clearTimeout(timeoutId);\n        console.error('❌ Error de red en sincronización ultra-minimal');\n        resolve(false);\n      };\n    });\n    \n    // Usar método POST con datos minimalistas\n    xhr.open('POST', `${API_URL}/platos/emergency-sync`, true);\n    \n    // Solo agregar Content-Type, nada más\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    \n    // Preparar datos ultra-minimalistas\n    const adaptedData = await adaptPlatoDataWithImageOptimization(data);\n    const minimalData = {\n      id: adaptedData.id,\n      name: (adaptedData.name || \"\").substring(0, 30),\n      price: Number(adaptedData.price) || 0\n    };\n    \n    // Enviar los datos\n    xhr.send(JSON.stringify(minimalData));\n    \n    return await responsePromise;\n  } catch (error) {\n    console.error('❌ Error en sincronización ultra-minimal:', error);\n    return false;\n  }\n};\n\n// Procesar la cola de sincronización\nconst processSyncQueue = async () => {\n  if (!await isOnline() || isSyncing) {\n    console.log(`No se puede procesar la cola. En línea: ${_isOnline}, Sincronizando: ${isSyncing}`);\n    return false;\n  }\n  \n  isSyncing = true;\n  console.log('Iniciando procesamiento de cola de sincronización...');\n  \n  try {\n    const syncItems = await getSyncQueue();\n    \n    if (syncItems.length === 0) {\n      console.log('No hay elementos en la cola de sincronización');\n      isSyncing = false;\n      return true;\n    }\n    \n    console.log(`Procesando ${syncItems.length} elementos en la cola de sincronización`);\n    \n    // Procesar cada elemento de la cola\n    for (const item of syncItems) {\n      let syncSuccess = false;\n      \n      if (item.type === 'create' && item.entityType === 'plato') {\n        syncSuccess = await syncPlatoToServer(item.data);\n      }\n      // Aquí pueden agregarse más tipos de sincronización según sea necesario\n      \n      if (syncSuccess) {\n        // Eliminar de la cola si la sincronización fue exitosa\n        await removeFromSyncQueue(item.id);\n        console.log(`Elemento ${item.id} eliminado de la cola de sincronización`);\n      } else {\n        console.log(`No se pudo sincronizar el elemento ${item.id}, se reintentará más tarde`);\n      }\n    }\n    \n    console.log('Procesamiento de cola de sincronización completado');\n    return true;\n  } catch (error) {\n    console.error('Error al procesar cola de sincronización:', error);\n    return false;\n  } finally {\n    isSyncing = false;\n  }\n};\n\n// Método de sincronización extremadamente simplificado para problemas persistentes\nexport const syncMinimalDataOnly = async (data, platoId, retryCount = 0) => {\n  const maxRetries = SYNC_CONFIG.maxRetries;\n  \n  // Usar datos minimalistas pero incluir la imagen optimizada\n  const adaptedData = await adaptPlatoDataWithImageOptimization(data);\n  const minimalData = {\n    id: adaptedData.id,\n    name: adaptedData.name?.substring(0, 50) || 'Plato sin nombre',\n    price: Number(adaptedData.price) || 0,\n    description: adaptedData.description?.substring(0, 100) || '',\n    category: adaptedData.category || 'principal',\n    image: adaptedData.image, // Incluir la imagen optimizada\n    is_available: Boolean(adaptedData.is_available),\n    minimal_sync: true\n  };\n  \n  return new Promise((resolve) => {\n    // Establecer timeout para toda la operación\n    const operationTimeoutId = setTimeout(() => {\n      console.warn('⏱️ Timeout global de la operación de sincronización');\n      resolve(false);\n    }, 30000);\n    \n    const xhr = new XMLHttpRequest();\n    \n    // Configurar timeouts más estrictos\n    xhr.timeout = 15000;\n    \n    xhr.onreadystatechange = async function() {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          clearTimeout(operationTimeoutId);\n          try {\n            await updatePlatoSyncStatus(platoId, 'synced');\n            console.log(`✅ Sincronización exitosa para plato ${platoId}`);\n          } catch (error) {\n            console.error('Error al actualizar estado:', error);\n          }\n          resolve(true);\n        } else if (xhr.status === 0) {\n          // Conexión abortada o no establecida\n          console.warn('⚠️ Conexión interrumpida');\n          handleRetry();\n        } else if (xhr.status === 431) {\n          console.error(`❌ Error 431 (Headers demasiado grandes) - Intentando método ultraminimal`);\n          tryUltraMinimalSync(adaptedData, platoId).then(success => {\n            clearTimeout(operationTimeoutId);\n            resolve(success);\n          });\n        } else {\n          console.error(`❌ Error HTTP ${xhr.status} en sincronización`);\n          handleRetry();\n        }\n      }\n    };\n    \n    xhr.ontimeout = function() {\n      console.warn('⏱️ Timeout de la petición HTTP');\n      handleRetry();\n    };\n    \n    xhr.onerror = function() {\n      console.error('❌ Error de red en sincronización');\n      handleRetry();\n    };\n    \n    // Función para manejar reintentos\n    const handleRetry = () => {\n      if (retryCount < maxRetries) {\n        const delay = SYNC_CONFIG.retryIntervals[retryCount] || 5000;\n        console.log(`🔄 Reintentando en ${delay}ms... (${retryCount + 1}/${maxRetries})`);\n        \n        setTimeout(() => {\n          clearTimeout(operationTimeoutId);\n          syncMinimalDataOnly(data, platoId, retryCount + 1)\n            .then(success => resolve(success));\n        }, delay);\n      } else {\n        clearTimeout(operationTimeoutId);\n        console.warn('❌ Agotados todos los reintentos de sincronización');\n        resolve(false);\n      }\n    };\n    \n    try {\n      // Usar método POST con headers mínimos\n      xhr.open('POST', `${API_URL}/platos`, true);\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      \n      // Enviar los datos minimalistas\n      xhr.send(JSON.stringify(minimalData));\n    } catch (error) {\n      console.error('❌ Error al iniciar la petición:', error);\n      handleRetry();\n    }\n  });\n};\n\n// Sincronizar un plato con el servidor\nconst syncPlatoToServer = async (plato, retryCount = 0) => {\n  const maxRetries = SYNC_CONFIG.maxRetries;\n  \n  // Si el plato está marcado como problemático, omitirlo\n  if (plato.sync_problematic) {\n    console.warn(`⚠️ Omitiendo plato ${plato.id} marcado como problemático para sincronización`);\n    return false;\n  }\n  \n  console.log(`Sincronizando plato ${plato.id} con el servidor (intento ${retryCount + 1}/${maxRetries + 1})...`);\n  \n  try {\n    // Omitir verificación si está desactivada\n    if (!SYNC_CONFIG.skipServerAvailabilityCheck) {\n      // Verificar si el servidor está disponible\n      const serverAvailable = await checkServerAvailability();\n      if (!serverAvailable) {\n        console.error('❌ El servidor no está disponible. Posponiendo sincronización.');\n        return false;\n      }\n    }\n    \n    // Preparar datos para sincronización incluyendo la imagen\n    let adaptedData = await adaptPlatoDataWithImageOptimization(plato);\n    let syncData = {\n      id: adaptedData.id,\n      name: adaptedData.name?.substring(0, 50) || 'Plato sin nombre',\n      price: Number(adaptedData.price) || 0,\n      description: adaptedData.description?.substring(0, 100) || '',\n      availableQuantity: Number(adaptedData.availableQuantity) || 0,\n      is_available: Boolean(adaptedData.is_available),\n      image: adaptedData.image || null, // Incluir la imagen\n      minimal_sync: true\n    };\n    \n    // Usar el método más confiable para sincronización\n    return await syncPlato(adaptedData);\n  } catch (error) {\n    console.error('❌ Error en sincronización:', error);\n    \n    if (retryCount >= maxRetries) {\n      try {\n        await markPlatoAsSyncProblematic(plato.id);\n      } catch (markError) {\n        console.error('Error al marcar plato como problemático:', markError);\n      }\n    }\n    \n    return false;\n  }\n};\n\n// Verificar estado de sincronización con el backend\nconst checkSyncStatus = async () => {\n  try {\n    console.log('🔄 Verificando estado de sincronización...');\n    \n    const response = await fetch(`${API_URL}/sync/status`, {\n      method: 'GET',\n      headers: { 'Accept': 'application/json' },\n      credentials: 'omit' // Importante: no enviar cookies\n    });\n    \n    if (response.ok) {\n      const data = await response.json();\n      console.log('📊 Estado de sincronización:', data);\n      \n      // Si no existe la tabla, intentar crearla\n      if (!data.data.mysql.tablaPlatos) {\n        console.log('⚠️ La tabla platos no existe, intentando configurar...');\n        await setupSync();\n      }\n      \n      return data.data;\n    } else {\n      console.error('❌ Error al verificar estado de sincronización:', await response.text());\n      return null;\n    }\n  } catch (error) {\n    console.error('❌ Error al verificar estado de sincronización:', error);\n    return null;\n  }\n};\n\n// Configurar la sincronización - crear tablas necesarias\nconst setupSync = async () => {\n  try {\n    console.log('🔄 Configurando sincronización...');\n    \n    const response = await fetch(`${API_URL}/sync/setup`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'omit',\n      body: JSON.stringify({ force: false })\n    });\n    \n    if (response.ok) {\n      const data = await response.json();\n      console.log('✅ Configuración de sincronización completada:', data);\n      return true;\n    } else {\n      console.error('❌ Error al configurar sincronización:', await response.text());\n      return false;\n    }\n  } catch (error) {\n    console.error('❌ Error al configurar sincronización:', error);\n    return false;\n  }\n};\n\n// Inicializar el servicio de sincronización\nconst initSyncService = () => {\n  console.log('🔄 Inicializando servicio de sincronización...');\n  \n  // Probar conexiones y configurar sincronización\n  Promise.all([\n    testServerConnection(),\n    checkSyncStatus()\n  ]).then(([isApiConnected, syncStatus]) => {\n    console.log(`✅ Estado de conexión directa - API: ${isApiConnected}`);\n    \n    if (isApiConnected) {\n      // Configurar escuchas para eventos de conexión\n      setupConnectionListeners();\n      \n      // Si hay estado de sincronización, proceder con la sincronización\n      if (syncStatus && syncStatus.mysql && syncStatus.mysql.connected) {\n        console.log('📊 MySQL conectado, procediendo con sincronización');\n        syncData();\n        \n        // Reactivar la sincronización periódica (cada 1 minuto)\n        const syncInterval = setInterval(syncData, 60000);\n      } else {\n        console.log('⚠️ MySQL no está configurado correctamente, intentando configurar...');\n        setupSync().then(success => {\n          if (success) {\n            console.log('✅ Configuración exitosa, iniciando sincronización');\n            syncData();\n            \n            // Reactivar la sincronización periódica (cada 1 minuto)\n            const syncInterval = setInterval(syncData, 60000);\n          }\n        });\n      }\n    } else {\n      console.error('❌ No se pudo establecer conexión con el servidor.');\n    }\n  });\n  \n  console.log('⚙️ Servicio de sincronización inicializado');\n};\n\n// Exportar las funciones necesarias\nexport {\n  initSyncService,\n  syncData,\n  isOnline,\n  _isOnline,\n  testServerConnection,\n  testMySQLConnection,\n  checkSyncStatus,\n  setupSync,\n  syncPlato,\n  adaptPlatoDataWithImageOptimization\n};\n\n// Asegúrate de que la función que maneja la sincronización tenga un mejor manejo de errores\n\n/**\n * Función para sincronizar un plato con el servidor, asegurando que la imagen se incluya\n * @param {Object} plato - El plato a sincronizar\n * @returns {Promise<Object>} - Resultado de la sincronización\n */\nconst syncPlato = async (plato) => {\n  console.log(`🔄 Sincronizando plato: ${plato.name} (ID: ${plato.id})`);\n  \n  try {\n    // Preparar los datos para enviar (incluir la imagen optimizada)\n    const platoToSync = await adaptPlatoDataWithImageOptimization(plato);\n    \n    // Omitir la imagen en los logs para evitar mensajes demasiado largos\n    console.log('📤 Datos a enviar:', { \n      ...platoToSync, \n      image: platoToSync.image ? 'Imagen en base64 (omitida en log)' : null \n    });\n    \n    // Imprimir la URL exacta para depuración\n    const url = SYNC_CONFIG.platoUrl; // Usar la configuración existente\n    console.log(`🔗 URL de sincronización: ${url}`);\n    \n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(platoToSync),\n      // Evitar que se incluyan cookies u otros datos de autenticación si no son necesarios\n      credentials: 'omit'\n    });\n    \n    // Verificar si la respuesta es exitosa\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`❌ Error de sincronización (${response.status}): ${errorText}`);\n      \n      // Intentar con el método de sincronización minimalista si hay un error\n      if (response.status >= 400) {\n        console.log('⚠️ Intentando sincronización minimalista como fallback...');\n        return await syncMinimalDataOnly(plato);\n      }\n      \n      return {\n        success: false,\n        message: `Error de servidor: ${response.status} ${response.statusText}`,\n        error: errorText\n      };\n    }\n    \n    // Procesar la respuesta exitosa\n    const responseData = await response.json();\n    console.log('✅ Sincronización exitosa:', responseData);\n    \n    // Actualizar el estado de sincronización en IndexedDB\n    try {\n      await updatePlatoSyncStatus(plato.id, true);\n      console.log(`✅ Estado de sincronización actualizado para plato ID: ${plato.id}`);\n    } catch (syncStatusError) {\n      console.warn(`⚠️ No se pudo actualizar el estado de sincronización: ${syncStatusError.message}`);\n    }\n    \n    return {\n      success: true,\n      message: 'Plato sincronizado correctamente',\n      data: responseData\n    };\n  } catch (error) {\n    console.error('❌ Error en sincronización:', error);\n    \n    // Intentar con el método de sincronización minimalista si hay un error\n    console.log('⚠️ Intentando sincronización minimalista como fallback...');\n    return await syncMinimalDataOnly(plato);\n  }\n};\n\n// Función para adaptar los datos del plato antes de sincronizar, con optimización de imágenes\nconst adaptPlatoDataWithImageOptimization = async (plato) => {\n  // Crear una copia para no modificar el original\n  const adaptedData = { ...plato };\n  \n  // Asegurarse de que todos los campos necesarios estén presentes\n  adaptedData.id = plato.id;\n  adaptedData.name = plato.name || 'Plato sin nombre';\n  adaptedData.price = parseFloat(plato.price) || 0;\n  adaptedData.description = plato.description || '';\n  adaptedData.category = plato.category || 'principal';\n  \n  // Optimizar la imagen si existe\n  if (plato.image && typeof plato.image === 'string' && plato.image.length > 0) {\n    try {\n      adaptedData.image = await optimizeImageForSync(plato.image);\n      console.log(`Imagen optimizada para ${plato.name}`);\n    } catch (error) {\n      console.warn(`Error al optimizar imagen para ${plato.name}:`, error);\n      adaptedData.image = plato.image; // Usar la original en caso de error\n    }\n  } else {\n    adaptedData.image = plato.image || null;\n  }\n  \n  adaptedData.image_url = plato.image_url || '';\n  adaptedData.is_available = plato.is_available !== false;\n  adaptedData.includesDrink = plato.includesDrink || false;\n  adaptedData.availableQuantity = plato.availableQuantity || 0;\n  \n  return adaptedData;\n};\n\n/**\n * Actualiza el estado de sincronización de un elemento\n * @param {string} id - ID del elemento\n * @param {string|boolean} status - Estado de sincronización ('pending', 'synced', 'pending_deletion' o un booleano)\n * @returns {Promise<boolean>} - true si se actualizó correctamente\n */\nexport async function updateSyncStatus(id, status) {\n  try {\n    // Validar que el status sea uno de los valores permitidos o convertir booleano a string\n    let validStatus = status;\n    \n    // Si es booleano, convertirlo al estado correspondiente\n    if (typeof status === 'boolean') {\n      validStatus = status === true ? 'synced' : 'pending';\n    }\n    \n    // Ahora validar que sea uno de los estados permitidos\n    if (!['pending', 'synced', 'pending_deletion'].includes(validStatus)) {\n      console.warn(`⚠️ No se pudo actualizar el estado de sincronización: Estado inválido: ${status}. Debe ser uno de: pending, synced, pending_deletion`);\n      return false;\n    }\n    \n    // Continuar con la lógica existente para actualizar el estado\n    // ...existing code...\n    \n    return true;\n  } catch (error) {\n    console.error('Error al actualizar estado de sincronización:', error);\n    return false;\n  }\n}","import { render } from \"./App.vue?vue&type=template&id=7a64aa75\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=7a64aa75&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"home-container\">\r\n    <h1>Sistema de Gestión de Menú</h1>\r\n    \r\n    <div class=\"auth-options\">\r\n      <router-link to=\"/login\" class=\"auth-button login\">Iniciar Sesión</router-link>\r\n      <router-link to=\"/register\" class=\"auth-button register\">Registrarse</router-link>\r\n    </div>\r\n    \r\n    <div class=\"login-info\">\r\n      <p>Para probar la aplicación, puedes usar estas credenciales:</p>\r\n      <ul>\r\n        <li><strong>Email:</strong> superadmin@example.com | <strong>Contraseña:</strong>SuperAdmin2023</li>\r\n        <li><strong>Email:</strong> admin@example.com      | <strong>Contraseña:</strong>Admin2023</li>\r\n        <li><strong>Email:</strong> empleado@example.com   | <strong>Contraseña:</strong>Empleado2023</li>\r\n      </ul>\r\n    </div>\r\n    \r\n    <div class=\"menu-options\">\r\n      <div class=\"option-card\" @click=\"goToMenu\">\r\n        <h2>Gestionar Menú</h2>\r\n        <p>Configura tu menú, precios y formas de pago</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'HomeView',\r\n  setup() {\r\n    const router = useRouter();\r\n    \r\n    const goToMenu = () => {\r\n      router.push('/menu');\r\n    };\r\n    \r\n    return {\r\n      goToMenu\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 40px;\r\n  color: #4CAF50;\r\n}\r\n\r\n.auth-options {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.auth-button {\r\n  padding: 12px 30px;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.auth-button.login {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.auth-button.login:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.auth-button.register {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.auth-button.register:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.menu-options {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 30px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.option-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n  width: 300px;\r\n  cursor: pointer;\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.option-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 15px;\r\n  color: #333;\r\n}\r\n\r\np {\r\n  color: #666;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Estilos para la información de inicio de sesión */\r\n.login-info {\r\n  margin: 20px auto;\r\n  padding: 15px;\r\n  background-color: #f0f7ff;\r\n  border-radius: 8px;\r\n  border-left: 4px solid #007bff;\r\n  max-width: 600px;\r\n  text-align: left;\r\n}\r\n\r\n.login-info p {\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.login-info ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.login-info li {\r\n  padding: 5px 0;\r\n  font-size: 14px;\r\n}\r\n\r\n/* garantizar una buena experiencia en dispositivos móviles */\r\n@media (max-width: 480px) {\r\n  .payment-options {\r\n    flex-direction: column;\r\n    gap: 8px;\r\n  }\r\n  \r\n  .payment-option {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./HomeView.vue?vue&type=template&id=4e8e3a5c&scoped=true\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=4e8e3a5c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e8e3a5c\"]])\n\nexport default __exports__","<template>\n  <div class=\"login-container\">\n    <div class=\"login-card\">\n      <h1 class=\"login-title\">Iniciar Sesión</h1>\n      \n      <form @submit.prevent=\"handleLogin\" class=\"login-form\">\n        <div class=\"form-group\">\n          <label for=\"email\">Correo electrónico</label>\n          <input \n            type=\"email\" \n            id=\"email\" \n            v-model=\"email\" \n            required \n            placeholder=\"Ingresa tu correo\" \n          />\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"password\">Contraseña</label>\n          <input \n            type=\"password\" \n            id=\"password\" \n            v-model=\"password\" \n            required \n            placeholder=\"Ingresa tu contraseña\" \n          />\n        </div>\n        \n        <div v-if=\"errorMessage\" class=\"error-message\">\n          {{ errorMessage }}\n        </div>\n        \n        <button type=\"submit\" :disabled=\"isLoading\" class=\"login-button\">\n          {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\n        </button>\n      </form>\n      \n      <div class=\"login-options\">\n        <router-link to=\"/register\">¿No tienes cuenta? Regístrate</router-link>\n        <a href=\"#\" @click.prevent=\"handleForgotPassword\">¿Olvidaste tu contraseña?</a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { login } from '@/services/authService';\nimport { alert } from '../services/dialogService';\n\nexport default {\n  name: 'LoginView',\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const email = ref('');\n    const password = ref('');\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n\n    const handleLogin = async () => {\n      // Limpiar mensajes de error previos\n      errorMessage.value = '';\n      isLoading.value = true;\n      \n      try {\n        // Limpiar completamente cualquier sesión anterior\n        localStorage.clear(); // Limpia todo el localStorage\n        sessionStorage.clear(); // Limpia todo el sessionStorage\n        \n        // Intentar iniciar sesión\n        console.log('Intentando login con:', email.value);\n        const result = await login(email.value, password.value);\n        \n        console.log('Login exitoso:', result);\n        \n        // Establecer el estado de autenticación\n        localStorage.setItem('isLoggedIn', 'true');\n        \n        // Redirigir según el rol del usuario\n        if (result.user.roles && result.user.roles.includes('Superadministrador')) {\n          // Redirigir a vista de SuperAdmin\n          router.push('/superadmin');\n        } else if (result.user.roles && result.user.roles.includes('Administrador')) {\n          // Redirigir a vista de Admin\n          router.push('/admin');\n        } else {\n          // Redirigir a vista de Empleado para cualquier otro rol\n          router.push('/employee');\n        }\n      } catch (error) {\n        console.error('Error de login:', error);\n        errorMessage.value = error.message || 'Error al iniciar sesión';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    const handleForgotPassword = async () => {\n      await alert('Función de recuperación de contraseña no implementada en esta versión de demostración.');\n    };\n\n    return {\n      email,\n      password,\n      isLoading,\n      errorMessage,\n      handleLogin,\n      handleForgotPassword\n    };\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: calc(100vh - 100px);\n  padding: 20px;\n  background-color: #f5f5f5;\n}\n\n.login-card {\n  width: 100%;\n  max-width: 400px;\n  padding: 25px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n}\n\n.login-title {\n  text-align: center;\n  color: #4CAF50;\n  margin-bottom: 25px;\n  font-size: 28px;\n}\n\n.login-form {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form-group label {\n  font-weight: 600;\n  color: #333;\n}\n\n.form-group input {\n  padding: 12px 15px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n  transition: border-color 0.3s;\n  background-color: #f0f8ff;\n}\n\n.form-group input:focus {\n  border-color: #4CAF50;\n  outline: none;\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\n}\n\n.login-button {\n  padding: 12px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  height: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.login-button:hover:not(:disabled) {\n  background-color: #45a049;\n}\n\n.login-button:disabled {\n  background-color: #a5d6a7;\n  cursor: not-allowed;\n}\n\n.loading-spinner {\n  width: 20px;\n  height: 20px;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: white;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.login-options {\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.login-options a {\n  color: #4CAF50;\n  text-decoration: none;\n  font-size: 14px;\n}\n\n.login-options a:hover {\n  text-decoration: underline;\n}\n\n.credentials-info {\n  background-color: #f9f9f9;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  padding: 15px;\n  font-size: 14px;\n}\n\n.credentials-info p {\n  margin-top: 0;\n  margin-bottom: 8px;\n}\n\n.credentials-info ul {\n  margin: 0;\n  padding-left: 20px;\n}\n\n.credentials-info li {\n  margin-bottom: 5px;\n}\n\n.error-message {\n  color: #d32f2f;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n  text-align: center;\n}\n\n@media (max-width: 480px) {\n  .login-card {\n    padding: 20px;\n  }\n  \n  .login-title {\n    font-size: 24px;\n  }\n  \n  .form-group input {\n    padding: 10px;\n  }\n}\n\n.login-form button[type=\"submit\"] {\n  padding: 12px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  width: 100%;\n}\n\n.login-form button[type=\"submit\"]:hover:not(:disabled) {\n  background-color: #45a049;\n}\n\n.login-form button[type=\"submit\"]:disabled {\n  background-color: #a5d6a7;\n  cursor: not-allowed;\n}\n</style>\n","import { render } from \"./LoginView.vue?vue&type=template&id=7af9a333&scoped=true\"\nimport script from \"./LoginView.vue?vue&type=script&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=7af9a333&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7af9a333\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport { isAuthenticated, hasRole, getCurrentUser, removeToken } from '../services/authService'\nimport { alert } from '../services/dialogService'\nimport LoginView from '../views/LoginView.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LoginView,\n    meta: { requiresGuest: true }\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: () => import(/* webpackChunkName: \"register\" */ '../views/RegisterView.vue')\n  },\n  {\n    path: '/menu',\n    name: 'menu',\n    component: () => import(/* webpackChunkName: \"menu\" */ '../components/MenuComponent.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/menu/:id',\n    name: 'shared-menu',\n    component: () => import(/* webpackChunkName: \"shared-menu\" */ '../views/SharedMenuView.vue'),\n    props: true\n  },\n  {\n    path: '/superadmin',\n    name: 'superadmin',\n    component: () => import(/* webpackChunkName: \"superadmin\" */ '../views/SuperAdminView.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Superadministrador']\n    }\n  },\n  {\n    path: '/admin',\n    name: 'admin',\n    component: () => import(/* webpackChunkName: \"admin\" */ '../views/AdminView.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Administrador', 'Superadministrador']\n    }\n  },\n  {\n    path: '/admin/sync-business-info',\n    name: 'sync-business-info',\n    component: () => import(/* webpackChunkName: \"sync-business-info\" */ '../components/admin/SyncBusinessInfo.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Administrador', 'Superadministrador']\n    }\n  },\n  {\n    path: '/employee',\n    name: 'employee',\n    component: () => import(/* webpackChunkName: \"employee\" */ '../views/EmployeeView.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Empleado']\n    }\n  },\n  {\n    path: '/platos',\n    name: 'platos',\n    component: () => import(/* webpackChunkName: \"platos\" */ '../views/PlatosView.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Administrador', 'Superadministrador']\n    }\n  },\n  {\n    path: '/admin/usuarios',\n    name: 'admin-usuarios',\n    component: () => import(/* webpackChunkName: \"admin-usuarios\" */ '../components/admin/AdminUsuarios.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Administrador', 'Superadministrador']\n    }\n  },\n  {\n    path: '/admin/restaurantes',\n    name: 'admin-restaurantes',\n    component: () => import(/* webpackChunkName: \"admin-restaurantes\" */ '../components/admin/AdminRestaurantes.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Administrador', 'Superadministrador']\n    }\n  },\n  {\n    path: '/reservas',\n    name: 'reservas',\n    component: () => import(/* webpackChunkName: \"reservas\" */ '../views/ReservasView.vue'),\n    meta: { \n      requiresAuth: true,\n      roles: ['Administrador', 'Superadministrador', 'Empleado']\n    }\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    name: 'notFound',\n    component: () => import('../views/NotFound.vue')\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.NODE_ENV === 'production' ? '/websap/' : '/'),\n  routes\n})\n\n// Navegación con protección de rutas\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  const requiresGuest = to.matched.some(record => record.meta.requiresGuest)\n  const requiresRoles = to.meta.roles\n  \n  // Limpiar cualquier información de usuario incorrecta o desactualizada\n  if (to.path === '/login') {\n    localStorage.removeItem('user');\n    localStorage.removeItem('isLoggedIn');\n    removeToken();\n  }\n  \n  // Si la ruta requiere autenticación y el usuario no está autenticado\n  if (requiresAuth && !isAuthenticated()) {\n    await alert('Debe iniciar sesión para acceder a esta página', {\n      title: 'Acceso Restringido'\n    });\n    next({ name: 'login' })\n  }\n  // Si la ruta requiere ser invitado y el usuario está autenticado\n  else if (requiresGuest && isAuthenticated()) {\n    // Determinar a dónde redirigir basado en el rol\n    const user = getCurrentUser();\n    if (user && user.roles) {\n      if (user.roles.includes('Superadministrador')) {\n        next({ name: 'superadmin' });\n      } else if (user.roles.includes('Administrador')) {\n        next({ name: 'admin' });\n      } else {\n        next({ name: 'employee' });\n      }\n    } else {\n      next({ name: 'home' });\n    }\n  }\n  // Si la ruta requiere roles específicos\n  else if (requiresRoles && isAuthenticated()) {\n    const userHasRequiredRole = requiresRoles.some(role => hasRole(role))\n    if (!userHasRequiredRole) {\n      // Redirigir a una página de acceso denegado o dashboard por defecto\n      await alert('No tiene permisos para acceder a esta sección', {\n        title: 'Acceso Denegado'\n      });\n      next({ name: 'home' })\n    } else {\n      next()\n    }\n  }\n  else {\n    next()\n  }\n})\n\nexport default router","const DB_NAME = 'websapDatabase';\r\nconst DB_VERSION = 3;\r\n\r\n// Definir todos los almacenes necesarios\r\nconst REQUIRED_STORES = [\r\n  { name: 'menuItems', keyPath: 'id' },\r\n  { name: 'menuImages', keyPath: 'id' },\r\n  { name: 'soldItems', keyPath: 'id' },\r\n  { name: 'businessInfo', keyPath: 'id' },\r\n  { name: 'users', keyPath: 'id' },\r\n  { name: 'sharedMenus', keyPath: 'id' }\r\n];\r\n\r\nexport async function initializeDatabase() {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n      \r\n      request.onerror = (event) => {\r\n        console.error('Error al abrir la base de datos:', event.target.error);\r\n        reject(event.target.error);\r\n      };\r\n      \r\n      request.onsuccess = (event) => {\r\n        const db = event.target.result;\r\n        console.log('Base de datos abierta correctamente, versión:', db.version);\r\n        \r\n        // Verificar que todos los almacenes existen\r\n        const existingStores = Array.from(db.objectStoreNames);\r\n        let allStoresExist = true;\r\n        \r\n        const missingStores = REQUIRED_STORES.filter(store => !existingStores.includes(store.name));\r\n        \r\n        if (missingStores.length > 0) {\r\n          console.error('Faltan los siguientes almacenes:', missingStores.map(s => s.name).join(', '));\r\n          allStoresExist = false;\r\n          \r\n          // Cerrar la conexión antes de intentar aumentar la versión\r\n          db.close();\r\n          \r\n          // Incrementar la versión para forzar la creación de los almacenes faltantes\r\n          const newVersion = DB_VERSION + 1;\r\n          console.log(`Intentando actualizar a versión ${newVersion} para crear almacenes faltantes`);\r\n          \r\n          const updateRequest = indexedDB.open(DB_NAME, newVersion);\r\n          \r\n          updateRequest.onupgradeneeded = (event) => {\r\n            const db = event.target.result;\r\n            for (const store of missingStores) {\r\n              if (!db.objectStoreNames.contains(store.name)) {\r\n                db.createObjectStore(store.name, { keyPath: store.keyPath });\r\n                console.log(`Almacén creado: ${store.name}`);\r\n              }\r\n            }\r\n          };\r\n          \r\n          updateRequest.onerror = (err) => {\r\n            console.error('Error al actualizar la base de datos:', err.target.error);\r\n            reject(err.target.error);\r\n          };\r\n          \r\n          updateRequest.onsuccess = () => {\r\n            console.log('Base de datos actualizada correctamente con los nuevos almacenes');\r\n            resolve();\r\n          };\r\n        } else {\r\n          console.log('Todos los almacenes existen en la base de datos');\r\n          resolve();\r\n        }\r\n      };\r\n      \r\n      request.onupgradeneeded = (event) => {\r\n        const db = event.target.result;\r\n        \r\n        for (const store of REQUIRED_STORES) {\r\n          if (!db.objectStoreNames.contains(store.name)) {\r\n            db.createObjectStore(store.name, { keyPath: store.keyPath });\r\n            console.log(`Almacén creado: ${store.name}`);\r\n          }\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Error crítico al inicializar la base de datos:', error);\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport { initializeDatabase } from './services/dbInitializer'\n\n// Añadir estilos globales\nimport './assets/global.css'\n// Añadir estilos de tema\nimport './assets/theme.css'\n\n// Importar utilidades de prueba para WhatsApp\nimport './utils/whatsappSimulator';\nimport './utils/testReservations';\n\n// Función para formatear fechas\nfunction formatDate(dateString) {\n    if (!dateString) return '';\n    \n    try {\n        // Formato específico con T y Z: \"29T05:00:00.000Z/05/2025\"\n        if (typeof dateString === 'string' && dateString.includes('T') && dateString.includes('/')) {\n            const parts = dateString.split('/');\n            if (parts.length === 3) {\n                const day = parts[0].split('T')[0];\n                return `${day}/${parts[1]}/${parts[2]}`;\n            }\n        }\n        \n        // Formato ISO: \"2025-05-29\"\n        if (typeof dateString === 'string' && dateString.includes('-')) {\n            const parts = dateString.split('-');\n            if (parts.length === 3) {\n                return `${parts[2]}/${parts[1]}/${parts[0]}`;\n            }\n        }\n        \n        // Intentar parsear como objeto Date\n        const date = new Date(dateString);\n        if (!isNaN(date.getTime())) {\n            const day = date.getDate().toString().padStart(2, '0');\n            const month = (date.getMonth() + 1).toString().padStart(2, '0');\n            const year = date.getFullYear();\n            return `${day}/${month}/${year}`;\n        }\n        \n        // Si no se puede formatear, devolver el string original\n        return dateString;\n    } catch (error) {\n        console.error('Error al formatear fecha:', error);\n        return dateString;\n    }\n}\n\n// Inicializar la base de datos antes de montar la aplicación\nasync function init() {\n    try {\n        await initializeDatabase();\n        console.log('Base de datos inicializada correctamente');\n        \n        // Crear y montar la aplicación solo después de que la BD esté lista\n        const app = createApp(App);\n        \n        // Registrar filtro global para formatear fechas\n        app.config.globalProperties.$filters = {\n            formatDate\n        };\n        \n        app.use(router);\n        app.mount('#app');\n    } catch (error) {\n        console.error('Error al inicializar la aplicación:', error);\n    }\n}\n\ninit();\n","// Servicio para manejar operaciones con IndexedDB\nconst DB_NAME = 'restauranteAppDB'; // Usar este nombre para todas las operaciones\nconst DB_VERSION = 4; // Incrementar la versión para forzar una actualización del esquema\nconst API_BASE_URL = process.env.VUE_APP_API_URL || 'http://localhost:3000'; // URL base para la API\nconst PLATOS_STORE = 'platos'; // Usar 'platos' en lugar de 'menuItems'\nconst SYNC_QUEUE_STORE = 'syncQueue';\n\n// Inicializar la base de datos\nconst initDB = () => {\n  return new Promise((resolve, reject) => {\n    console.log(`Intentando abrir la base de datos con versión: ${DB_VERSION}`);\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    \n    request.onerror = (event) => {\n      console.error('Error al abrir la base de datos IndexedDB:', event);\n      reject('Error al abrir la base de datos');\n    };\n    \n    request.onsuccess = (event) => {\n      const db = event.target.result;\n      console.log('IndexedDB inicializada correctamente');\n      resolve(db);\n    };\n    \n    request.onupgradeneeded = (event) => {\n      const db = event.target.result;\n      console.log('Actualizando estructura de la base de datos...');\n      \n      // Crear almacén para platos si no existe\n      if (!db.objectStoreNames.contains(PLATOS_STORE)) {\n        console.log('Creando almacén de platos...');\n        // Quitar autoIncrement para permitir IDs personalizados\n        const platosStore = db.createObjectStore(PLATOS_STORE, { keyPath: 'id' });\n        platosStore.createIndex('name', 'name', { unique: false });\n        platosStore.createIndex('syncStatus', 'syncStatus', { unique: false });\n        console.log('Almacén de platos creado');\n      } else {\n        console.log('El almacén de platos ya existe');\n        \n        // Si necesitamos modificar un almacén existente, primero hay que eliminarlo\n        // y luego volver a crearlo con la nueva configuración\n        try {\n          db.deleteObjectStore(PLATOS_STORE);\n          console.log('Almacén de platos eliminado para recreación');\n          \n          const platosStore = db.createObjectStore(PLATOS_STORE, { keyPath: 'id' });\n          platosStore.createIndex('name', 'name', { unique: false });\n          platosStore.createIndex('syncStatus', 'syncStatus', { unique: false });\n          console.log('Almacén de platos recreado con nueva configuración');\n        } catch (error) {\n          console.error('Error al intentar modificar el almacén de platos:', error);\n        }\n      }\n      \n      // Crear almacén para la cola de sincronización si no existe\n      if (!db.objectStoreNames.contains(SYNC_QUEUE_STORE)) {\n        console.log('Creando almacén de cola de sincronización...');\n        const syncQueueStore = db.createObjectStore(SYNC_QUEUE_STORE, { keyPath: 'id', autoIncrement: true });\n        syncQueueStore.createIndex('timestamp', 'timestamp', { unique: false });\n        syncQueueStore.createIndex('type', 'type', { unique: false });\n        console.log('Almacén de cola de sincronización creado');\n      } else {\n        console.log('El almacén de cola de sincronización ya existe');\n      }\n    };\n  });\n};\n\n// Abrir conexión a la base de datos\nconst openDB = async () => {\n  try {\n    return await initDB();\n  } catch (error) {\n    console.error('Error al abrir conexión a IndexedDB:', error);\n    throw error;\n  }\n};\n\n// Obtener todos los platos de IndexedDB\nconst getAllPlatos = async () => {\n  try {\n    console.log('Obteniendo todos los platos de IndexedDB...');\n    const db = await openDB();\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([PLATOS_STORE], 'readonly');\n      const store = transaction.objectStore(PLATOS_STORE);\n      const request = store.getAll();\n      \n      request.onsuccess = (event) => {\n        const allPlatos = event.target.result;\n        console.log(`Obtenidos ${allPlatos.length} platos totales de IndexedDB`);\n        \n        // Filtrar platos eliminados\n        const activePlatos = allPlatos.filter(plato => !plato.deleted);\n        console.log(`Filtrando platos eliminados: ${allPlatos.length - activePlatos.length} platos ocultos, ${activePlatos.length} platos activos`);\n        \n        resolve(activePlatos);\n      };\n      \n      request.onerror = (event) => {\n        console.error('Error al obtener platos de IndexedDB:', event);\n        reject('Error al obtener platos localmente');\n      };\n    });\n  } catch (error) {\n    console.error('Error en getAllPlatos:', error);\n    throw error;\n  }\n};\n\n// Obtener platos pendientes de sincronización\nconst getPendingPlatos = async () => {\n  try {\n    console.log('Buscando platos pendientes de sincronización...');\n    const db = await openDB();\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([PLATOS_STORE], 'readonly');\n      const store = transaction.objectStore(PLATOS_STORE);\n      const index = store.index('syncStatus');\n      const request = index.getAll('pending');\n      \n      request.onsuccess = (event) => {\n        const pendingPlatos = event.target.result;\n        console.log(`Encontrados ${pendingPlatos.length} platos pendientes de sincronización`);\n        resolve(pendingPlatos);\n      };\n      \n      request.onerror = (event) => {\n        console.error('Error al obtener platos pendientes:', event);\n        reject('Error al obtener platos pendientes');\n      };\n    });\n  } catch (error) {\n    console.error('Error en getPendingPlatos:', error);\n    throw error;\n  }\n};\n\n// Actualizar estado de sincronización de un plato\nconst updatePlatoSyncStatus = async (id, status) => {\n  console.log(`Actualizando estado de sincronización del plato ID ${id} a \"${status}\"...`);\n  \n  // Convertir booleanos a strings para compatibilidad\n  let validStatus = status;\n  if (typeof status === 'boolean') {\n    validStatus = status === true ? 'synced' : 'pending';\n    console.log(`Convertido estado booleano ${status} a \"${validStatus}\"`);\n  }\n  \n  // Validar que el estado sea uno de los permitidos\n  const validStatuses = ['pending', 'synced', 'pending_deletion'];\n  if (!validStatuses.includes(validStatus)) {\n    throw new Error(`Estado inválido: ${status}. Debe ser uno de: ${validStatuses.join(', ')}`);\n  }\n  \n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    \n    request.onerror = (event) => {\n      console.error('Error al abrir la base de datos:', event.target.error);\n      reject(new Error('No se pudo abrir la base de datos para actualizar el estado.'));\n    };\n    \n    request.onsuccess = (event) => {\n      const db = event.target.result;\n      \n      try {\n        const transaction = db.transaction([PLATOS_STORE], 'readwrite');\n        const platosStore = transaction.objectStore(PLATOS_STORE);\n        \n        // Obtener el plato primero\n        const getRequest = platosStore.get(id);\n        \n        getRequest.onerror = (event) => {\n          console.error(`Error al obtener plato ID ${id}:`, event.target.error);\n          reject(new Error(`No se pudo obtener el plato ID ${id}.`));\n        };\n        \n        getRequest.onsuccess = (event) => {\n          const plato = event.target.result;\n          \n          if (!plato) {\n            console.error(`No se encontró plato con ID ${id}.`);\n            reject(new Error(`No se encontró plato con ID ${id}.`));\n            return;\n          }\n          \n          // Actualizar el estado de sincronización\n          plato.syncStatus = validStatus;\n          \n          // Si es pending_deletion, marcar como no disponible también\n          if (validStatus === 'pending_deletion') {\n            plato.is_available = false;\n          }\n          \n          // Guardar el plato actualizado\n          const updateRequest = platosStore.put(plato);\n          \n          updateRequest.onerror = (event) => {\n            console.error(`Error al actualizar plato ID ${id}:`, event.target.error);\n            reject(new Error(`No se pudo actualizar el estado del plato ID ${id}.`));\n          };\n          \n          updateRequest.onsuccess = () => {\n            console.log(`Estado de sincronización del plato ID ${id} actualizado a \"${validStatus}\".`);\n            resolve(true);\n          };\n        };\n        \n        transaction.oncomplete = () => {\n          db.close();\n        };\n      } catch (error) {\n        console.error('Error en la transacción:', error);\n        reject(error);\n      }\n    };\n  });\n};\n\n// Agregar elemento a la cola de sincronización\nconst addToSyncQueue = async (item) => {\n  try {\n    console.log('Agregando elemento a la cola de sincronización:', item);\n    const db = await openDB();\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([SYNC_QUEUE_STORE], 'readwrite');\n      const store = transaction.objectStore(SYNC_QUEUE_STORE);\n      \n      const request = store.add(item);\n      \n      request.onsuccess = (event) => {\n        console.log('Elemento agregado a la cola de sincronización');\n        resolve(event.target.result);\n      };\n      \n      request.onerror = (event) => {\n        console.error('Error al agregar a la cola de sincronización:', event);\n        reject('Error al agregar a la cola de sincronización');\n      };\n    });\n  } catch (error) {\n    console.error('Error en addToSyncQueue:', error);\n    throw error;\n  }\n};\n\n// Obtener elementos de la cola de sincronización\nconst getSyncQueue = async () => {\n  try {\n    console.log('Obteniendo cola de sincronización...');\n    const db = await openDB();\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([SYNC_QUEUE_STORE], 'readonly');\n      const store = transaction.objectStore(SYNC_QUEUE_STORE);\n      const request = store.getAll();\n      \n      request.onsuccess = (event) => {\n        const queue = event.target.result;\n        console.log(`Obtenidos ${queue.length} elementos de la cola de sincronización`);\n        resolve(queue);\n      };\n      \n      request.onerror = (event) => {\n        console.error('Error al obtener cola de sincronización:', event);\n        reject('Error al obtener cola de sincronización');\n      };\n    });\n  } catch (error) {\n    console.error('Error en getSyncQueue:', error);\n    throw error;\n  }\n};\n\n// Eliminar elemento de la cola de sincronización\nconst removeFromSyncQueue = async (id) => {\n  try {\n    console.log(`Eliminando elemento ${id} de la cola de sincronización...`);\n    const db = await openDB();\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([SYNC_QUEUE_STORE], 'readwrite');\n      const store = transaction.objectStore(SYNC_QUEUE_STORE);\n      \n      const request = store.delete(id);\n      \n      request.onsuccess = () => {\n        console.log(`Elemento ${id} eliminado de la cola de sincronización`);\n        resolve(true);\n      };\n      \n      request.onerror = (event) => {\n        console.error('Error al eliminar de la cola de sincronización:', event);\n        reject('Error al eliminar de la cola de sincronización');\n      };\n    });\n  } catch (error) {\n    console.error('Error en removeFromSyncQueue:', error);\n    throw error;\n  }\n};\n\n// Eliminar un plato de IndexedDB y sincronizar con el servidor\nconst deletePlato = async (id) => {\n  try {\n    console.log(`Iniciando proceso de eliminación para plato ID: ${id}`);\n    \n    // Verificar si estamos en línea\n    const online = typeof navigator !== 'undefined' && navigator.onLine;\n    \n    if (online) {\n      try {\n        console.log(`Enviando solicitud al servidor para eliminar plato ID: ${id}`);\n        \n        // Usamos una URL absoluta para asegurarnos de que la solicitud llegue al servidor correcto\n        const serverUrl = 'http://localhost:3000/api/sync/platos';\n        console.log(`URL completa para sincronización: ${serverUrl}`);\n        \n        // Enviar una solicitud POST con operation=delete en lugar de DELETE\n        // Esto es más compatible con algunos servidores y proxies\n        const response = await fetch(serverUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: id,\n            operation: 'delete'\n          })\n        });\n        \n        // Registrar detalles completos de la respuesta para depuración\n        console.log(`Respuesta del servidor: Status ${response.status}`);\n        let responseText = '';\n        try {\n          responseText = await response.text();\n          console.log(`Respuesta completa: ${responseText}`);\n          const data = JSON.parse(responseText);\n          \n          if (response.ok) {\n            console.log(`✅ Plato ID ${id} eliminado con éxito del servidor:`, data);\n            \n            // Si se eliminó correctamente del servidor, ahora lo eliminamos de IndexedDB\n            await deleteFromIndexedDB(id);\n            return true;\n          } else {\n            console.error(`❌ Error al eliminar plato ID ${id} del servidor:`, data);\n            // Si hay error en el servidor, marcamos para eliminación y eliminamos localmente\n            await markPlatoForDeletion(id);\n            return true;\n          }\n        } catch (parseError) {\n          console.error(`Error al procesar respuesta: ${responseText}`, parseError);\n          await markPlatoForDeletion(id);\n          return true;\n        }\n      } catch (syncError) {\n        console.error(`❌ Error de red al sincronizar eliminación del plato ID ${id}:`, syncError);\n        // Si hay error de red, marcamos para eliminación y eliminamos localmente\n        await markPlatoForDeletion(id);\n        return true;\n      }\n    } else {\n      console.log(`Sin conexión a internet, marcando plato ID ${id} para eliminación futura`);\n      // Si estamos offline, marcamos para eliminación y eliminamos localmente\n      await markPlatoForDeletion(id);\n      return true;\n    }\n  } catch (error) {\n    console.error(`❌ Error general al eliminar plato ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Función auxiliar para eliminar un plato solo de IndexedDB\nconst deleteFromIndexedDB = async (id) => {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    \n    request.onerror = (event) => {\n      console.error('Error al abrir la base de datos:', event.target.error);\n      reject(new Error('No se pudo abrir la base de datos para eliminar el plato'));\n    };\n    \n    request.onsuccess = (event) => {\n      const db = event.target.result;\n      \n      try {\n        const transaction = db.transaction([PLATOS_STORE], 'readwrite');\n        const platosStore = transaction.objectStore(PLATOS_STORE);\n        \n        const deleteRequest = platosStore.delete(id);\n        \n        deleteRequest.onerror = (event) => {\n          console.error(`Error al eliminar plato ID ${id}:`, event.target.error);\n          reject(new Error(`No se pudo eliminar el plato ID ${id}`));\n        };\n        \n        deleteRequest.onsuccess = () => {\n          console.log(`Plato ID ${id} eliminado con éxito de IndexedDB`);\n          resolve(true);\n        };\n        \n        transaction.oncomplete = () => {\n          db.close();\n        };\n      } catch (error) {\n        console.error('Error en la transacción:', error);\n        reject(error);\n      }\n    };\n  });\n};\n\n// Función para marcar un plato para eliminación\nconst markPlatoForDeletion = async (id) => {\n  try {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    \n    return new Promise((resolve, reject) => {\n      request.onerror = (event) => {\n        console.error('Error al abrir la base de datos:', event.target.error);\n        reject(new Error('No se pudo abrir la base de datos'));\n      };\n      \n      request.onsuccess = (event) => {\n        const db = event.target.result;\n        \n        try {\n          const transaction = db.transaction([PLATOS_STORE], 'readwrite');\n          const platosStore = transaction.objectStore(PLATOS_STORE);\n          \n          // Primero obtenemos el plato\n          const getRequest = platosStore.get(id);\n          \n          getRequest.onerror = (event) => {\n            console.error(`Error al obtener plato ID ${id}:`, event.target.error);\n            reject(new Error(`No se pudo obtener el plato ID ${id}`));\n          };\n          \n          getRequest.onsuccess = (event) => {\n            const plato = event.target.result;\n            \n            if (!plato) {\n              console.warn(`Plato ID ${id} no encontrado, no se puede marcar para eliminación`);\n              resolve(false);\n              return;\n            }\n            \n            // Marcar para eliminación\n            plato.syncStatus = 'pending_deletion';\n            plato.updated_at = new Date().toISOString();\n            \n            // Guardar los cambios\n            const updateRequest = platosStore.put(plato);\n            \n            updateRequest.onerror = (event) => {\n              console.error(`Error al marcar plato ID ${id} para eliminación:`, event.target.error);\n              reject(new Error(`No se pudo marcar el plato ID ${id} para eliminación`));\n            };\n            \n            updateRequest.onsuccess = () => {\n              console.log(`Plato ID ${id} marcado para eliminación`);\n              \n              // Ahora lo eliminamos de la vista del usuario (pero se mantiene en la base de datos para sincronización)\n              // Esto se hace añadiendo un flag 'deleted' que usamos para filtrar en las consultas\n              plato.deleted = true;\n              const finalUpdateRequest = platosStore.put(plato);\n              \n              finalUpdateRequest.onsuccess = () => {\n                console.log(`Plato ID ${id} marcado como eliminado para el usuario`);\n                resolve(true);\n              };\n              \n              finalUpdateRequest.onerror = (event) => {\n                console.error(`Error al marcar plato ID ${id} como eliminado:`, event.target.error);\n                reject(new Error(`No se pudo marcar el plato ID ${id} como eliminado`));\n              };\n            };\n          };\n          \n          transaction.oncomplete = () => {\n            db.close();\n          };\n        } catch (error) {\n          console.error('Error en la transacción:', error);\n          reject(error);\n        }\n      };\n    });\n  } catch (error) {\n    console.error(`Error general al marcar plato ID ${id} para eliminación:`, error);\n    throw error;\n  }\n};\n\n// Añadir esto al principio del archivo para depuración\nconst logDB = async () => {\n  const db = await openDB();\n  console.log('Bases de datos disponibles:', db.name, 'versión:', db.version);\n  console.log('Almacenes disponibles:', Array.from(db.objectStoreNames));\n};\n\n// Y llamarlo periódicamente para verificar\nsetInterval(logDB, 10000);\n\n// Verificar si un plato fue guardado correctamente (con timeout)\nconst verifyPlatoStorage = async (id) => {\n  try {\n    console.log(`Verificando almacenamiento del plato ID ${id}...`);\n    const db = await openDB();\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([PLATOS_STORE], 'readonly');\n      const store = transaction.objectStore(PLATOS_STORE);\n      const request = store.get(id);\n      \n      request.onsuccess = (event) => {\n        const plato = event.target.result;\n        if (plato) {\n          console.log(`Verificación exitosa: Plato ID ${id} encontrado en IndexedDB:`, plato);\n          resolve(plato);\n        } else {\n          console.error(`Verificación fallida: Plato ID ${id} NO encontrado en IndexedDB`);\n          resolve(null);\n        }\n      };\n      \n      request.onerror = (event) => {\n        console.error(`Error al verificar plato ID ${id}:`, event.target.error);\n        reject(new Error(`Error al verificar plato ID ${id}: ${event.target.error.message}`));\n      };\n      \n      transaction.oncomplete = () => {\n        console.log('Transacción de verificación completada');\n      };\n    });\n  } catch (error) {\n    console.error('Error en verifyPlatoStorage:', error);\n    throw error;\n  }\n};\n\n/**\n * Crea un nuevo plato en la base de datos\n * @param {Object} plato - Datos del plato a crear\n * @returns {Promise<Object>} - Plato creado con su ID asignado\n */\nasync function createPlato(plato) {\n  console.log('🍽️ INICIO - Creando nuevo plato en IndexedDB:', plato);\n  \n  try {\n    // Validación de datos\n    if (!plato || typeof plato !== 'object') {\n      console.error('❌ ERROR: El plato debe ser un objeto válido', plato);\n      throw new Error('El plato debe ser un objeto válido');\n    }\n    \n    if (!plato.name || plato.name.trim() === '') {\n      console.error('❌ ERROR: El plato debe tener un nombre válido', plato);\n      throw new Error('El plato debe tener un nombre válido');\n    }\n    \n    console.log('✅ Validación inicial del plato exitosa');\n    \n    // Abrimos la BD con registro detallado\n    console.log('🔄 Abriendo base de datos...');\n    const db = await openDB();\n    console.log('✅ Base de datos abierta correctamente');\n    \n    return new Promise((resolve, reject) => {\n      console.log('🔄 Iniciando transacción para guardar plato...');\n      \n      try {\n        const transaction = db.transaction([PLATOS_STORE], 'readwrite');\n        console.log('✅ Transacción creada correctamente');\n        \n        const store = transaction.objectStore(PLATOS_STORE);\n        console.log('✅ Almacén obtenido correctamente');\n        \n        // Preparar el plato con todos los campos necesarios\n        const platoToCreate = {\n          ...plato,\n          createdAt: plato.createdAt || new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n          syncStatus: 'pending',\n          localTimestamp: new Date().getTime()\n        };\n        \n        // Asegurarse de que el plato tenga un ID\n        if (!platoToCreate.id) {\n          platoToCreate.id = `plato_${Date.now()}_${Math.floor(Math.random() * 10000)}`;\n          console.log(`🆔 Generando ID para el plato: ${platoToCreate.id}`);\n        }\n        \n        console.log('📦 Intentando guardar plato con datos:', platoToCreate);\n        // Usar put en lugar de add para actualizar si el ID ya existe\n        const request = store.put(platoToCreate);\n        \n        request.onsuccess = async (event) => {\n          // El ID ahora viene del objeto, no del evento\n          const id = platoToCreate.id;\n          console.log(`✅ ÉXITO: Plato guardado con ID: ${id}`);\n          \n          // Crear objeto completo con el ID\n          const createdPlato = { ...platoToCreate };\n          \n          // Agregar a la cola de sincronización\n          try {\n            console.log('🔄 Agregando plato a cola de sincronización...');\n            await addToSyncQueue({\n              type: 'create',\n              entityType: 'plato',\n              entityId: id,\n              data: createdPlato,\n              timestamp: new Date().getTime()\n            });\n            console.log('✅ Plato agregado a la cola de sincronización correctamente');\n          } catch (syncError) {\n            console.warn('⚠️ Error al agregar a cola de sincronización:', syncError);\n            // Continuamos a pesar de error en cola\n          }\n          \n          // Verificación inmediata para depuración\n          console.log('🔍 Verificando inmediatamente el almacenamiento del plato...');\n          try {\n            const platos = await getAllPlatos();\n            console.log(`📊 Total de platos en BD: ${platos.length}`);\n            console.log('📋 Lista de platos:', platos);\n            \n            const found = platos.find(p => p.id === id);\n            if (found) {\n              console.log('✅ VERIFICACIÓN EXITOSA: Plato encontrado en la lista completa');\n            } else {\n              console.error('❌ VERIFICACIÓN FALLIDA: Plato NO encontrado en la lista completa');\n            }\n          } catch (listError) {\n            console.error('❌ Error al listar platos para verificación:', listError);\n          }\n          \n          // Verificación posterior para asegurar persistencia\n          setTimeout(async () => {\n            try {\n              console.log(`🔍 Verificando persistencia del plato ID ${id}...`);\n              const verified = await verifyPlatoStorage(id);\n              if (verified) {\n                console.log('✅ VERIFICACIÓN POSTERIOR: Plato confirmado en base de datos');\n              } else {\n                console.error('❌ VERIFICACIÓN POSTERIOR FALLIDA: Plato no encontrado en verificación');\n              }\n            } catch (verifyError) {\n              console.error('❌ Error en verificación posterior:', verifyError);\n            }\n          }, 1000);\n          \n          console.log('🏁 Finalizando creación del plato con éxito');\n          resolve(createdPlato);\n        };\n        \n        request.onerror = (event) => {\n          console.error('❌ ERROR al crear plato:', event.target.error);\n          reject(new Error(`Error al crear plato: ${event.target.error.message}`));\n        };\n        \n        transaction.onerror = (event) => {\n          console.error('❌ ERROR en transacción:', event.target.error);\n          reject(new Error(`Error en transacción: ${event.target.error.message}`));\n        };\n        \n        transaction.oncomplete = () => {\n          console.log('✅ Transacción completada correctamente');\n        };\n      } catch (transactionError) {\n        console.error('❌ ERROR al crear transacción:', transactionError);\n        reject(new Error(`Error al crear transacción: ${transactionError.message}`));\n      }\n    });\n  } catch (error) {\n    console.error('❌ ERROR GENERAL en createPlato:', error);\n    throw error;\n  }\n}\n\n/**\n * Función de depuración para verificar el contenido de la base de datos\n * @returns {Promise<void>}\n */\nasync function debugIndexedDB() {\n  console.log('🔍 INICIANDO DEPURACIÓN DE INDEXEDDB...');\n  \n  try {\n    // Verificar la existencia de la base de datos\n    const databases = await window.indexedDB.databases();\n    console.log('📊 Bases de datos disponibles:', databases);\n    \n    // Abrir la base de datos y verificar su estructura\n    const db = await openDB();\n    console.log('📦 Almacenes en la base de datos:', Array.from(db.objectStoreNames));\n    \n    // Verificar contenido del almacén de platos\n    const platos = await getAllPlatos();\n    console.log(`📋 Platos almacenados (${platos.length}):`, platos);\n    \n    // Verificar cola de sincronización\n    const syncQueue = await getSyncQueue();\n    console.log(`🔄 Cola de sincronización (${syncQueue.length}):`, syncQueue);\n    \n    console.log('✅ DEPURACIÓN COMPLETADA');\n    return {\n      databases,\n      stores: Array.from(db.objectStoreNames),\n      platos,\n      syncQueue\n    };\n  } catch (error) {\n    console.error('❌ ERROR EN DEPURACIÓN:', error);\n    throw error;\n  }\n}\n\n/**\n * Función auxiliar para asegurar que los datos del plato sean consistentes antes de guardar\n * @param {Object} platoData - Datos del plato a guardar\n * @returns {Object} Datos del plato normalizados\n */\nfunction normalizePlatoData(platoData) {\n  // Crear una copia para no modificar el original\n  const normalizedData = { ...platoData };\n  \n  // Asegurar que los campos necesarios tengan valores válidos\n  normalizedData.name = normalizedData.name?.trim() || 'Plato sin nombre';\n  normalizedData.price = typeof normalizedData.price === 'string' \n    ? parseFloat(normalizedData.price) || 0 \n    : (normalizedData.price || 0);\n  normalizedData.is_available = normalizedData.is_available !== false;\n  normalizedData.availableQuantity = parseInt(normalizedData.availableQuantity) || 0;\n  normalizedData.includesDrink = normalizedData.includesDrink === true;\n  \n  // Asegurar que los campos de fecha estén presentes\n  if (!normalizedData.createdAt) normalizedData.createdAt = new Date().toISOString();\n  normalizedData.updatedAt = new Date().toISOString();\n  \n  // Añadir estado de sincronización si no existe\n  if (!normalizedData.syncStatus) normalizedData.syncStatus = 'pending';\n  \n  // Limitar el tamaño de la imagen si existe (para evitar error 431)\n  if (normalizedData.image && typeof normalizedData.image === 'string' && \n      normalizedData.image.length > 200000) { // Si es mayor a ~200KB\n    console.warn('⚠️ Imagen demasiado grande, se reducirá para evitar problemas de sincronización');\n    \n    // Crear miniatura para sincronización\n    normalizedData.image_thumbnail = compressImageForSync(normalizedData.image);\n    \n    // Marcar que la imagen original está almacenada localmente\n    normalizedData.has_local_image = true;\n  }\n  \n  return normalizedData;\n}\n\n/**\n * Función para comprimir imágenes y reducir su tamaño para sincronización\n * @param {string} imageDataUrl - Imagen en formato data URL (base64)\n * @returns {string} Imagen comprimida como data URL\n */\nfunction compressImageForSync(imageDataUrl) {\n  try {\n    // Si no es una data URL, devolver como está\n    if (!imageDataUrl || !imageDataUrl.startsWith('data:')) {\n      return imageDataUrl;\n    }\n    \n    // Extraer información de tipo y datos\n    const match = imageDataUrl.match(/^data:([A-Za-z-+/]+);base64,(.+)$/);\n    if (!match) {\n      console.warn('⚠️ Formato de imagen no válido para compresión');\n      return imageDataUrl;\n    }\n    \n    // Crear una versión reducida (ejemplo: recortar a los primeros 50KB)\n    // Esto es una solución temporal; una implementación adecuada usaría canvas\n    // para redimensionar la imagen manteniendo la proporción\n    const maxLength = 50000; // ~50KB\n    const actualData = match[2];\n    \n    if (actualData.length <= maxLength) {\n      return imageDataUrl; // Ya es lo suficientemente pequeña\n    }\n    \n    // Crear una versión recortada para sincronización\n    // Nota: En producción, sería mejor usar canvas para redimensionar correctamente\n    return `data:${match[1]};base64,${actualData.substring(0, maxLength)}`;\n    \n  } catch (error) {\n    console.error('❌ Error al comprimir imagen:', error);\n    return imageDataUrl; // Devolver la original en caso de error\n  }\n}\n\n/**\n * Prepara un plato para sincronización con el servidor\n * @param {Object} plato - Plato a preparar para sincronización\n * @returns {Object} Plato optimizado para envío al servidor\n */\nfunction preparePlatoForSync(plato) {\n  // Si la función no existe, implementarla\n  if (!plato) {\n    console.error('❌ Error: Se intentó preparar un plato nulo para sincronización');\n    return {};\n  }\n  \n  console.log('🔄 Preparando plato para sincronización:', plato.id);\n  \n  // Crear una copia para no modificar el objeto original\n  const syncPlato = { ...plato };\n  \n  // PASO 1: Eliminar propiedades que no necesita el servidor\n  delete syncPlato.syncStatus;\n  delete syncPlato.localTimestamp;\n  delete syncPlato.needsSimplification;\n  delete syncPlato.image_thumbnail; // Si existe, la eliminaremos y usaremos una versión comprimida\n  delete syncPlato._id; // Eliminar posibles _id de MongoDB si existen\n  delete syncPlato.has_local_image;\n  \n  // PASO 2: Ser aún más agresivos con el tamaño de la imagen\n  if (syncPlato.image && typeof syncPlato.image === 'string') {\n    const imageSize = syncPlato.image.length;\n    console.log(`📊 Tamaño original de imagen: ${imageSize} bytes`);\n    \n    // Establecer un límite mucho más estricto (50KB máximo)\n    const maxImageSize = 50000; // 50KB\n    \n    if (imageSize > maxImageSize) {\n      console.warn('⚠️ Imagen demasiado grande, reduciendo drásticamente...');\n      \n      try {\n        // Si empieza con data:, es una data URL\n        if (syncPlato.image.startsWith('data:')) {\n          const match = syncPlato.image.match(/^data:([A-Za-z-+/]+);base64,(.+)$/);\n          if (match) {\n            const imageType = match[1];\n            const base64Data = match[2];\n            \n            // Crear una versión muy reducida\n            const reducedData = base64Data.substring(0, maxImageSize);\n            syncPlato.image = `data:${imageType};base64,${reducedData}`;\n            \n            console.log(`📊 Imagen reducida a: ${syncPlato.image.length} bytes`);\n          } else {\n            // Si no podemos extraer los datos, simplemente truncamos\n            syncPlato.image = syncPlato.image.substring(0, maxImageSize);\n          }\n        } else {\n          // Para URL normales, podríamos mantenerlas o reemplazarlas por un placeholder\n          // Por ahora, conservamos la URL ya que debería ser pequeña\n        }\n      } catch (imageError) {\n        console.error('❌ Error al procesar imagen para sincronización:', imageError);\n        // Si hay error, eliminamos la imagen para garantizar la sincronización\n        delete syncPlato.image;\n        syncPlato.image_error = 'Error al procesar imagen para sincronización';\n      }\n    }\n  }\n  \n  // PASO 3: Limitar todos los campos de texto\n  if (syncPlato.description && syncPlato.description.length > 500) {\n    syncPlato.description = syncPlato.description.substring(0, 500) + '...';\n  }\n  \n  if (syncPlato.name && syncPlato.name.length > 100) {\n    syncPlato.name = syncPlato.name.substring(0, 100);\n  }\n  \n  // PASO 4: Asegurar que todos los campos numéricos sean realmente números\n  syncPlato.price = Number(syncPlato.price) || 0;\n  syncPlato.availableQuantity = Number(syncPlato.availableQuantity) || 0;\n  syncPlato.includesDrink = Boolean(syncPlato.includesDrink);\n  \n  // PASO 5: Verificar el tamaño final del objeto serializado\n  const serializedSize = JSON.stringify(syncPlato).length;\n  console.log(`📊 Tamaño final del plato serializado: ${serializedSize} bytes`);\n  \n  // Si aún es mayor a 100KB, tomamos medidas drásticas\n  if (serializedSize > 100000) {\n    console.warn('⚠️ ADVERTENCIA: Plato demasiado grande incluso después de optimizaciones');\n    \n    // Crear objeto mínimo que contenga solo campos esenciales\n    const minimalPlato = {\n      id: syncPlato.id,\n      name: syncPlato.name,\n      price: syncPlato.price,\n      description: syncPlato.description ? syncPlato.description.substring(0, 100) + '...' : '',\n      includesDrink: syncPlato.includesDrink,\n      availableQuantity: syncPlato.availableQuantity,\n      is_available: syncPlato.is_available !== false,\n      // Eliminar imagen completamente\n      image: null,\n      oversized: true\n    };\n    \n    console.log('🔄 Usando versión mínima del plato para sincronización');\n    return minimalPlato;\n  }\n  \n  console.log('✅ Plato preparado para sincronización');\n  return syncPlato;\n}\n\n/**\n * Función auxiliar para guardar platos desde cualquier formulario de la aplicación\n * @param {Object} platoData - Datos del plato a guardar\n * @returns {Promise<Object>} El plato guardado\n */\nasync function guardarPlato(platoData) {\n  console.log('🔄 Iniciando guardado de plato con guardarPlato():', platoData);\n  \n  try {\n    // Validación de datos\n    if (!platoData || typeof platoData !== 'object') {\n      throw new Error('Los datos del plato deben ser un objeto válido');\n    }\n    \n    if (!platoData.name || platoData.name.trim() === '') {\n      throw new Error('El plato debe tener un nombre válido');\n    }\n    \n    // Normalizar los datos del plato\n    const platoParaGuardar = normalizePlatoData(platoData);\n    console.log('✅ Datos normalizados:', platoParaGuardar);\n    \n    // Usar la función createPlato\n    const platoGuardado = await createPlato(platoParaGuardar);\n    \n    console.log('✅ Plato guardado exitosamente:', platoGuardado);\n    return platoGuardado;\n  } catch (error) {\n    console.error('❌ Error en guardarPlato():', error);\n    throw error;\n  }\n}\n\n// Guardar un plato en IndexedDB\nconst savePlato = async (platoData) => {\n  console.log('Intentando guardar el plato:', platoData);\n  return new Promise(async (resolve, reject) => {\n    try {\n      console.log('Iniciando guardado en IndexedDB:', platoData);\n      \n      // Validación adicional de campos obligatorios\n      if (!platoData.name) {\n        throw new Error('El plato debe tener un nombre');\n      }\n      \n      const db = await openDB();\n      \n      // Usar la constante PLATOS_STORE\n      const transaction = db.transaction([PLATOS_STORE], 'readwrite');\n      const store = transaction.objectStore(PLATOS_STORE);\n      \n      // Agregar estado de sincronización al plato\n      const platoToSave = {\n        ...platoData,\n        syncStatus: 'pending',\n        localTimestamp: new Date().getTime()\n      };\n      \n      console.log('Guardando plato con datos finales:', platoToSave);\n      const request = store.add(platoToSave);\n      \n      request.onsuccess = async (event) => {\n        const savedId = event.target.result;\n        console.log(`Plato guardado localmente con ID: ${savedId}`);\n        \n        // Resolver la promesa con el objeto completo del plato\n        const savedPlato = { ...platoToSave, id: savedId };\n        \n        // Agregar a la cola de sincronización\n        try {\n          await addToSyncQueue({\n            type: 'create',\n            entityType: 'plato',\n            entityId: savedId,\n            data: platoToSave,\n            timestamp: new Date().getTime()\n          });\n          console.log('Plato agregado a la cola de sincronización');\n        } catch (syncError) {\n          console.error('Error al agregar a la cola de sincronización:', syncError);\n          // Continuamos a pesar del error en la cola\n        }\n        \n        // Verificación inmediata para depuración\n        setTimeout(async () => {\n          try {\n            const verificationResult = await verifyPlatoStorage(savedId);\n            if (verificationResult) {\n              console.log('Verificación exitosa del guardado del plato');\n            } else {\n              console.warn('⚠️ Advertencia: El plato no se pudo verificar en IndexedDB');\n            }\n          } catch (verifyError) {\n            console.error('Error al verificar almacenamiento:', verifyError);\n          }\n        }, 500);\n        \n        resolve(savedPlato);\n      };\n      \n      request.onerror = (event) => {\n        console.error('Error al guardar plato en IndexedDB:', event.target.error);\n        reject(new Error('Error al guardar plato localmente: ' + event.target.error.message));\n      };\n      \n      // Manejar errores de transacción\n      transaction.onerror = (event) => {\n        console.error('Error en la transacción de guardado:', event.target.error);\n        reject(new Error('Error en la transacción: ' + event.target.error.message));\n      };\n      \n      transaction.oncomplete = () => {\n        console.log('Transacción de guardado completada exitosamente');\n      };\n      \n    } catch (error) {\n      console.error('Error general en savePlato:', error);\n      reject(error);\n    }\n  });\n};\n\n// Implementar y exportar getPlato si no existe\nconst getPlato = async (id) => {\n  try {\n    console.log(`Obteniendo plato con ID ${id} de IndexedDB...`);\n    const db = await openDB();\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([PLATOS_STORE], 'readonly');\n      const store = transaction.objectStore(PLATOS_STORE);\n      const request = store.get(id);\n      \n      request.onsuccess = (event) => {\n        const plato = event.target.result;\n        if (plato) {\n          console.log(`Plato con ID ${id} encontrado:`, plato);\n          resolve(plato);\n        } else {\n          console.log(`No se encontró plato con ID ${id}`);\n          resolve(null);\n        }\n      };\n      \n      request.onerror = (event) => {\n        console.error(`Error al obtener plato con ID ${id}:`, event);\n        reject(`Error al obtener plato con ID ${id}`);\n      };\n    });\n  } catch (error) {\n    console.error(`Error en getPlato:`, error);\n    throw error;\n  }\n};\n\n// Simplificar la exposición de la función de depuración\nif (typeof window !== 'undefined') {\n  window.debugDB = debugIndexedDB;\n  // Exponer la función guardarPlato para debug y uso directo\n  window.guardarPlato = guardarPlato;\n}\n\nexport {\n  openDB,\n  savePlato,\n  getAllPlatos,\n  getPendingPlatos,\n  updatePlatoSyncStatus,\n  addToSyncQueue,\n  getSyncQueue,\n  removeFromSyncQueue,\n  deletePlato,\n  verifyPlatoStorage,\n  createPlato,\n  debugIndexedDB,\n  normalizePlatoData,\n  guardarPlato,  \n  preparePlatoForSync,\n  compressImageForSync,\n  getPlato\n};\n\nexport default {\n  openDB,\n  savePlato,\n  getAllPlatos,\n  getPendingPlatos,\n  updatePlatoSyncStatus,\n  addToSyncQueue,\n  getSyncQueue,\n  removeFromSyncQueue,\n  deletePlato,\n  verifyPlatoStorage,\n  createPlato,\n  debugIndexedDB,\n  normalizePlatoData,\n  guardarPlato,  \n  preparePlatoForSync,\n  compressImageForSync,\n  getPlato\n};","import { createApp, h, reactive } from 'vue';\r\n\r\n// Estado global del diálogo usando reactive para asegurar reactividad\r\nexport const dialogState = reactive({\r\n  show: false,\r\n  title: 'Mensaje',\r\n  message: '',\r\n  confirmText: 'Aceptar',\r\n  cancelText: 'Cancelar',\r\n  showCancel: false,\r\n  resolvePromise: null\r\n});\r\n\r\n// Componente de modal para confirmaciones\r\nconst ModalComponent = {\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: 'Confirmar'\r\n    },\r\n    message: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    confirmText: {\r\n      type: String,\r\n      default: 'Aceptar'\r\n    },\r\n    cancelText: {\r\n      type: String,\r\n      default: 'Cancelar'\r\n    },\r\n    showCancel: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  emits: ['confirm', 'cancel'],\r\n  template: `\r\n    <div class=\"dialog-overlay\" v-if=\"dialogState.show\">\r\n      <div class=\"dialog-container\">\r\n        <div class=\"dialog-header\">\r\n          <h3>{{ dialogState.title }}</h3>\r\n        </div>\r\n        <div class=\"dialog-content\">\r\n          <p>{{ dialogState.message }}</p>\r\n        </div>\r\n        <div class=\"dialog-footer\">\r\n          <button v-if=\"dialogState.showCancel\" @click=\"handleCancel\" class=\"dialog-button cancel-button\">{{ dialogState.cancelText }}</button>\r\n          <button @click=\"handleConfirm\" class=\"dialog-button confirm-button\">{{ dialogState.confirmText }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  mounted() {\r\n    // Agregar estilo inline si no está en el DOM\r\n    const style = document.createElement('style');\r\n    style.innerHTML = `\r\n      .dialog-overlay {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        z-index: 9999;\r\n      }\r\n      .dialog-container {\r\n        background-color: #fff;\r\n        border-radius: 8px;\r\n        width: 90%;\r\n        max-width: 500px;\r\n        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n        overflow: hidden;\r\n        animation: dialogFadeIn 0.3s;\r\n      }\r\n      .dialog-header {\r\n        padding: 15px 20px;\r\n        border-bottom: 1px solid #eee;\r\n      }\r\n      .dialog-header h3 {\r\n        margin: 0;\r\n        color: #333;\r\n      }\r\n      .dialog-content {\r\n        padding: 20px;\r\n      }\r\n      .dialog-footer {\r\n        padding: 15px 20px;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        gap: 10px;\r\n        border-top: 1px solid #eee;\r\n      }\r\n      .dialog-button {\r\n        padding: 10px 20px;\r\n        border-radius: 4px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        border: none;\r\n        transition: all 0.2s;\r\n      }\r\n      .confirm-button {\r\n        background-color: #4CAF50;\r\n        color: white;\r\n      }\r\n      .confirm-button:hover {\r\n        background-color: #45a049;\r\n      }\r\n      .cancel-button {\r\n        background-color: #f1f1f1;\r\n        color: #333;\r\n      }\r\n      .cancel-button:hover {\r\n        background-color: #e1e1e1;\r\n      }\r\n      @keyframes dialogFadeIn {\r\n        from {\r\n          opacity: 0;\r\n          transform: translateY(-20px);\r\n        }\r\n        to {\r\n          opacity: 1;\r\n          transform: translateY(0);\r\n        }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  },\r\n  methods: {\r\n    handleConfirm() {\r\n      if (dialogState.resolvePromise) {\r\n        dialogState.resolvePromise(true);\r\n        dialogState.resolvePromise = null;\r\n      }\r\n      dialogState.show = false;\r\n    },\r\n    handleCancel() {\r\n      if (dialogState.resolvePromise) {\r\n        dialogState.resolvePromise(false);\r\n        dialogState.resolvePromise = null;\r\n      }\r\n      dialogState.show = false;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Muestra un diálogo de confirmación\r\n * @param {String} message Mensaje a mostrar\r\n * @param {Object} options Opciones adicionales (title, confirmText, cancelText)\r\n * @returns {Promise<Boolean>} Promesa que se resuelve con true si se confirma, false si se cancela\r\n */\r\nexport function confirm(message, options = {}) {\r\n  return new Promise((resolve) => {\r\n    dialogState.show = true;\r\n    dialogState.message = message;\r\n    dialogState.title = options.title || 'Confirmar';\r\n    dialogState.confirmText = options.confirmText || 'Aceptar';\r\n    dialogState.cancelText = options.cancelText || 'Cancelar';\r\n    dialogState.showCancel = true;\r\n    dialogState.resolvePromise = resolve;\r\n  });\r\n}\r\n\r\n/**\r\n * Muestra un mensaje de alerta\r\n * @param {String} message Mensaje a mostrar\r\n * @param {Object} options Opciones adicionales (title, confirmText)\r\n * @returns {Promise<void>} Promesa que se resuelve cuando se cierra la alerta\r\n */\r\nexport function alert(message, options = {}) {\r\n  return new Promise((resolve) => {\r\n    dialogState.show = true;\r\n    dialogState.message = message;\r\n    dialogState.title = options.title || 'Mensaje';\r\n    dialogState.confirmText = options.confirmText || 'Aceptar';\r\n    dialogState.showCancel = false;\r\n    dialogState.resolvePromise = resolve;\r\n  });\r\n}\r\n\r\n/**\r\n * Maneja el evento de confirmación del diálogo\r\n */\r\nexport function handleConfirm() {\r\n  if (dialogState.resolvePromise) {\r\n    dialogState.resolvePromise(true);\r\n    dialogState.resolvePromise = null;\r\n  }\r\n  dialogState.show = false;\r\n}\r\n\r\n/**\r\n * Maneja el evento de cancelación del diálogo\r\n */\r\nexport function handleCancel() {\r\n  if (dialogState.resolvePromise) {\r\n    dialogState.resolvePromise(false);\r\n    dialogState.resolvePromise = null;\r\n  }\r\n  dialogState.show = false;\r\n}\r\n\r\n// Exportar un objeto por defecto para compatibilidad con importaciones anteriores\r\nexport default {\r\n  state: dialogState,\r\n  confirm,\r\n  alert,\r\n  handleConfirm,\r\n  handleCancel\r\n};\r\n","// Servicio para la gestión de reservas\nimport apiService from './apiService';\nimport eventBus from '../utils/eventBus';\n\n// Almacenamiento local para las reservas (simulando una base de datos)\nlet reservationsStore = [];\n\n// Intentar cargar reservas guardadas en localStorage al iniciar\ntry {\n  const savedReservations = localStorage.getItem('websap_reservations');\n  if (savedReservations) {\n    reservationsStore = JSON.parse(savedReservations);\n    console.log('Reservas cargadas desde localStorage:', reservationsStore.length);\n  }\n} catch (error) {\n  console.error('Error al cargar reservas desde localStorage:', error);\n}\n\n// Función para guardar las reservas en localStorage\nfunction saveReservationsToStorage() {\n  try {\n    localStorage.setItem('websap_reservations', JSON.stringify(reservationsStore));\n  } catch (error) {\n    console.error('Error al guardar reservas en localStorage:', error);\n  }\n}\n\n// Función para guardar una nueva reserva\nexport async function saveReservation(reservationData) {\n  try {\n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    // Generar un ID único para la reserva\n    const reservationId = 'res_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n    \n    // Crear el objeto de reserva con los datos recibidos\n    const reservation = {\n      id: reservationId,\n      fullName: reservationData.fullName,\n      mobilePhone: reservationData.mobilePhone,\n      landlinePhone: reservationData.landlinePhone || '',\n      email: reservationData.email || '',\n      address: reservationData.address || '',\n      date: reservationData.reservationDate,\n      time: reservationData.reservationTime,\n      peopleCount: reservationData.peopleCount,\n      notes: reservationData.additionalNotes || '',\n      status: 'pending', // Estado inicial: pendiente\n      createdAt: new Date().toISOString(),\n      source: reservationData.source || 'web' // Fuente de la reserva: web o whatsapp\n    };\n    \n    try {\n      // Intentar guardar en el backend\n      const response = await apiService.post('/whatsapp/reservas', {\n        nombre: reservation.fullName,\n        telefono: reservation.mobilePhone,\n        email: reservation.email,\n        fecha: reservation.date,\n        hora: reservation.time,\n        personas: reservation.peopleCount,\n        notas: reservation.notes,\n        created_by: reservationData.created_by || localStorage.getItem('userId') || null,\n        usuario_id: reservationData.usuario_id || (localStorage.getItem('userType') === 'user' ? localStorage.getItem('userId') : null)\n      });\n      \n      if (response.data && response.data.success) {\n        console.log('Reserva guardada en el backend:', response.data);\n        reservation.id = response.data.reservationId || reservation.id;\n      }\n    } catch (apiError) {\n      console.warn('No se pudo guardar la reserva en el backend, usando almacenamiento local:', apiError);\n    }\n    \n    // Guardar la reserva en nuestro almacenamiento local\n    reservationsStore.unshift(reservation);\n    saveReservationsToStorage();\n    \n    // Emitimos un evento para notificar a otros componentes sobre la nueva reserva\n    eventBus.emit('nueva-reserva', reservation);\n    \n    console.log('Reserva guardada correctamente:', reservation);\n    \n    return {\n      success: true,\n      reservation\n    };\n  } catch (error) {\n    console.error('Error al guardar la reserva:', error);\n    return {\n      success: false,\n      error: error.message || 'Error al guardar la reserva'\n    };\n  }\n}\n\n// Función para obtener todas las reservas\nexport async function getReservations() {\n  try {\n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    // Intentar obtener reservas desde el backend\n    try {\n      const response = await apiService.get('/whatsapp/reservas');\n      \n      if (response && response.success && Array.isArray(response.reservas)) {\n        console.log('✅ Reservas obtenidas desde el backend:', response.reservas.length);\n        \n        // Convertir las reservas del backend al formato que espera el frontend\n        const backendReservations = response.reservas.map(res => ({\n          id: res.id,\n          fullName: res.nombre,\n          mobilePhone: res.telefono,\n          email: res.email || '',\n          date: formatDateToDDMMYYYY(res.fecha),\n          time: res.hora,\n          peopleCount: res.personas,\n          notes: res.notas || '',\n          status: res.estado === 'confirmada' ? 'confirmed' : \n                 res.estado === 'cancelada' ? 'cancelled' : 'pending',\n          createdAt: res.creado_en,\n          source: res.origen || 'web',\n          created_by: res.created_by,\n          usuario_id: res.usuario_id\n        }));\n        \n        // Actualizar el almacenamiento local con las reservas del backend\n        reservationsStore = backendReservations;\n        saveReservationsToStorage();\n        \n        return {\n          success: true,\n          reservations: backendReservations\n        };\n      }\n    } catch (error) {\n      console.warn('Error al obtener reservas desde el backend, usando datos locales:', error);\n    }\n    \n    // Si no se pudieron obtener del backend o hubo un error, usar los datos locales\n    console.log('📋 Usando datos de reservas locales:', reservationsStore.length);\n    \n    // Formatear las fechas de las reservas locales\n    const formattedReservations = reservationsStore.map(res => ({\n      ...res,\n      date: formatDateToDDMMYYYY(res.date)\n    }));\n    \n    // Si no hay reservas en el almacenamiento, devolvemos un array vacío\n    if (formattedReservations.length === 0) {\n      return {\n        success: true,\n        reservations: []\n      };\n    }\n    \n    return {\n      success: true,\n      reservations: formattedReservations\n    };\n  } catch (error) {\n    console.error('❌ Error al obtener las reservas:', error);\n    return {\n      success: false,\n      error: error.message || 'Error al obtener las reservas'\n    };\n  }\n}\n\n// Función para actualizar el estado de una reserva\nexport async function updateReservationStatus(reservationId, status) {\n  try {\n    // Intentar actualizar en el backend\n    try {\n      const response = await apiService.put(`/whatsapp/reservas/${reservationId}`, {\n        estado: status === 'confirmed' ? 'confirmada' : \n                status === 'cancelled' ? 'cancelada' : 'pendiente'\n      });\n      \n      if (response.data && response.data.success) {\n        console.log('Estado de reserva actualizado en el backend:', response.data);\n      }\n    } catch (apiError) {\n      console.warn('No se pudo actualizar el estado de la reserva en el backend:', apiError);\n    }\n    \n    // Buscar la reserva en nuestro almacenamiento local\n    const reservationIndex = reservationsStore.findIndex(res => res.id === reservationId);\n    \n    if (reservationIndex === -1) {\n      throw new Error('Reserva no encontrada');\n    }\n    \n    // Actualizar el estado\n    reservationsStore[reservationIndex].status = status;\n    \n    // Guardar los cambios en localStorage\n    saveReservationsToStorage();\n    \n    // Emitir evento de actualización\n    eventBus.emit('reserva-actualizada', {\n      id: reservationId,\n      status\n    });\n    \n    return {\n      success: true,\n      message: 'Estado de reserva actualizado correctamente'\n    };\n  } catch (error) {\n    console.error('Error al actualizar el estado de la reserva:', error);\n    return {\n      success: false,\n      error: error.message || 'Error al actualizar el estado de la reserva'\n    };\n  }\n}\n\n// Función para guardar una reserva desde WhatsApp\nexport async function saveWhatsAppReservation(reserva) {\n  console.log(\"Procesando reserva desde WhatsApp:\", reserva);\n  \n  // Asegurarse de que el token esté configurado en apiService\n  const token = localStorage.getItem('token');\n  if (token) {\n    apiService.setToken(token);\n  }\n  \n  // Asegurar que los nuevos campos estén presentes en la reserva\n  const reservaCompleta = {\n    ...reserva,\n    created_by: reserva.created_by || localStorage.getItem('userId') || null,\n    usuario_id: reserva.usuario_id || (localStorage.getItem('userType') === 'user' ? localStorage.getItem('userId') : null)\n  };\n  \n  try {\n    const response = await apiService.post('/whatsapp/reservas', reservaCompleta);\n    \n    // Crear un objeto de reserva completo para devolver al frontend\n    const reservationObject = {\n      id: response.reservationId || Date.now().toString(),\n      fullName: reservaCompleta.nombre,\n      mobilePhone: reservaCompleta.telefono,\n      email: reservaCompleta.email || '',\n      date: formatDateToDDMMYYYY(reservaCompleta.fecha),\n      time: reservaCompleta.hora,\n      peopleCount: reservaCompleta.personas || 2,\n      notes: reservaCompleta.notas || '',\n      status: 'pending',\n      createdAt: new Date().toISOString(),\n      source: 'whatsapp',\n      created_by: reservaCompleta.created_by,\n      usuario_id: reservaCompleta.usuario_id\n    };\n    \n    return {\n      success: true,\n      reservation: reservationObject,\n      message: 'Reserva guardada correctamente'\n    };\n  } catch (error) {\n    console.warn('⚠️ No se pudo guardar la reserva en el backend, pero se guardó localmente:', error);\n    \n    // Guardar en IndexedDB como respaldo\n    await saveReservaLocally(reservaCompleta);\n    \n    return {\n      status: 'local',\n      success: true,\n      reservation: {\n        id: Date.now().toString(),\n        fullName: reservaCompleta.nombre,\n        mobilePhone: reservaCompleta.telefono,\n        email: reservaCompleta.email || '',\n        date: formatDateToDDMMYYYY(reservaCompleta.fecha),\n        time: reservaCompleta.hora,\n        peopleCount: reservaCompleta.personas || 2,\n        notes: reservaCompleta.notas || '',\n        status: 'pending',\n        createdAt: new Date().toISOString(),\n        source: 'whatsapp',\n        created_by: reservaCompleta.created_by,\n        usuario_id: reservaCompleta.usuario_id\n      },\n      message: 'Reserva guardada localmente debido a un error de conexión'\n    };\n  }\n}\n\n// Función para guardar una reserva localmente cuando falla el backend\nasync function saveReservaLocally(reserva) {\n  try {\n    // Añadir la reserva al almacenamiento local\n    const localReserva = {\n      id: 'local_' + Date.now(),\n      fullName: reserva.nombre || reserva.fullName,\n      mobilePhone: reserva.telefono || reserva.mobilePhone,\n      email: reserva.email || '',\n      date: formatDateToDDMMYYYY(reserva.fecha || reserva.date),\n      time: reserva.hora || reserva.time,\n      peopleCount: reserva.personas || reserva.peopleCount,\n      notes: reserva.notas || reserva.notes || '',\n      status: 'pending',\n      createdAt: new Date().toISOString(),\n      source: 'whatsapp',\n      created_by: reserva.created_by || localStorage.getItem('userId') || null,\n      usuario_id: reserva.usuario_id || (localStorage.getItem('userType') === 'user' ? localStorage.getItem('userId') : null),\n      pendingSave: true // Marcar para sincronizar cuando haya conexión\n    };\n    \n    // Añadir al store y guardar\n    reservationsStore.unshift(localReserva);\n    saveReservationsToStorage();\n    \n    // Emitir evento de nueva reserva\n    eventBus.emit('nueva-reserva', localReserva);\n    \n    return localReserva;\n  } catch (error) {\n    console.error('Error al guardar reserva localmente:', error);\n    throw error;\n  }\n}\n\n/**\n * Elimina una reserva específica\n * @param {string} reservationId - ID de la reserva a eliminar\n * @returns {Promise<Object>} - Resultado de la operación\n */\nexport async function deleteReservation(reservationId) {\n  try {\n    // Intentar eliminar en el backend primero\n    try {\n      const response = await apiService.delete(`/reservas/${reservationId}`);\n      console.log('Reserva eliminada en el backend:', response);\n    } catch (apiError) {\n      console.warn('No se pudo eliminar la reserva en el backend:', apiError);\n      // Continuamos con la eliminación local aunque falle el backend\n    }\n    \n    // Eliminar de nuestro almacenamiento local\n    const index = reservationsStore.findIndex(r => r.id === reservationId);\n    if (index !== -1) {\n      reservationsStore.splice(index, 1);\n      saveReservationsToStorage();\n      \n      // Emitir evento de actualización\n      eventBus.emit('reserva-eliminada', { id: reservationId });\n      \n      return {\n        success: true,\n        message: 'Reserva eliminada correctamente'\n      };\n    } else {\n      return {\n        success: false,\n        error: 'No se encontró la reserva especificada'\n      };\n    }\n  } catch (error) {\n    console.error('Error al eliminar reserva:', error);\n    return {\n      success: false,\n      error: error.message || 'Error al eliminar la reserva'\n    };\n  }\n}\n\n/**\n * Verifica si una reserva tiene más de X días de antigüedad\n * @param {Object} reservation - Reserva a verificar\n * @param {number} days - Número de días para considerar antigua\n * @returns {boolean} - true si la reserva es más antigua que los días especificados\n */\nexport function isReservationOlderThan(reservation, days = 30) {\n  if (!reservation || !reservation.date) return false;\n  \n  const reservationDate = new Date(reservation.date);\n  const today = new Date();\n  \n  // Calcular la diferencia en milisegundos\n  const diffTime = today - reservationDate;\n  // Convertir a días\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  \n  return diffDays > days;\n}\n\n// Función para formatear una fecha al formato DD/MM/YYYY\nfunction formatDateToDDMMYYYY(dateString) {\n  if (!dateString) return '';\n  \n  try {\n    // Caso específico para el formato problemático: \"29T05:00:00.000Z/05/2025\"\n    if (dateString.includes('T') && dateString.includes('/')) {\n      const parts = dateString.split('/');\n      if (parts.length === 3) {\n        const day = parts[0].split('T')[0];\n        return `${day}/${parts[1]}/${parts[2]}`;\n      }\n    }\n    \n    // Formato ISO: \"2025-05-29\"\n    if (dateString.includes('-')) {\n      const parts = dateString.split('-');\n      if (parts.length === 3) {\n        return `${parts[2]}/${parts[1]}/${parts[0]}`;\n      }\n    }\n    \n    // Si ya está en formato DD/MM/YYYY, devolverlo tal cual\n    if (dateString.includes('/') && !dateString.includes('T')) {\n      return dateString;\n    }\n    \n    // Intentar parsear como objeto Date\n    const date = new Date(dateString);\n    if (!isNaN(date.getTime())) {\n      const day = date.getDate().toString().padStart(2, '0');\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const year = date.getFullYear();\n      return `${day}/${month}/${year}`;\n    }\n    \n    return dateString;\n  } catch (error) {\n    console.error('Error al formatear fecha:', error);\n    return dateString;\n  }\n}\n\n// Exportación por defecto para compatibilidad con importaciones existentes\nexport default {\n  saveReservation,\n  getReservations,\n  updateReservationStatus,\n  saveWhatsAppReservation,\n  deleteReservation,\n  isReservationOlderThan\n};\n","// Crear un simple Event Bus para Vue 3\r\nimport { reactive } from 'vue';\r\n\r\nclass EventBus {\r\n  constructor() {\r\n    this.events = reactive({});\r\n  }\r\n\r\n  on(event, callback) {\r\n    if (!this.events[event]) {\r\n      this.events[event] = [];\r\n    }\r\n    this.events[event].push(callback);\r\n  }\r\n\r\n  off(event, callback) {\r\n    if (!this.events[event]) return;\r\n    \r\n    if (callback) {\r\n      const index = this.events[event].indexOf(callback);\r\n      if (index > -1) {\r\n        this.events[event].splice(index, 1);\r\n      }\r\n    } else {\r\n      this.events[event] = [];\r\n    }\r\n  }\r\n\r\n  emit(event, payload) {\r\n    if (!this.events[event]) return;\r\n    \r\n    this.events[event].forEach(callback => {\r\n      callback(payload);\r\n    });\r\n  }\r\n}\r\n\r\nexport default new EventBus();","// src/services/imageService.js\n\n/**\n * Servicio para el manejo y optimización de imágenes\n */\n\n/**\n * Comprime una imagen en formato base64 para reducir su tamaño\n * @param {string} base64Image - Imagen en formato base64\n * @param {number} maxWidth - Ancho máximo de la imagen comprimida\n * @param {number} quality - Calidad de la imagen (0-1)\n * @returns {Promise<string>} - Imagen comprimida en formato base64\n */\nexport const compressImage = (base64Image, maxWidth = 800, quality = 0.7) => {\n  return new Promise((resolve, reject) => {\n    try {\n      // Verificar que la imagen sea válida\n      if (!base64Image || typeof base64Image !== 'string') {\n        console.warn('La imagen no es válida para compresión');\n        resolve(base64Image);\n        return;\n      }\n\n      // Crear una imagen para cargar el base64\n      const img = new Image();\n      img.onload = () => {\n        // Crear un canvas para la compresión\n        const canvas = document.createElement('canvas');\n        let width = img.width;\n        let height = img.height;\n        \n        // Redimensionar si es necesario\n        if (width > maxWidth) {\n          height = Math.round((height * maxWidth) / width);\n          width = maxWidth;\n        }\n        \n        // Establecer dimensiones del canvas\n        canvas.width = width;\n        canvas.height = height;\n        \n        // Dibujar la imagen en el canvas\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, width, height);\n        \n        // Convertir a base64 con la calidad especificada\n        const compressedBase64 = canvas.toDataURL('image/jpeg', quality);\n        \n        // Verificar si realmente se redujo el tamaño\n        if (compressedBase64.length < base64Image.length) {\n          console.log(`Imagen comprimida: ${Math.round(compressedBase64.length / 1024)}KB (original: ${Math.round(base64Image.length / 1024)}KB)`);\n          resolve(compressedBase64);\n        } else {\n          console.log('La compresión no redujo el tamaño, manteniendo original');\n          resolve(base64Image);\n        }\n      };\n      \n      img.onerror = () => {\n        console.warn('Error al cargar la imagen para compresión');\n        resolve(base64Image); // Devolver la original en caso de error\n      };\n      \n      // Asegurarse de que la imagen tenga el formato correcto\n      if (!base64Image.startsWith('data:image')) {\n        img.src = 'data:image/jpeg;base64,' + base64Image;\n      } else {\n        img.src = base64Image;\n      }\n    } catch (error) {\n      console.error('Error en la compresión de imagen:', error);\n      resolve(base64Image); // Devolver la original en caso de error\n    }\n  });\n};\n\n/**\n * Verifica si una imagen es demasiado grande y la comprime si es necesario\n * @param {string} base64Image - Imagen en formato base64\n * @param {number} maxSizeKB - Tamaño máximo en KB\n * @returns {Promise<string>} - Imagen optimizada en formato base64\n */\nexport const optimizeImageForSync = async (base64Image, maxSizeKB = 500) => {\n  try {\n    if (!base64Image || typeof base64Image !== 'string') {\n      return base64Image;\n    }\n    \n    // Calcular tamaño aproximado en KB\n    const sizeKB = Math.round(base64Image.length / 1024);\n    \n    if (sizeKB <= maxSizeKB) {\n      // La imagen ya es lo suficientemente pequeña\n      return base64Image;\n    }\n    \n    console.log(`Optimizando imagen de ${sizeKB}KB (máximo: ${maxSizeKB}KB)`);\n    \n    // Calcular calidad basada en cuánto necesitamos comprimir\n    let quality = 0.7;\n    if (sizeKB > maxSizeKB * 3) {\n      quality = 0.5; // Más compresión para imágenes muy grandes\n    } else if (sizeKB > maxSizeKB * 2) {\n      quality = 0.6; // Compresión media\n    }\n    \n    // Comprimir la imagen\n    let compressedImage = await compressImage(base64Image, 800, quality);\n    \n    // Si sigue siendo demasiado grande, intentar con más compresión\n    if (compressedImage.length / 1024 > maxSizeKB) {\n      compressedImage = await compressImage(compressedImage, 600, 0.5);\n    }\n    \n    // Si aún es demasiado grande, hacer un último intento\n    if (compressedImage.length / 1024 > maxSizeKB) {\n      compressedImage = await compressImage(compressedImage, 400, 0.4);\n    }\n    \n    return compressedImage;\n  } catch (error) {\n    console.error('Error al optimizar imagen:', error);\n    return base64Image; // Devolver la original en caso de error\n  }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + ({\"83\":\"employee\",\"140\":\"reservas\",\"224\":\"register\",\"260\":\"shared-menu\",\"328\":\"admin-restaurantes\",\"441\":\"superadmin\",\"594\":\"about\",\"654\":\"admin-usuarios\",\"770\":\"platos\",\"884\":\"admin\"}[chunkId] || chunkId) + \".\" + {\"70\":\"66c05fbf\",\"83\":\"6a8fee2d\",\"140\":\"06bdda77\",\"224\":\"86ad83f2\",\"260\":\"94547427\",\"328\":\"f74483d2\",\"354\":\"ec272dc0\",\"434\":\"a4f7419f\",\"441\":\"a5f45ed5\",\"457\":\"783786d0\",\"460\":\"92a4dfe9\",\"463\":\"83d64c3a\",\"550\":\"39f7edbe\",\"594\":\"74dca08d\",\"654\":\"d5c3c6df\",\"668\":\"af00f77e\",\"770\":\"c832f601\",\"869\":\"7d693842\",\"884\":\"2a8afd17\",\"970\":\"493289f6\",\"982\":\"f0680544\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + ({\"83\":\"employee\",\"140\":\"reservas\",\"224\":\"register\",\"260\":\"shared-menu\",\"328\":\"admin-restaurantes\",\"441\":\"superadmin\",\"594\":\"about\",\"654\":\"admin-usuarios\",\"770\":\"platos\",\"838\":\"sync-business-info\",\"854\":\"menu\",\"884\":\"admin\"}[chunkId] || chunkId) + \".\" + {\"83\":\"b640972d\",\"140\":\"e1c71206\",\"224\":\"2f3b7f9e\",\"260\":\"3b5ce1dd\",\"328\":\"4d8e7f9a\",\"441\":\"d9ebc473\",\"463\":\"9936a330\",\"594\":\"187c5855\",\"654\":\"4bcf276b\",\"770\":\"c0475d53\",\"838\":\"183a93b2\",\"854\":\"58efb2c6\",\"869\":\"7aa96af8\",\"884\":\"353ff12f\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"websap:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/websap/\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"83\":1,\"140\":1,\"224\":1,\"260\":1,\"328\":1,\"441\":1,\"463\":1,\"594\":1,\"654\":1,\"770\":1,\"838\":1,\"854\":1,\"869\":1,\"884\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(!/^8(38|54)$/.test(chunkId)) {\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebsap\"] = self[\"webpackChunkwebsap\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(1372); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["API_URL","token","localStorage","getItem","setToken","newToken","setItem","removeItem","get","async","endpoint","options","headers","response","fetch","method","responseType","blob","contentType","includes","text","success","ok","data","status","json","console","warn","Error","message","error","post","body","JSON","stringify","put","del","delete","saveToken","getToken","removeToken","setupAxiosInterceptors","axios","interceptors","request","use","config","Authorization","Promise","reject","window","location","pathname","href","login","email","password","log","withCredentials","timeout","then","apiService","default","user","localUsers","id","nombre","roles","find","u","localToken","btoa","logout","isAuthenticated","isLoggedInFlag","getCurrentUser","userStr","parse","hasRole","role","key","class","xmlns","viewBox","width","height","src","_imports_0","alt","_imports_1","_createElementBlock","_normalizeClass","$data","isDarkMode","$options","wsState","reconnecting","_hoisted_1","_createElementVNode","_createTextVNode","_toDisplayString","reconnectAttempts","maxReconnectAttempts","onClick","_cache","args","stopReconnecting","_hoisted_2","handleReconnect","_createCommentVNode","showNav","_hoisted_3","_hoisted_4","_createVNode","_component_router_link","to","_withCtx","_","_hoisted_5","isLoggedIn","_Fragment","isSuperAdmin","_createBlock","isEmployee","_withModifiers","toggleDarkMode","svgFallback","_hoisted_6","fill","d","_hoisted_7","_hoisted_8","_hoisted_9","_component_router_view","_component_WhatsAppReservationHandler","ref","_component_WhatsAppSimulator","_component_DialogContainer","$setup","dialogState","show","title","showCancel","handleCancel","cancelText","handleConfirm","confirmText","name","setup","__exports__","isProcessing","lastProcessedMessage","processWhatsAppMessage","value","extractReservationData","result","saveWhatsAppReservation","reservation","eventBus","emit","nombreMatch","match","telefonoMatch","fechaMatch","horaMatch","personasMatch","notasMatch","emailMatch","trim","telefono","fecha","Date","toISOString","split","hora","personas","parseInt","notas","simulateWhatsAppMessage","onMounted","on","onUnmounted","off","__expose","route","useRoute","showSimulator","buttonEnabled","isLoginPage","computed","isLoginRoute","isLoginPath","path","isSharedMenuView","startsWith","shouldShowSimulator","showBasedOnRoute","handleConfigChange","isEnabled","storedValue","reservationData","reactive","toggleSimulator","sendReservation","type","alert","clearForm","setTimeout","simulateWhatsAppReservation","customData","defaultData","whatsappData","whatsappEvent","timestamp","now","Math","random","toString","substr","testWhatsAppReservation","generateRandomReservation","nombres","telefonos","fechas","hoy","i","setDate","getDate","push","horas","floor","length","sendRandomReservation","randomData","sendMultipleReservations","count","interval","sent","sendNext","testReservations","multiple","generate","webSocketState","connected","socket","messages","enableWebsocket","reconnectInterval","reconnectTimer","initializeWebSocket","url","process","close","WebSocket","onopen","onmessage","event","err","onclose","wasClean","scheduleReconnect","onerror","disableWebSocket","closeWebSocket","clearTimeout","reconnect","isProd","storedApiUrl","apiDomain","production","RAW_URL","API_TEST_ENDPOINT","API_DOMAIN","development","currentConfig","isConnected","navigator","onLine","apiAvailable","connectionTestInProgress","offlineMode","testApiConnection","domains","apiConfig","uniqueDomains","Set","domain","controller","AbortController","timeoutId","abort","signal","mode","credentials","setupConnectionListeners","addEventListener","apiIsAvailable","dispatchEvent","CustomEvent","detail","available","getApiUrls","refreshApiUrls","urls","SYNC_CONFIG","skipServerAvailabilityCheck","maxPlatoSize","retryIntervals","maxRetries","platoUrl","emergencyPlatoUrl","useEmergencyEndpoint","isSyncing","_isOnline","isOnline","cache","syncData","online","testServerConnection","xhr","XMLHttpRequest","responsePromise","resolve","onreadystatechange","readyState","checkAlternativePort","open","send","ports","port","SERVER_PORT","syncQueue","getSyncQueue","item","entityType","plato","getPlato","entityId","syncPlato","removeFromSyncQueue","syncError","pendingPlatos","getPendingPlatos","tryUltraMinimalSync","platoId","updatePlatoSyncStatus","dbError","setRequestHeader","adaptedData","adaptPlatoDataWithImageOptimization","minimalData","substring","price","Number","syncMinimalDataOnly","retryCount","description","category","image","is_available","Boolean","minimal_sync","operationTimeoutId","handleRetry","ontimeout","delay","checkSyncStatus","mysql","tablaPlatos","setupSync","force","initSyncService","all","isApiConnected","syncStatus","setInterval","platoToSync","errorText","statusText","responseData","syncStatusError","parseFloat","optimizeImageForSync","image_url","includesDrink","availableQuantity","components","DialogContainer","WhatsAppReservationHandler","WhatsAppSimulator","whatsappHandler","this","$route","watch","methods","authLogout","$router","nextTick","document","documentElement","classList","add","remove","mounted","testImg","Image","require","prefersDarkMode","matchMedia","matches","unmounted","render","_createStaticVNode","goToMenu","router","useRouter","onSubmit","handleLogin","for","$event","required","placeholder","errorMessage","disabled","isLoading","handleForgotPassword","clear","sessionStorage","routes","component","HomeView","LoginView","meta","requiresGuest","requiresAuth","props","createRouter","history","createWebHistory","beforeEach","from","next","matched","some","record","requiresRoles","userHasRequiredRole","DB_NAME","DB_VERSION","REQUIRED_STORES","keyPath","initializeDatabase","indexedDB","target","onsuccess","db","version","existingStores","Array","objectStoreNames","allStoresExist","missingStores","filter","store","map","s","join","newVersion","updateRequest","onupgradeneeded","contains","createObjectStore","formatDate","dateString","parts","day","date","isNaN","getTime","padStart","month","getMonth","year","getFullYear","init","app","createApp","App","globalProperties","$filters","mount","PLATOS_STORE","SYNC_QUEUE_STORE","initDB","deleteObjectStore","platosStore","createIndex","unique","syncQueueStore","autoIncrement","openDB","getAllPlatos","transaction","objectStore","getAll","allPlatos","activePlatos","deleted","index","validStatus","validStatuses","getRequest","oncomplete","addToSyncQueue","queue","logDB","verifyPlatoStorage","createPlato","platoToCreate","createdAt","updatedAt","localTimestamp","createdPlato","platos","found","p","listError","verified","verifyError","transactionError","debugIndexedDB","databases","stores","normalizePlatoData","platoData","normalizedData","image_thumbnail","compressImageForSync","has_local_image","imageDataUrl","maxLength","actualData","guardarPlato","platoParaGuardar","platoGuardado","debugDB","resolvePromise","confirm","reservationsStore","savedReservations","saveReservationsToStorage","saveReservation","reservationId","fullName","mobilePhone","landlinePhone","address","reservationDate","time","reservationTime","peopleCount","notes","additionalNotes","source","created_by","usuario_id","apiError","unshift","getReservations","isArray","reservas","backendReservations","res","formatDateToDDMMYYYY","estado","creado_en","origen","reservations","formattedReservations","updateReservationStatus","reservationIndex","findIndex","reserva","reservaCompleta","reservationObject","saveReservaLocally","localReserva","pendingSave","deleteReservation","r","splice","isReservationOlderThan","days","today","diffTime","diffDays","ceil","EventBus","constructor","events","callback","indexOf","payload","forEach","compressImage","base64Image","maxWidth","quality","img","onload","canvas","createElement","round","ctx","getContext","drawImage","compressedBase64","toDataURL","maxSizeKB","sizeKB","compressedImage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","n","getter","__esModule","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","ns","create","def","current","getOwnPropertyNames","definition","o","defineProperty","enumerable","f","e","chunkId","reduce","promises","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","setAttribute","onScriptComplete","prev","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","createStylesheet","fullhref","oldTag","linkTag","rel","nonce","onLinkComplete","errorType","realHref","code","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","test","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}