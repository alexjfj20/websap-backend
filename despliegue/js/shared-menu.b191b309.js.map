{"version":3,"file":"js/shared-menu.b191b309.js","mappings":"6TAOA,MAAMA,EAAgB,IAChBC,EAAiB,IACvB,IAAIC,EAAiB,KACjBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAoB,KACpBC,GAAgB,EAMbC,eAAeC,IACpB,IAEE,MAAMC,QAAqBC,EAAAA,EAAAA,MAE3B,IAAKD,GAAqD,IAArCE,OAAOC,KAAKH,GAAcI,OAE7C,OADAC,QAAQC,IAAI,mDACL,CACLC,SAAS,EACTC,QAAS,mDAIbH,QAAQC,IAAI,wDAAyDN,GAGrE,MAAMS,EAAQC,aAAaC,QAAQ,SAC/BF,GACFG,EAAAA,WAAWC,SAASJ,GAItB,MAAMK,QAAqBF,EAAAA,WAAWG,IAAI,YAC1C,IAAKD,IAAiBA,EAAaP,UAAYO,EAAaE,OAASF,EAAaE,KAAKC,eAErF,OADAZ,QAAQa,KAAK,wDACN,CACLX,SAAS,EACTC,QAAS,wDAIb,MAAMW,EAAgBL,EAAaE,KAAKC,eAGlCG,EAAkB,CACtBC,OAAQrB,EAAasB,KACrBC,YAAavB,EAAawB,YAC1BC,UAAWzB,EAAa0B,QACxBC,SAAU3B,EAAa4B,QACvBC,KAAM7B,EAAa6B,KAEnBC,iBAAkBC,KAAKC,UAAUhC,EAAaiC,aAAe,CAAC,IAI1DC,QAAiBtB,EAAAA,WAAWuB,IAAI,iBAAiBhB,IAAiBC,GAExE,OAAIc,GAAYA,EAAS3B,SACvBF,QAAQC,IAAI,kDACZZ,EAAoB0C,KAAKC,MAGzBC,EAAAA,EAASC,KAAK,wBAAyBvC,GAEhC,CACLO,SAAS,EACTC,QAAS,iDACTgC,UAAW9C,KAGbW,QAAQa,KAAK,gDAAiDgB,GACvD,CACL3B,SAAS,EACTC,QAAS0B,EAAS1B,SAAW,gDAGnC,CAAE,MAAOiC,GAEP,OADApC,QAAQoC,MAAM,gDAAiDA,GACxD,CACLlC,SAAS,EACTC,QAASiC,EAAMjC,SAAW,+CAE9B,CACF,CAOOV,eAAe4C,EAA6BC,GAAc,GAC/D,IAEE,MAAMN,EAAMD,KAAKC,MACjB,GAAIzC,IAAsB+C,GAAgBN,EAAM1C,EAAsBH,EAEpE,OADAa,QAAQC,IAAI,0CACLV,EAIT,MAAMa,EAAQC,aAAaC,QAAQ,SAC/BF,GACFG,EAAAA,WAAWC,SAASJ,GAItB,MAAMK,QAAqBF,EAAAA,WAAWG,IAAI,YAC1C,IAAKD,IAAiBA,EAAaP,UAAYO,EAAaE,OAASF,EAAaE,KAAKC,eAErF,MADAZ,QAAQa,KAAK,wDACP,IAAI0B,MAAM,wDAGlB,MAAMzB,EAAgBL,EAAaE,KAAKC,eAGlCiB,QAAiBtB,EAAAA,WAAWG,IAAI,iBAAiBI,KAEvD,GAAIe,GAAYA,EAAS3B,SAAW2B,EAASW,YAAa,CACxD,MAAMA,EAAcX,EAASW,YAG7B,IAAIZ,EAAc,CAAC,EACnB,IACMY,EAAYf,mBACdG,EAAcF,KAAKe,MAAMD,EAAYf,kBAEzC,CAAE,MAAOiB,GACP1C,QAAQa,KAAK,wCAAyC6B,EACxD,CAEA,MAAM/C,EAAe,CACnBsB,KAAMuB,EAAYxB,OAClBG,YAAaqB,EAAYtB,YACzBG,QAASmB,EAAYpB,UACrBG,QAASiB,EAAYlB,SACrBE,KAAMgB,EAAYhB,KAClBI,eAcF,aAVMe,EAAAA,EAAAA,IAAiBhD,GAGvBJ,EAAoBI,EACpBL,EAAqB0C,EAGrBC,EAAAA,EAASC,KAAK,wBAAyBvC,GAEvCK,QAAQC,IAAI,8CAA+CN,GACpDA,CACT,CAEE,MADAK,QAAQa,KAAK,4CAA6CgB,GACpD,IAAIU,MAAMV,GAAU1B,SAAW,2CAEzC,CAAE,MAAOiC,GACPpC,QAAQoC,MAAM,6DAA8DA,GAG5E,IACE,MAAMzC,QAAqBC,EAAAA,EAAAA,MAC3B,GAAID,EACF,OAAOA,CAEX,CAAE,MAAOiD,GACP5C,QAAQoC,MAAM,sCAAuCQ,EACvD,CAEA,MAAMR,CACR,CACF,CAwCO3C,eAAeoD,IACpB,IAEE,MAAMC,QAAkBlD,EAAAA,EAAAA,MAGlBmD,QAAoBV,GAA6B,GAGjDW,EAActB,KAAKC,UAAUmB,GAC7BG,EAAgBvB,KAAKC,UAAUoB,GAE/BG,EAAaF,IAAgBC,EAYnC,OAVIC,IACFlD,QAAQC,IAAI,6DAGN0C,EAAAA,EAAAA,IAAiBI,GAGvBd,EAAAA,EAASC,KAAK,wBAAyBa,IAGlCG,CACT,CAAE,MAAOd,GAEP,OADApC,QAAQoC,MAAM,yDAA0DA,IACjE,CACT,CACF,CAMO,SAASe,EAA8BC,GAAc,GAEtDA,EACFpD,QAAQC,IAAI,kFAIVb,GACFiE,cAAcjE,GAIXI,IACH6C,IACGiB,OAAMlB,GAASpC,QAAQoC,MAAM,mCAAoCA,KACpE5C,GAAgB,GAGlBJ,EAAiBmE,aAAY,KAC3BV,IACGS,OAAMlB,GAASpC,QAAQoC,MAAM,mCAAoCA,IAAO,GAC1ElD,GAEHc,QAAQC,IAAI,8DACd,CAKO,SAASuD,IACVpE,IACFiE,cAAcjE,GACdA,EAAiB,KACjBY,QAAQC,IAAI,8DAEhB,CAMOR,eAAegE,IACpB,IAEE,MAAMrD,EAAQC,aAAaC,QAAQ,SAC/BF,GACFG,EAAAA,WAAWC,SAASJ,GAGtB,MAAMyB,QAAiBtB,EAAAA,WAAWG,IAAI,8CAEtC,OAAImB,GAAYA,EAAS3B,SACvBF,QAAQC,IAAI,iCAAkC4B,EAAS1B,SAChD,CACLD,SAAS,EACTC,QAAS0B,EAAS1B,SAAW,mCAG/BH,QAAQa,KAAK,+BAAgCgB,GACtC,CACL3B,SAAS,EACTC,QAAS0B,EAAS1B,SAAW,+BAGnC,CAAE,MAAOiC,GAEP,OADApC,QAAQoC,MAAM,+BAAgCA,GACvC,CACLlC,SAAS,EACTC,QAASiC,EAAMjC,SAAW,8BAE9B,CACF,CAKO,SAASuD,IACdnE,EAAoB,KACpBD,EAAqB,CACvB,C,4GC7UA,O,GAAAqE,IAAA,EAE0BC,MAAM,W,GAFhCD,IAAA,EAO2BC,MAAM,S,GAPjCD,IAAA,EAWgBC,MAAM,gB,GAXtBD,IAAA,EAayCC,MAAM,iB,EAb/C,Q,GAgBWA,MAAM,e,GAhBjBD,IAAA,EAiBaC,MAAM,gB,GAjBnBD,IAAA,G,GAAAA,IAAA,G,GA0BaC,MAAM,a,GAEJA,MAAM,c,GAEFA,MAAM,wB,EA9BzB,Q,GAAAD,IAAA,EAgC4BE,IAAI,kDAAkDC,IAAI,wBAAwBF,MAAM,c,GAEjGA,MAAM,gB,GAENA,MAAM,oB,GACNA,MAAM,c,GArCzBD,IAAA,EAsCmBC,MAAM,kB,EAtCzB,uB,GAAAD,IAAA,EA6CoFC,MAAM,Y,GA7C1FD,IAAA,EA8C+BC,MAAM,Y,GA9CrCD,IAAA,EAuD4CC,MAAM,+B,GAEnCA,MAAM,c,GAEFA,MAAM,wB,EA3DzB,Q,GAAAD,IAAA,EA6D4BE,IAAI,kDAAkDC,IAAI,wBAAwBF,MAAM,c,GAEjGA,MAAM,gB,GAENA,MAAM,oB,GACNA,MAAM,c,GAlEzBD,IAAA,EAmEmBC,MAAM,kB,EAnEzB,uB,GAAAD,IAAA,EA0EoFC,MAAM,Y,GA1E1FD,IAAA,EA2E+BC,MAAM,Y,GASxBA,MAAM,gBAAgBG,IAAI,gB,GApFvCJ,IAAA,EAuF6CC,MAAM,c,GAvFnDD,IAAA,EA4FsBC,MAAM,c,GAETA,MAAM,qB,GAINA,MAAM,qB,EAlGzB,Y,GAoGsBA,MAAM,oB,EApG5B,Y,EAAA,Y,GA4GiBA,MAAM,c,GAIJA,MAAM,iB,GAEJA,MAAM,Y,GAGNA,MAAM,Y,GAGNA,MAAM,Y,IAGNA,MAAM,Y,IAKNA,MAAM,6B,IAEJA,MAAM,mB,IACFA,MAAM,kB,IAINA,MAAM,kB,IAINA,MAAM,kB,IAQZA,MAAM,Y,IAKRA,MAAM,iB,IAWTA,MAAM,oB,IAnKtBD,IAAA,EAwKmCC,MAAM,mB,IAE1BA,MAAM,mB,IA1KrBD,IAAA,EA2KqEC,MAAM,kB,GA3K3E,Q,IAAAD,IAAA,EAqL4HC,MAAM,kB,GArLlI,Q,IAAAD,IAAA,EA6LyEC,MAAM,kB,IA7L/ED,IAAA,EAkMsEC,MAAM,kB,IAE3DA,MAAM,kB,IApMvBD,IAAA,EAyMiFC,MAAM,kB,IAEtEA,MAAM,kB,IAQVA,MAAM,kC,+EAlNjBI,EAAAA,EAAAA,IA+NM,OA/NDJ,MAAM,wBAAyBK,GAAIC,GAAAC,Q,CAC3BD,GAAAE,YAAS,WAApBJ,EAAAA,EAAAA,IAGM,MAHNK,EAGMC,EAAA,MAAAA,EAAA,MAFJC,EAAAA,EAAAA,IAA2B,OAAtBX,MAAM,WAAS,UACpBW,EAAAA,EAAAA,IAAuB,SAApB,oBAAgB,OAGLL,GAAA9B,QAAK,WAArB4B,EAAAA,EAAAA,IAEM,MAFNQ,EAEM,EADJD,EAAAA,EAAAA,IAAkB,UAAAE,EAAAA,EAAAA,IAAZP,GAAA9B,OAAK,mBAGb4B,EAAAA,EAAAA,IAoNM,MApNNU,EAoNM,CAlNOR,GAAAS,UAAUhF,eAAY,WAAjCqE,EAAAA,EAAAA,IAQM,MARNY,EAQM,CAPOV,GAAAS,SAAShF,aAAa6B,MAAQ0C,GAAAW,aAAaX,GAAAS,SAAShF,aAAa6B,QAAI,WAAhFwC,EAAAA,EAAAA,IAAsK,OAd9KL,IAAA,EAc4FE,IAAKK,GAAAY,eAAeZ,GAAAS,SAAShF,aAAa6B,MAAOsC,IAAI,OAAOF,MAAM,iB,OAd9JmB,KAAAC,EAAAA,EAAAA,IAAA,QAeQT,EAAAA,EAAAA,IAAyC,WAAAE,EAAAA,EAAAA,IAAlCP,GAAAS,SAAShF,aAAasB,MAAI,IACjCsD,EAAAA,EAAAA,IAAkE,IAAlEU,GAAkER,EAAAA,EAAAA,IAAxCP,GAAAS,SAAShF,aAAawB,aAAW,GAC3B+C,GAAAS,SAAShF,aAAa4B,SAAW2C,GAAAS,SAAShF,aAAa0B,UAAO,WAA9F2C,EAAAA,EAAAA,IAGM,MAHNkB,EAGM,CAFKhB,GAAAS,SAAShF,aAAa4B,UAAO,WAAtCyC,EAAAA,EAAAA,IAA0G,IAlBpHmB,EAAA,gBAkBkDZ,EAAAA,EAAAA,IAA0B,cAAlB,aAAS,KAlBnEa,EAAAA,EAAAA,IAkB4E,KAACX,EAAAA,EAAAA,IAAGP,GAAAS,SAAShF,aAAa4B,SAAO,OAlB7GyD,EAAAA,EAAAA,IAAA,OAmBmBd,GAAAS,SAAShF,aAAa0B,UAAO,WAAtC2C,EAAAA,EAAAA,IAA2G,IAnBrHqB,EAAA,gBAmBkDd,EAAAA,EAAAA,IAA2B,cAAnB,cAAU,KAnBpEa,EAAAA,EAAAA,IAmB6E,KAACX,EAAAA,EAAAA,IAAGP,GAAAS,SAAShF,aAAa0B,SAAO,OAnB9G2D,EAAAA,EAAAA,IAAA,WAAAA,EAAAA,EAAAA,IAAA,WAAAA,EAAAA,EAAAA,IAAA,QAwBMT,EAAAA,EAAAA,IAsMM,aApMJA,EAAAA,EAAAA,IA0BM,MA1BNe,EA0BM,gBAzBJf,EAAAA,EAAAA,IAAqB,UAAjB,gBAAY,KAChBA,EAAAA,EAAAA,IAuBM,MAvBNgB,EAuBM,gBAtBJvB,EAAAA,EAAAA,IAqBMwB,EAAAA,GAAA,MAlDlBC,EAAAA,EAAAA,IA6ByCvB,GAAAwB,cA7BzC,CA6ByBC,EAAMC,M,WAAnB5B,EAAAA,EAAAA,IAqBM,OArBsCL,IAAKiC,EAAOhC,MAAM,a,EAC5DW,EAAAA,EAAAA,IAGM,MAHNsB,EAGM,CAFOF,EAAKG,OAAS5B,GAAAW,aAAac,EAAKG,SAAK,WAAhD9B,EAAAA,EAAAA,IAAkI,OA/BlJL,IAAA,EA+BoEE,IAAKK,GAAAY,eAAea,EAAKG,OAAQhC,IAAI,sBAAsBF,MAAM,c,OA/BrImC,MAAA,WAgCgB/B,EAAAA,EAAAA,IAAiH,MAAjHgC,OAEFzB,EAAAA,EAAAA,IAeM,MAfN0B,EAeM,EAdJ1B,EAAAA,EAAAA,IAAwB,WAAAE,EAAAA,EAAAA,IAAjBkB,EAAK1E,MAAI,IAChBsD,EAAAA,EAAAA,IAAsD,IAAtD2B,GAAsDzB,EAAAA,EAAAA,IAAvBkB,EAAKxE,aAAW,IAC/CoD,EAAAA,EAAAA,IAAwD,IAAxD4B,EAAsB,KAAC1B,EAAAA,EAAAA,IAAGP,GAAAkC,YAAYT,EAAKU,QAAK,GAChBV,EAAKW,gBAAa,WAAlDtC,EAAAA,EAAAA,IAAwE,IAAxEuC,EAAoD,sBAtCpEvB,EAAAA,EAAAA,IAAA,QAuCgBT,EAAAA,EAAAA,IASS,UARNiC,QAAKC,GAAEvC,GAAAwC,UAAUf,GAClB/B,OAzClB+C,EAAAA,EAAAA,IAAA,CAyCwB,kBAAiB,iBAEIhB,EAAKiB,kBAAoBjB,EAAKiB,kBAAoB,KAD5EC,UAAWlB,EAAKiB,kBAAoBjB,EAAKiB,kBAAoB,G,EAGjDjB,EAAKiB,kBAAoBjB,EAAKiB,kBAAoB,IAAJ,WAA3D5C,EAAAA,EAAAA,IAA2F,OAA3F8C,EAAmF,QAAC,WACpF9C,EAAAA,EAAAA,IAAuC,OAAvC+C,EAA8B,QA9ChD3B,EAAAA,EAAAA,IA8CyD,KACvCX,EAAAA,EAAAA,KAAIkB,EAAKiB,kBAAoBjB,EAAKiB,kBAAoB,EAAI,gBAAkB,oBAA1B,OA/CpEI,U,UAuDmB9C,GAAA+C,aAAalH,OAAS,IAAH,WAA9BiE,EAAAA,EAAAA,IA0BM,MA1BNkD,EA0BM,gBAzBJ3C,EAAAA,EAAAA,IAA0B,UAAtB,qBAAiB,KACrBA,EAAAA,EAAAA,IAuBM,MAvBN4C,EAuBM,gBAtBJnD,EAAAA,EAAAA,IAqBMwB,EAAAA,GAAA,MA/ElBC,EAAAA,EAAAA,IA0DyCvB,GAAA+C,cA1DzC,CA0DyBtB,EAAMC,M,WAAnB5B,EAAAA,EAAAA,IAqBM,OArBsCL,IAAKiC,EAAOhC,MAAM,0B,EAC5DW,EAAAA,EAAAA,IAGM,MAHN6C,EAGM,CAFOzB,EAAKG,OAAS5B,GAAAW,aAAac,EAAKG,SAAK,WAAhD9B,EAAAA,EAAAA,IAAkI,OA5DlJL,IAAA,EA4DoEE,IAAKK,GAAAY,eAAea,EAAKG,OAAQhC,IAAI,sBAAsBF,MAAM,c,OA5DrIyD,MAAA,WA6DgBrD,EAAAA,EAAAA,IAAiH,MAAjHsD,OAEF/C,EAAAA,EAAAA,IAeM,MAfNgD,EAeM,EAdJhD,EAAAA,EAAAA,IAAwB,WAAAE,EAAAA,EAAAA,IAAjBkB,EAAK1E,MAAI,IAChBsD,EAAAA,EAAAA,IAAsD,IAAtDiD,GAAsD/C,EAAAA,EAAAA,IAAvBkB,EAAKxE,aAAW,IAC/CoD,EAAAA,EAAAA,IAAwD,IAAxDkD,EAAsB,KAAChD,EAAAA,EAAAA,IAAGP,GAAAkC,YAAYT,EAAKU,QAAK,GAChBV,EAAKW,gBAAa,WAAlDtC,EAAAA,EAAAA,IAAwE,IAAxE0D,EAAoD,sBAnEpE1C,EAAAA,EAAAA,IAAA,QAoEgBT,EAAAA,EAAAA,IASS,UARNiC,QAAKC,GAAEvC,GAAAwC,UAAUf,GAClB/B,OAtElB+C,EAAAA,EAAAA,IAAA,CAsEwB,iCAAgC,iBAEXhB,EAAKiB,kBAAoBjB,EAAKiB,kBAAoB,KAD5EC,UAAWlB,EAAKiB,kBAAoBjB,EAAKiB,kBAAoB,G,EAGjDjB,EAAKiB,kBAAoBjB,EAAKiB,kBAAoB,IAAJ,WAA3D5C,EAAAA,EAAAA,IAA2F,OAA3F2D,EAAmF,QAAC,WACpF3D,EAAAA,EAAAA,IAAuC,OAAvC4D,EAA8B,QA3EhDxC,EAAAA,EAAAA,IA2EyD,KACvCX,EAAAA,EAAAA,KAAIkB,EAAKiB,kBAAoBjB,EAAKiB,kBAAoB,EAAI,gBAAkB,oBAA1B,OA5EpEiB,U,YAAA7C,EAAAA,EAAAA,IAAA,QAoFQT,EAAAA,EAAAA,IA2EM,MA3ENuD,EA2EM,gBA1EJvD,EAAAA,EAAAA,IAAkB,UAAd,aAAS,IAEmB,IAArBL,GAAA6D,UAAUhI,SAAM,WAA3BiE,EAAAA,EAAAA,IAGM,MAHNgE,EAGM1D,EAAA,MAAAA,EAAA,MAFJC,EAAAA,EAAAA,IAA2B,SAAxB,wBAAoB,IACvBA,EAAAA,EAAAA,IAAkF,KAA/EX,MAAM,sBAAqB,oDAAgD,oBAGhFI,EAAAA,EAAAA,IAkEM,MAlENiE,EAkEM,gBAjEJjE,EAAAA,EAAAA,IAaMwB,EAAAA,GAAA,MA1GlBC,EAAAA,EAAAA,IA6FyCvB,GAAA6D,WA7FzC,CA6FyBpC,EAAMC,M,WAAnB5B,EAAAA,EAAAA,IAaM,OAbmCL,IAAKiC,EAAOhC,MAAM,a,EACzDW,EAAAA,EAAAA,IAGM,MAHN2D,EAGM,EAFJ3D,EAAAA,EAAAA,IAAwB,WAAAE,EAAAA,EAAAA,IAAjBkB,EAAK1E,MAAI,IAChBsD,EAAAA,EAAAA,IAA2D,SAAxD,KAACE,EAAAA,EAAAA,IAAGP,GAAAkC,YAAYT,EAAKU,QAAS,OAAG5B,EAAAA,EAAAA,IAAGkB,EAAKwC,UAAQ,MAEtD5D,EAAAA,EAAAA,IAOM,MAPN6D,EAOM,EANJ7D,EAAAA,EAAAA,IAAwE,UAA/DiC,QAAKC,GAAEvC,GAAAmE,iBAAiBzC,GAAQhC,MAAM,gBAAe,IAAC,EAnG/E0E,IAoGgB/D,EAAAA,EAAAA,IAAyD,OAAzDgE,GAAyD9D,EAAAA,EAAAA,IAAvBkB,EAAKwC,UAAQ,IAC/C5D,EAAAA,EAAAA,IAAwE,UAA/DiC,QAAKC,GAAEvC,GAAAsE,iBAAiB5C,GAAQhC,MAAM,gBAAe,IAAC,EArG/E6E,IAsGgBlE,EAAAA,EAAAA,IAES,UAFAiC,QAAKC,GAAEvC,GAAAwE,eAAe9C,GAAQhC,MAAM,c,gBAC3CW,EAAAA,EAAAA,IAAiC,QAA3BX,MAAM,YAAW,OAAG,OAvG5C+E,U,OA4GYpE,EAAAA,EAAAA,IAiDM,MAjDNqE,EAiDM,EAhDJrE,EAAAA,EAAAA,IAA6C,UAAzC,YAAQE,EAAAA,EAAAA,IAAGP,GAAAkC,YAAYlC,GAAA2E,YAAS,IAGpCtE,EAAAA,EAAAA,IAsCM,MAtCNuE,EAsCM,gBArCJvE,EAAAA,EAAAA,IAA0B,UAAtB,qBAAiB,KACrBA,EAAAA,EAAAA,IAEM,MAFNwE,EAEM,WADJxE,EAAAA,EAAAA,IAAkG,SAA3FyE,KAAK,OAnH9B,sBAAA1E,EAAA,KAAAA,EAAA,GAAAmC,GAmH8CvC,GAAA+E,aAAahI,KAAIwF,GAAEyC,YAAY,oBAAoBtF,MAAM,c,iBAAzDM,GAAA+E,aAAahI,WAE3CsD,EAAAA,EAAAA,IAEM,MAFN4E,EAEM,WADJ5E,EAAAA,EAAAA,IAAyF,SAAlFyE,KAAK,MAtH9B,sBAAA1E,EAAA,KAAAA,EAAA,GAAAmC,GAsH6CvC,GAAA+E,aAAaG,MAAK3C,GAAEyC,YAAY,WAAWtF,MAAM,c,iBAAjDM,GAAA+E,aAAaG,YAE1C7E,EAAAA,EAAAA,IAEM,MAFN8E,EAEM,WADJ9E,EAAAA,EAAAA,IAAqG,SAA9FyE,KAAK,QAzH9B,sBAAA1E,EAAA,KAAAA,EAAA,GAAAmC,GAyH+CvC,GAAA+E,aAAaK,MAAK7C,GAAEyC,YAAY,qBAAqBtF,MAAM,c,iBAA3DM,GAAA+E,aAAaK,YAE5C/E,EAAAA,EAAAA,IAEM,MAFNgF,GAEM,WADJhF,EAAAA,EAAAA,IAAwG,SAAjGyE,KAAK,OA5H9B,sBAAA1E,EAAA,KAAAA,EAAA,GAAAmC,GA4H8CvC,GAAA+E,aAAa5H,QAAOoF,GAAEyC,YAAY,uBAAuBtF,MAAM,c,iBAA/DM,GAAA+E,aAAa5H,cAI3CkD,EAAAA,EAAAA,IAgBM,MAhBNiF,GAgBM,gBAfJjF,EAAAA,EAAAA,IAAsB,UAAlB,iBAAa,KACjBA,EAAAA,EAAAA,IAaM,MAbNkF,GAaM,EAZJlF,EAAAA,EAAAA,IAGQ,QAHRmF,GAGQ,WAFNnF,EAAAA,EAAAA,IAAoF,SAA7EyE,KAAK,QApIlC,sBAAA1E,EAAA,KAAAA,EAAA,GAAAmC,GAoImDvC,GAAAyF,sBAAqBlD,GAAEmD,MAAM,KAAK3I,KAAK,iB,iBAAvCiD,GAAAyF,yBAAqB,eAClDpF,EAAAA,EAAAA,IAA2C,QAArCX,MAAM,uBAAsB,MAAE,OAEtCW,EAAAA,EAAAA,IAGQ,QAHRsF,GAGQ,WAFNtF,EAAAA,EAAAA,IAAuF,SAAhFyE,KAAK,QAxIlC,sBAAA1E,EAAA,KAAAA,EAAA,GAAAmC,GAwImDvC,GAAAyF,sBAAqBlD,GAAEmD,MAAM,QAAQ3I,KAAK,iB,iBAA1CiD,GAAAyF,yBAAqB,eAClDpF,EAAAA,EAAAA,IAA8C,QAAxCX,MAAM,uBAAsB,SAAK,OAEzCW,EAAAA,EAAAA,IAGQ,QAHRuF,GAGQ,WAFNvF,EAAAA,EAAAA,IAAsF,SAA/EyE,KAAK,QA5IlC,sBAAA1E,EAAA,KAAAA,EAAA,GAAAmC,GA4ImDvC,GAAAyF,sBAAqBlD,GAAEmD,MAAM,OAAO3I,KAAK,iB,iBAAzCiD,GAAAyF,yBAAqB,eAClDpF,EAAAA,EAAAA,IAAuD,QAAjDX,MAAM,uBAAsB,kBAAc,WAMtDW,EAAAA,EAAAA,IAEM,MAFNwF,GAEM,WADJxF,EAAAA,EAAAA,IAAyH,YApJ3I,sBAAAD,EAAA,KAAAA,EAAA,GAAAmC,GAoJqCvC,GAAA8F,kBAAiBvD,GAAEyC,YAAY,sCAAsCtF,MAAM,iB,iBAA3EM,GAAA8F,0BAIvBzF,EAAAA,EAAAA,IAIM,MAJN0F,GAIM,EAHJ1F,EAAAA,EAAAA,IAES,UAFAiC,QAAKlC,EAAA,KAAAA,EAAA,OAAA4F,IAAEhG,GAAAiG,eAAAjG,GAAAiG,iBAAAD,IAAetG,MAAM,sB,gBACnCW,EAAAA,EAAAA,IAAgC,QAA1BX,MAAM,YAAW,MAAE,IA1J3CwB,EAAAA,EAAAA,IA0JkD,oCAClC,KAOGlB,GAAA6D,UAAUhI,OAAS,IAAH,WAA3BiE,EAAAA,EAAAA,IAGM,OArKdL,IAAA,EAkKyCC,MAAM,uBAAwB4C,QAAKlC,EAAA,KAAAA,EAAA,OAAA4F,IAAEhG,GAAAkG,eAAAlG,GAAAkG,iBAAAF,K,EACpE3F,EAAAA,EAAAA,IAAsD,OAAtD8F,IAAsD5F,EAAAA,EAAAA,IAApBP,GAAAoG,YAAU,kBAC5C/F,EAAAA,EAAAA,IAAuB,YAAjB,cAAU,QApK1BS,EAAAA,EAAAA,IAAA,OAwKmBd,GAAAqG,iBAAc,WAAzBvG,EAAAA,EAAAA,IAwCM,MAxCNwG,GAwCM,gBAvCJjG,EAAAA,EAAAA,IAAsB,UAAlB,iBAAa,KACjBA,EAAAA,EAAAA,IAqCM,MArCNkG,GAqCM,CApCOvG,GAAAS,UAAUhF,cAAciC,aAAa8I,UAAO,WAAvD1G,EAAAA,EAAAA,IAQM,MARN2G,GAQM,EAPJpG,EAAAA,EAAAA,IAAkF,WAAAE,EAAAA,EAAAA,IAA3EP,GAAAS,UAAUhF,cAAciC,aAAagJ,SAAW,qBAAJ,GAE3C1G,GAAAS,UAAUhF,cAAciC,aAAa8I,SAAWxG,GAAAW,aAAaX,GAAAS,UAAUhF,cAAciC,aAAa8I,WAAO,WADjH1G,EAAAA,EAAAA,IAKC,OAlLfL,IAAA,EA+KiBE,IAAKK,GAAAY,eAAeZ,GAAAS,UAAUhF,cAAciC,aAAa8I,SAC1D5G,IAAI,aACJF,MAAM,iB,OAjLtBiH,MAAA7F,EAAAA,EAAAA,IAAA,WAAAA,EAAAA,EAAAA,IAAA,OAqLuBd,GAAAS,UAAUhF,cAAciC,aAAakJ,aAAe5G,GAAAS,UAAUhF,cAAciC,aAAamJ,aAAU,WAA9G/G,EAAAA,EAAAA,IAWM,MAXNgH,GAWM,gBAVJzG,EAAAA,EAAAA,IAAuB,UAAnB,kBAAc,IAEVL,GAAAS,UAAUhF,cAAciC,aAAamJ,YAAc7G,GAAAW,aAAaX,GAAAS,UAAUhF,cAAciC,aAAamJ,cAAU,WADvH/G,EAAAA,EAAAA,IAKC,OA5LfL,IAAA,EAyLiBE,IAAKK,GAAAY,eAAeZ,GAAAS,UAAUhF,cAAciC,aAAamJ,YAC1DjH,IAAI,QACJF,MAAM,iB,OA3LtBqH,MAAAjG,EAAAA,EAAAA,IAAA,OA6LuBd,GAAAS,UAAUhF,cAAciC,aAAakJ,cAAW,WAAzD9G,EAAAA,EAAAA,IAEI,IAFJkH,GAEI,gBADF3G,EAAAA,EAAAA,IAAwB,cAAhB,WAAO,KA9L/Ba,EAAAA,EAAAA,IA8LwC,KAACX,EAAAA,EAAAA,IAAGP,GAAAS,UAAUhF,cAAciC,aAAakJ,aAAW,OA9L5F9F,EAAAA,EAAAA,IAAA,WAAAA,EAAAA,EAAAA,IAAA,OAkMuBd,GAAAS,UAAUhF,cAAciC,aAAauJ,WAAQ,WAAxDnH,EAAAA,EAAAA,IAKM,MALNoH,GAKM,gBAJJ7G,EAAAA,EAAAA,IAAsB,UAAlB,iBAAa,KACjBA,EAAAA,EAAAA,IAEI,IAFJ8G,GAEI,gBADF9G,EAAAA,EAAAA,IAAsC,cAA9B,yBAAqB,KArM7Ca,EAAAA,EAAAA,IAqMsD,KAACX,EAAAA,EAAAA,IAAGP,GAAAS,UAAUhF,cAAciC,aAAauJ,UAAQ,SArMvGnG,EAAAA,EAAAA,IAAA,OAyMuBd,GAAAS,UAAUhF,cAAciC,aAAa0J,sBAAmB,WAAnEtH,EAAAA,EAAAA,IAKM,MALNuH,GAKM,gBAJJhH,EAAAA,EAAAA,IAA6B,UAAzB,wBAAoB,KACxBA,EAAAA,EAAAA,IAEI,IAFJiH,GAEI,gBADFjH,EAAAA,EAAAA,IAAqC,cAA7B,wBAAoB,KA5M5Ca,EAAAA,EAAAA,IA4MqD,KAACX,EAAAA,EAAAA,IAAGP,GAAAS,UAAUhF,cAAciC,aAAa0J,qBAAmB,SA5MjHtG,EAAAA,EAAAA,IAAA,aAAAA,EAAAA,EAAAA,IAAA,QAmNQT,EAAAA,EAAAA,IAGM,MAHNkH,GAGM,gBAFJlH,EAAAA,EAAAA,IAA6D,MAAzDX,MAAM,oBAAmB,+BAA2B,KACxD8H,EAAAA,EAAAA,IAAeC,MAINzH,GAAA0H,MAAMC,UAAO,WAAxB7H,EAAAA,EAAAA,IAIM,OA7NdL,IAAA,EA0NaC,OA1Nb+C,EAAAA,EAAAA,IAAA,CA0NmB,qBACEzC,GAAA0H,MAAM5C,S,QACd9E,GAAA0H,MAAMzL,SAAO,KA5N1B6E,EAAAA,EAAAA,IAAA,eAAA8G,E,4HCCOlI,MAAM,oB,IADbD,IAAA,EAMgCC,MAAM,0B,IAGzBA,MAAM,c,IAWNA,MAAM,c,IAWNA,MAAM,c,IAUNA,MAAM,c,IAUNA,MAAM,c,IAUNA,MAAM,c,IAUNA,MAAM,c,IAUNA,MAAM,c,IAYNA,MAAM,c,IAUNA,MAAM,gB,GAvGnB,a,GAAA,a,2CACEI,EAAAA,EAAAA,IA8HM,MA9HN8H,GA8HM,EA7HJvH,EAAAA,EAAAA,IAES,UAFAiC,QAAKlC,EAAA,KAAAA,EAAA,OAAA4F,IAAEhG,EAAA6H,mBAAA7H,EAAA6H,qBAAA7B,IAAmBtG,MAAM,0B,QACpCM,EAAA8H,gBAAkB,gCAAkC,qBAArC,GAGT9H,EAAA8H,kBAAe,WAA1BhI,EAAAA,EAAAA,IAmHM,MAnHNK,GAmHM,gBAlHJE,EAAAA,EAAAA,IAAwB,UAApB,mBAAe,KACnBA,EAAAA,EAAAA,IAgHO,QAhHA0H,SAAM3H,EAAA,MAAAA,EAAA,KARnB4H,EAAAA,EAAAA,KAAA,IAAAhC,IAQ6BhG,EAAAiI,oBAAAjI,EAAAiI,sBAAAjC,IAAkB,cAAEtG,MAAM,gB,EAC/CW,EAAAA,EAAAA,IASM,MATNC,GASM,gBARJD,EAAAA,EAAAA,IAA+C,SAAxC6H,IAAI,YAAW,qBAAiB,cACvC7H,EAAAA,EAAAA,IAMC,SALCyE,KAAK,OACL/E,GAAG,WAbf,sBAAAK,EAAA,KAAAA,EAAA,GAAAmC,GAcqBvC,EAAAmI,gBAAgBC,SAAQ7F,GACjCyC,YAAY,6BACZqD,SAAA,I,iBAFSrI,EAAAmI,gBAAgBC,eAM7B/H,EAAAA,EAAAA,IASM,MATNG,GASM,gBARJH,EAAAA,EAAAA,IAAiD,SAA1C6H,IAAI,eAAc,oBAAgB,cACzC7H,EAAAA,EAAAA,IAMC,SALCyE,KAAK,MACL/E,GAAG,cAxBf,sBAAAK,EAAA,KAAAA,EAAA,GAAAmC,GAyBqBvC,EAAAmI,gBAAgBG,YAAW/F,GACpCyC,YAAY,gBACZqD,SAAA,I,iBAFSrI,EAAAmI,gBAAgBG,kBAM7BjI,EAAAA,EAAAA,IAQM,MARNK,GAQM,gBAPJL,EAAAA,EAAAA,IAAgD,SAAzC6H,IAAI,iBAAgB,iBAAa,cACxC7H,EAAAA,EAAAA,IAKC,SAJCyE,KAAK,MACL/E,GAAG,gBAnCf,sBAAAK,EAAA,KAAAA,EAAA,GAAAmC,GAoCqBvC,EAAAmI,gBAAgBI,cAAahG,GACtCyC,YAAY,Y,iBADHhF,EAAAmI,gBAAgBI,oBAK7BlI,EAAAA,EAAAA,IAQM,MARNQ,GAQM,gBAPJR,EAAAA,EAAAA,IAAsC,SAA/B6H,IAAI,WAAU,aAAS,cAC9B7H,EAAAA,EAAAA,IAKC,SAJCyE,KAAK,OACL/E,GAAG,UA7Cf,sBAAAK,EAAA,KAAAA,EAAA,GAAAmC,GA8CqBvC,EAAAmI,gBAAgBhL,QAAOoF,GAChCyC,YAAY,2B,iBADHhF,EAAAmI,gBAAgBhL,cAK7BkD,EAAAA,EAAAA,IAQM,MARNU,GAQM,gBAPJV,EAAAA,EAAAA,IAA6C,SAAtC6H,IAAI,SAAQ,sBAAkB,cACrC7H,EAAAA,EAAAA,IAKC,SAJCyE,KAAK,QACL/E,GAAG,QAvDf,sBAAAK,EAAA,KAAAA,EAAA,GAAAmC,GAwDqBvC,EAAAmI,gBAAgB/C,MAAK7C,GAC9ByC,YAAY,iC,iBADHhF,EAAAmI,gBAAgB/C,YAK7B/E,EAAAA,EAAAA,IAQM,MARNW,GAQM,gBAPJX,EAAAA,EAAAA,IAAuD,SAAhD6H,IAAI,mBAAkB,sBAAkB,cAC/C7H,EAAAA,EAAAA,IAKC,SAJCyE,KAAK,OACL/E,GAAG,kBAjEf,sBAAAK,EAAA,KAAAA,EAAA,GAAAmC,GAkEqBvC,EAAAmI,gBAAgBK,KAAIjG,GAC7B8F,SAAA,I,iBADSrI,EAAAmI,gBAAgBK,WAK7BnI,EAAAA,EAAAA,IAQM,MARNY,GAQM,gBAPJZ,EAAAA,EAAAA,IAAsD,SAA/C6H,IAAI,mBAAkB,qBAAiB,cAC9C7H,EAAAA,EAAAA,IAKC,SAJCyE,KAAK,OACL/E,GAAG,kBA3Ef,sBAAAK,EAAA,KAAAA,EAAA,GAAAmC,GA4EqBvC,EAAAmI,gBAAgBM,KAAIlG,GAC7B8F,SAAA,I,iBADSrI,EAAAmI,gBAAgBM,WAK7BpI,EAAAA,EAAAA,IAUM,MAVNc,GAUM,gBATJd,EAAAA,EAAAA,IAAqD,SAA9C6H,IAAI,eAAc,wBAAoB,cAC7C7H,EAAAA,EAAAA,IAOC,SANCyE,KAAK,SACL/E,GAAG,cArFf,sBAAAK,EAAA,KAAAA,EAAA,GAAAmC,GAsFqBvC,EAAAmI,gBAAgBO,YAAWnG,GACpCoG,IAAI,IACJC,IAAI,KACJP,SAAA,I,iBAHSrI,EAAAmI,gBAAgBO,kBAO7BrI,EAAAA,EAAAA,IAQM,MARNe,GAQM,gBAPJf,EAAAA,EAAAA,IAAmD,SAA5C6H,IAAI,gBAAe,qBAAiB,cAC3C7H,EAAAA,EAAAA,IAKY,YAJVN,GAAG,eAhGf,sBAAAK,EAAA,KAAAA,EAAA,GAAAmC,GAiGqBvC,EAAAmI,gBAAgBU,MAAKtG,GAC9ByC,YAAY,+CACZ8D,KAAK,K,iBAFI9I,EAAAmI,gBAAgBU,YAM7BxI,EAAAA,EAAAA,IAgBM,MAhBNgB,GAgBM,EAfJhB,EAAAA,EAAAA,IAMS,UALPyE,KAAK,SACLpF,MAAM,gBACLiD,SAAU3C,EAAA+I,e,QAER/I,EAAA+I,aAAe,gBAAkB,iBAArB,EA7G3BpH,KA+GUtB,EAAAA,EAAAA,IAOS,UANPyE,KAAK,SACLpF,MAAM,eACL4C,QAAKlC,EAAA,MAAAA,EAAA,QAAA4F,IAAEhG,EAAAgJ,WAAAhJ,EAAAgJ,aAAAhD,IACPrD,SAAU3C,EAAA+I,cACZ,YAED,EAtHVlH,OAAA,QAAAf,EAAAA,EAAAA,IAAA,OA4Hed,EAAA0H,MAAMuB,OAAI,WAArBnJ,EAAAA,EAAAA,IAEM,OA9HVL,IAAA,EA4H2BC,OA5H3B+C,EAAAA,EAAAA,IAAA,CA4HiC,qBAA6BzC,EAAA0H,MAAM5C,S,QAC3D9E,EAAA0H,MAAMzL,SAAO,KA7HtB6E,EAAAA,EAAAA,IAAA,Q,gBAuIA,IACE/D,KAAM,cACNmM,KAAAA,GACEpN,QAAQC,IAAI,uBAEZ,MAAM+L,GAAkBjI,EAAAA,GAAAA,KAAI,GAGtBsI,GAAkBgB,EAAAA,GAAAA,IAAS,CAC/Bf,SAAU,GACVE,YAAa,GACbC,cAAe,GACfpL,QAAS,GACTiI,MAAO,GACPoD,KAAM,GACNC,KAAM,GACNC,YAAa,EACbG,MAAO,KAIHE,GAAelJ,EAAAA,GAAAA,KAAI,GAGnB6H,GAAQyB,EAAAA,GAAAA,IAAS,CACrBF,MAAM,EACNhN,QAAS,GACT6I,KAAM,SAIF+C,EAAoBA,KACxBC,EAAgBpC,OAASoC,EAAgBpC,KAAK,EAI1C0D,EAAYA,CAACnN,EAAS6I,EAAO,UACjC4C,EAAMzL,QAAUA,EAChByL,EAAM5C,KAAOA,EACb4C,EAAMuB,MAAO,EAGbI,YAAW,KACT3B,EAAMuB,MAAO,CAAK,GACjB,IAAK,EAIJK,EAAeA,IACdnB,EAAgBC,SAASmB,OAKzBpB,EAAgBG,YAAYiB,OAK5BpB,EAAgBK,KAKhBL,EAAgBM,QAKhBN,EAAgBO,aAAeP,EAAgBO,YAAc,KAChEU,EAAU,0CAA2C,UAC9C,IANPA,EAAU,iDAAkD,UACrD,IANPA,EAAU,kDAAmD,UACtD,IANPA,EAAU,iDAAkD,UACrD,IANPA,EAAU,wCAAyC,UAC5C,GA2BLnB,EAAqB1M,UACzB,GAAK+N,IAEL,IACEP,EAAarD,OAAQ,EAGrB,MAAM8D,EAAoB,CACxBpB,SAAUD,EAAgBC,SAC1BE,YAAaH,EAAgBG,YAC7BC,cAAeJ,EAAgBI,eAAiB,GAChDnD,MAAO+C,EAAgB/C,OAAS,GAChCjI,QAASgL,EAAgBhL,SAAW,GACpCqL,KAAML,EAAgBK,KACtBC,KAAMN,EAAgBM,KACtBC,YAAaP,EAAgBO,YAC7BG,MAAOV,EAAgBU,OAAS,GAChCY,OAAQ,UACRC,OAAQ,QAGV5N,QAAQC,IAAI,+BAAgCyN,GAG5C,MAAMG,EAAe,CACnB7M,OAAQqL,EAAgBC,SACxBhL,SAAU+K,EAAgBG,YAC1BlD,MAAO+C,EAAgB/C,OAAS,GAChCwE,MAAOzB,EAAgBK,KACvBqB,KAAM1B,EAAgBM,KACtBqB,SAAU3B,EAAgBO,YAC1BqB,MAAO,kCAAkC5B,EAAgBU,OAAS,2BAGpE/M,QAAQC,IAAI,6CAA8C4N,GAI1D,MAAMK,QAAuBC,EAAAA,GAAAA,IAAwBN,GAIrD,GAFA7N,QAAQC,IAAI,oCAAqCiO,IAE5CA,EAAehO,QAClB,MAAM,IAAIqC,MAAM2L,EAAe9L,OAAS,+BAIlD,MAAMjC,EAAU,2EAGDkM,EAAgBC,kCACRD,EAAgBG,gBACrCH,EAAgBI,cAAgB,uBAAuBJ,EAAgBI,gBAAkB,OACzFJ,EAAgB/C,MAAQ,eAAe+C,EAAgB/C,QAAU,mBACrD+C,EAAgBK,mBAClBL,EAAgBM,wBACXN,EAAgBO,gBAC/BP,EAAgBU,MAAQ,eAAeV,EAAgBU,QAAU,4GAOnDqB,EAAiBC,mBAAmBlO,GACpCmO,EAAc,sCAAsCF,IAC1DG,OAAOC,KAAKF,EAAa,UAI3BhB,EAAU,2EAA4E,WAGtFJ,GAEF,CAAE,MAAO9K,GACPpC,QAAQoC,MAAM,gCAAiCA,GAC/CkL,EAAU,uEAAwE,QACpF,CAAE,QACAL,EAAarD,OAAQ,CACvB,GAIIsD,EAAYA,KAChBb,EAAgBC,SAAW,GAC3BD,EAAgBG,YAAc,GAC9BH,EAAgBI,cAAgB,GAChCJ,EAAgBhL,QAAU,GAC1BgL,EAAgB/C,MAAQ,GACxB+C,EAAgBK,KAAO,GACvBL,EAAgBM,KAAO,GACvBN,EAAgBO,YAAc,EAC9BP,EAAgBU,MAAQ,EAAE,EAG5B,MAAO,CACLf,kBACAK,kBACAY,eACArB,QACAG,oBACAI,qBACAe,YAEJ,G,WCvTF,MAAMuB,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,WFwOA,IACExN,KAAM,iBACNyN,WAAY,CACVC,YAAWA,IAEbC,MAAO,CAEL3K,GAAI,CACF+E,KAAM6F,OACNC,QAAS,KAGb1B,KAAAA,CAAMwB,GACJ,MAAMG,GAAQC,EAAAA,GAAAA,MACR7K,GAAS8K,EAAAA,EAAAA,KAAS,IAAML,EAAM3K,IAAM8K,EAAMG,OAAOjL,KACjDU,GAAWZ,EAAAA,GAAAA,IAAI,CACnBoL,MAAO,GACPxP,aAAc,CACZsB,KAAM,qBACNE,YAAa,yCACbI,QAAS,kBACTF,QAAS,uBACTG,KAAM,KACNI,YAAa,CACX8I,QAAS,KACTE,QAAS,qBACTE,YAAa,KACbC,WAAY,KACZI,SAAU,+BACVG,oBAAqB,oCAIrBlH,GAAYL,EAAAA,GAAAA,KAAI,GAChB3B,GAAQ2B,EAAAA,GAAAA,IAAI,MACZgE,GAAYhE,EAAAA,GAAAA,IAAI,IAEhBqL,IADWrL,EAAAA,GAAAA,IAAI,OACKA,EAAAA,GAAAA,KAAI,IACxBsL,GAAyBtL,EAAAA,GAAAA,IAAI,MAEnC/D,QAAQC,IAAI,uCAAwC8O,EAAMG,OAAOjL,IAGjE,MAAM2H,GAAQ7H,EAAAA,GAAAA,IAAI,CAChB8H,SAAS,EACT1L,QAAS,GACT6I,KAAM,UACNsG,UAAW,QAIbC,EAAAA,EAAAA,KAAU,KACRC,IAGAvN,GAAAA,EAASwN,GAAG,wBAAyBC,IAGrCvM,EAAAA,GAAAA,KAA8B,EAAK,KAIrCwM,EAAAA,EAAAA,KAAY,KACV1N,GAAAA,EAAS2N,IAAI,wBAAyBF,IACtClM,EAAAA,GAAAA,MAGIoI,EAAMhC,MAAM0F,WACdO,aAAajE,EAAMhC,MAAM0F,UAC3B,IAIF,MAAMI,EAA4BI,IAChC9P,QAAQC,IAAI,4DAA6D6P,GAEpEA,IAGLnL,EAASiF,MAAMjK,aAAe,IACzBmQ,GAGLT,EAAuBzF,MAAQ7H,KAAKC,MAGpCsL,EAAU,sCAAuC,QAAO,EAI1D7N,eAAe+P,IACb,IAKE,GAJApL,EAAUwF,OAAQ,EAClBxH,EAAMwH,MAAQ,KACd5J,QAAQC,IAAI,wBAAyB8O,EAAMG,OAAOjL,KAE7C8K,EAAMG,OAAOjL,GAGhB,OAFA7B,EAAMwH,MAAQ,kCACdxF,EAAUwF,OAAQ,GAKpB,MAAMmG,EAAY1P,aAAaC,QAAQ,QAAQyO,EAAMG,OAAOjL,MAC5D,GAAI8L,EACF,IACEhI,EAAU6B,MAAQlI,KAAKe,MAAMsN,GAC7B/P,QAAQC,IAAI,sCAAuC8H,EAAU6B,MAC/D,CAAE,MAAOlH,GACP1C,QAAQoC,MAAM,4CAA6CM,EAC7D,CAGF,IAEE,MAAMsN,QAAaC,EAAAA,GAAAA,IAAclB,EAAMG,OAAOjL,IAE9C,IAAI+L,IAAQA,EAAKb,MAyCf,MAAM,IAAI5M,MAAM,4BAvChBoC,EAASiF,MAAMuF,MAAQa,EAAKb,MAG5B,IACE,MAAMxP,QAAqB0C,EAAAA,GAAAA,MACvB1C,IACFgF,EAASiF,MAAMjK,aAAeA,EAC9B0P,EAAuBzF,MAAQ7H,KAAKC,MACpChC,QAAQC,IAAI,+CAAgDN,GAEhE,CAAE,MAAOuQ,GACPlQ,QAAQa,KAAK,2DAA4DqP,GAErEF,EAAKrQ,eACPgF,EAASiF,MAAMjK,aAAeqQ,EAAKrQ,aAEvC,CAEAK,QAAQC,IAAI,0BAA2B0E,EAASiF,OAGhDjF,EAASiF,MAAMuF,MAAMgB,SAAQxK,IAG3BA,EAAKyK,uBAA+CC,IAA3B1K,EAAKyK,kBAC5BE,OAAO3K,EAAKyK,mBAAqB,EACnCzK,EAAKiB,iBAAmBjB,EAAKyK,iBAAiB,IAIhDG,IAGA,IACElQ,aAAamQ,QAAQ,QAAQzB,EAAMG,OAAOjL,KAAMvC,KAAKC,UAAUgD,EAASiF,OAC1E,CAAE,MAAO6G,GACPzQ,QAAQa,KAAK,8CAA+C4P,EAC9D,CAIJ,CAAE,MAAOC,GACP1Q,QAAQoC,MAAM,wCAAyCsO,GAGvD,IACE,MAAMC,EAAatQ,aAAaC,QAAQ,QAAQyO,EAAMG,OAAOjL,MAC7D,IAAI0M,EAqBF,MAAM,IAAIpO,MAAM,mCAjBhB,GAHAoC,EAASiF,MAAQlI,KAAKe,MAAMkO,GAC5B3Q,QAAQC,IAAI,sCAAuC0E,EAASiF,QAExDjF,EAASiF,QAASjF,EAASiF,MAAMuF,MAcnC,MAAM,IAAI5M,MAAM,qCAZhBoC,EAASiF,MAAMuF,MAAMgB,SAAQxK,IAC3BA,EAAKyK,uBAA+CC,IAA3B1K,EAAKyK,kBAC5BE,OAAO3K,EAAKyK,mBAAqB,EACnCzK,EAAKiB,iBAAmBjB,EAAKyK,iBAAiB,IAIhDG,IAGAjD,EAAU,iFAAkF,UAOlG,CAAE,MAAOsD,GACP5Q,QAAQoC,MAAM,uCAAwCwO,GACtDxO,EAAMwH,MAAQ,uFAChB,CACF,CACF,CAAE,MAAOlH,GACP1C,QAAQoC,MAAM,mCAAoCM,GAClDN,EAAMwH,MAAQlH,EAAEvC,SAAW,yBAC7B,CAAE,QACAiE,EAAUwF,OAAQ,CACpB,CACF,CAGA,MAAMW,GAAiB0E,EAAAA,EAAAA,KAAS,KAC9B,MAAMrN,EAAc+C,EAASiF,OAAOjK,cAAciC,YAElD,QAAKA,MAIFA,EAAY8I,SAAW7F,EAAajD,EAAY8I,UACjD9I,EAAYgJ,SACZhJ,EAAYkJ,aACXlJ,EAAYmJ,YAAclG,EAAajD,EAAYmJ,aACpDnJ,EAAYuJ,UACZvJ,EAAY0J,oBACb,IAIGhB,GAAa2E,EAAAA,EAAAA,KAAS,IACnBlH,EAAU6B,MAAMiH,QAAO,CAACC,EAAOnL,IAASmL,EAAQnL,EAAKwC,UAAU,KAIlEU,GAAYoG,EAAAA,EAAAA,KAAS,IAClBlH,EAAU6B,MAAMiH,QAAO,CAACC,EAAOnL,IAC7BmL,EAASnL,EAAKU,MAAQV,EAAKwC,UACjC,KAIL,SAAS/B,EAAYC,GACnB,GAAI0K,MAAMT,OAAOjK,IAAS,MAAO,OAGjC,MAAM2K,EAASV,OAAOjK,GAAO4K,QAAQ,IAG9BC,EAAaC,GAAgBH,EAAOI,MAAM,KAG3CC,EAAwBH,EAAYI,QAAQ,wBAAyB,KAG3E,MAAO,GAAGD,KAAyBF,GACrC,CAGA1R,eAAeiH,EAAUf,GAEvB,GAAI2K,OAAO3K,EAAKyK,oBAAsB,EAEpC,YADA9C,EAAU,iBAAiB3H,EAAK1E,qEAAsE,SAIxG,MAAMsQ,QAAoBC,EAAkB7L,GAC5C,IAAK4L,EAAa,OAElB,MAAME,EAAe1J,EAAU6B,MAAM8H,MAAKC,GAEpChM,EAAK1B,IAAM0N,EAAE1N,GACR0N,EAAE1N,KAAO0B,EAAK1B,GAEhB0N,EAAE1Q,OAAS0E,EAAK1E,OAGrBwQ,EACFA,EAAatJ,WAEbJ,EAAU6B,MAAMgI,KAAK,CACnB3N,GAAI0B,EAAK1B,IAAMlC,KAAKC,MAAM6P,WAC1B5Q,KAAM0E,EAAK1E,KACXoF,MAAOV,EAAKU,MACZ8B,SAAU,EACViI,kBAAmBzK,EAAKyK,mBAAqB,IAKjD0B,IAGAvB,IAGAjD,EAAU,GAAG3H,EAAK1E,0BAA2B,UAC/C,CAGA,SAASqM,EAAUnN,EAAS6I,EAAO,UAAW+I,EAAW,KACvD/R,QAAQC,IAAI,mCAAmCE,MAAY6I,MAGvD4C,EAAMhC,MAAM0F,WACdO,aAAajE,EAAMhC,MAAM0F,WAI3B1D,EAAMhC,MAAMzJ,QAAUA,EACtByL,EAAMhC,MAAMZ,KAAOA,EACnB4C,EAAMhC,MAAMiC,SAAU,EAGtB7L,QAAQC,IAAI,2BAA2B2L,EAAMhC,MAAMiC,oBAAoBD,EAAMhC,MAAMzJ,WAGnFyL,EAAMhC,MAAM0F,UAAY/B,YAAW,KACjCvN,QAAQC,IAAI,6CAA6C8R,OACzDnG,EAAMhC,MAAMiC,SAAU,CAAK,GAC1BkG,EACL,CAGA,SAASD,IACP,IACEzR,aAAamQ,QAAQ,QAAQzB,EAAMG,OAAOjL,KAAMvC,KAAKC,UAAUoG,EAAU6B,OAC3E,CAAE,MAAOlH,GACP1C,QAAQoC,MAAM,4CAA6CM,EAC7D,CACF,CAGA,SAAS8F,EAAiB5C,GACxB,MAAMD,EAAOoC,EAAU6B,MAAMhE,GAGvBoM,EAAWrN,EAASiF,MAAMuF,OAAOuC,MAAKC,GAAKA,EAAE1N,KAAO0B,EAAK1B,KAC/D,GAAI+N,EAAU,CAEZ,MAAM5B,EAAoB4B,EAAS5B,mBAAqB,EACxD,GAAIzK,EAAKwC,UAAYiI,EAEnB,YADA9C,EAAU,uCAAuC3H,EAAK1E,QAAS,UAGnE,CAGA0E,EAAKwC,WAGL2J,IACAvB,GACF,CAGA,SAASlI,EAAiBzC,GACpBmC,EAAU6B,MAAMhE,GAAOuC,SAAW,GACpCJ,EAAU6B,MAAMhE,GAAOuC,WACvB2J,IACAvB,KAEA7H,EAAe9C,EAEnB,CAGA,SAAS8C,EAAe9C,GACtBmC,EAAU6B,MAAMqI,OAAOrM,EAAO,GAC9BkM,IACAvB,GACF,CAGA9Q,eAAe0K,IACb,IAEE,GAA+B,IAA3BpC,EAAU6B,MAAM7J,OAElB,YADAuN,EAAU,4BAA6B,SAIzC,IAAKrE,EAAaW,MAAM3I,OAASgI,EAAaW,MAAMR,MAElD,YADAkE,EAAU,0CAA2C,SAKvD8B,EAAkBxF,OAAQ,QAGpBsI,IAGNC,IAEA7E,EAAU,6CAA8C,WAGxDC,YAAW,KAETxF,EAAU6B,MAAQ,GAGlBvJ,aAAa+R,WAAW,QAAQrD,EAAMG,OAAOjL,MAG7CgF,EAAaW,MAAQ,CACnB3I,KAAM,GACNmI,MAAO,GACPE,MAAO,GACPjI,QAAS,IAEX2I,EAAkBJ,MAAQ,GAC1BwF,EAAkBxF,OAAQ,CAAK,GAC9B,IACL,CAAE,MAAOxH,GACPpC,QAAQoC,MAAM,gCAAiCA,GAC/CkL,EAAU,8BAA+B,SACzC8B,EAAkBxF,OAAQ,CAC5B,CACF,CAGJ,SAASyI,IAEwB,IAA3BtK,EAAU6B,MAAM7J,OAKfkJ,EAAaW,MAAM3I,MAASgI,EAAaW,MAAMR,OAMpD+I,IAEA7E,EAAU,iCAAkC,YAP1CA,EAAU,0CAA2C,SALrDA,EAAU,4BAA6B,QAa3C,CAEA,SAAS6E,IAEP,IAAIG,EAAkB,iBAAiBrJ,EAAaW,MAAM3I,YAC1DqR,GAAmB,oBAEnBvK,EAAU6B,MAAMuG,SAAQxK,IACtB,MAAM4M,GAAY5M,EAAKU,MAAQV,EAAKwC,UAAU8I,QAAQ,GACtDqB,GAAmB,OAAO3M,EAAKwC,aAAaxC,EAAK1E,WAAWmF,EAAYmM,MAAa,IAGvFD,GAAmB,kBAAkBlM,EAAYyC,EAAUe,WAEvDX,EAAaW,MAAMR,QACrBkJ,GAAmB,kBAAkBrJ,EAAaW,MAAMR,WAGtDH,EAAaW,MAAMN,QACrBgJ,GAAmB,eAAerJ,EAAaW,MAAMN,WAGnDL,EAAaW,MAAMvI,UACrBiR,GAAmB,mBAAmBrJ,EAAaW,MAAMvI,aAGvD2I,EAAkBJ,QACpB0I,GAAmB,4BAA4BtI,EAAkBJ,WAInE,MAAM4I,EAA4C,OAAhC7I,EAAsBC,MAAiB,YACP,UAAhCD,EAAsBC,MAAoB,QAC1C,iBAElB0I,GAAmB,yBAAyBE,IAG5C,MAAMpE,EAAiBC,mBAAmBiE,GACpChE,EAAc,sCAAsCF,IAG1DG,OAAOC,KAAKF,EAAa,SAC3B,CAGI,SAASlE,IACP,MAAMqI,EAAeC,SAASC,cAAc,kBACxCF,GACFA,EAAaG,eAAe,CAAEC,SAAU,UAE5C,CAGApT,eAAe+R,EAAkB7L,GAG/B,MAAMmN,EAAmBxC,OAAO3K,EAAKyK,oBAAsB,EAG3D,GAAI0C,GAAoB,EAEtB,OADAxF,EAAU,iBAAiB3H,EAAK1E,qEAAsE,UAC/F,EAIT,MAAM8R,EAAWhL,EAAU6B,MAAM8H,MAAKC,GAAKA,EAAE1N,KAAO0B,EAAK1B,KACnD+O,EAAeD,EAAWA,EAAS5K,SAAW,EAG9CvB,EAAmBkM,EAAmBE,EAG5C,OAAIpM,GAAoB,GACtB0G,EAAU,uCAAuC3H,EAAK1E,QAAS,YACxD,IACE2F,GAAoB,GAC7B0G,EAAU,gBAAgB1G,kBAAiCjB,EAAK1E,SAAU,YAGrE,EACT,CAGAxB,eAAeyS,IACb,IAEE,IAAKnK,EAAU6B,OAAoC,IAA3B7B,EAAU6B,MAAM7J,OAEtC,YADAC,QAAQa,KAAK,sDAIfb,QAAQC,IAAI,8CAA8C8H,EAAU6B,MAAM7J,uBAG1E,MAAMkT,QAAoBC,EAAAA,GAAAA,MAC1B,IAAKD,IAAgBE,MAAMC,QAAQH,GAEjC,OADAjT,QAAQoC,MAAM,sCACP,EAIT,MAAMiR,EAAiB3R,KAAKe,MAAMf,KAAKC,UAAUoG,EAAU6B,QACrD0J,EAAgB,GACtB,IAAIC,GAAY,EAGhB,MAAM,aAAEC,EAAY,cAAEC,SAAwB,uCAG9C,IAAIC,EAAgB,GACpB,IACEA,QAAsBF,KAAkB,GACnCL,MAAMC,QAAQM,KACjBA,EAAgB,IAElB1T,QAAQC,IAAI,wCAAyCyT,EAAc3T,OACrE,CAAE,MAAO4T,GACP3T,QAAQa,KAAK,uCAAwC8S,GACrDD,EAAgB,EAClB,CAGA,IAAK,IAAI/B,EAAI,EAAGA,EAAI0B,EAAetT,OAAQ4R,IAAK,CAC9C,MAAMoB,EAAWM,EAAe1B,GAChC3R,QAAQC,IAAI,mBAAmB0R,EAAE,KAAK0B,EAAetT,WAAWgT,EAAS9R,aAAa8R,EAAS9O,OAE/F,IAEE,MAAM+N,EAAWiB,EAAYvB,MAAK/L,GAAQA,EAAK1B,KAAO8O,EAAS9O,KAE/D,IAAK+N,EAAU,CACbhS,QAAQa,KAAK,sCAAsCkS,EAAS9R,aAAa8R,EAAS9O,OAClFqP,EAAc1B,KAAK,CACjB3Q,KAAM8R,EAAS9R,KACff,SAAS,EACTkC,MAAO,sCAET,QACF,CAGA,MAAMwR,EAAkBC,SAASvD,OAAO0B,EAAS5B,mBAAqB,GAAI,IACpE0D,EAAeD,SAASvD,OAAOyC,EAAS5K,UAAY,GAAI,IAE9D,GAAI4I,MAAM6C,IAAoB7C,MAAM+C,GAAe,CACjD,MAAM1R,EAAQ,6BAA6B2Q,EAAS9R,oBAAoB+Q,EAAS5B,8BAA8B2C,EAAS5K,WACxHnI,QAAQoC,MAAMA,GACdkR,EAAc1B,KAAK,CACjB3Q,KAAM8R,EAAS9R,KACff,SAAS,EACTkC,MAAOA,IAETmR,GAAY,EACZ,QACF,CAGA,MAAMQ,EAAcC,KAAKlH,IAAI,EAAG8G,EAAkBE,GAElD9T,QAAQC,IAAI,gBAAgB8S,EAAS9R,SAAS2S,OAAqBE,OAAkBC,mCAA6CH,gCAA8CE,MAGhL,MAAMG,QAAsBC,EAAAA,GAAAA,IAAuBlC,EAAS/N,GAAI8P,GAYhE,GATAT,EAAc1B,KAAK,CACjB3Q,KAAM8R,EAAS9R,KACfkT,YAAaP,EACbE,aAAcA,EACdC,YAAaA,EACb7T,QAAS+T,EACT7R,MAAO6R,EAAgB,KAAO,uCAG3BA,EAEE,CAEL,MAAMG,GAAc,IAAIrS,MAAOsS,cACzBC,EAAmBZ,EAAchC,MAAK/L,GAAQA,EAAK1E,OAAS8R,EAAS9R,OAEvEqT,GACFA,EAAiBnM,UAAY2L,EAC7BQ,EAAiB5H,KAAO0H,GAExBV,EAAc9B,KAAK,CACjB3Q,KAAM8R,EAAS9R,KACfkH,SAAU2L,EACVzN,MAAO0M,EAAS1M,MAChBC,cAAe0L,EAAS1L,gBAAiB,EACzCoG,KAAM0H,IAGVpU,QAAQC,IAAI,6CAA6C8S,EAAS9R,SAAS6S,IAC7E,MAnBEP,GAAY,CAoBhB,CAAE,MAAOgB,GACPvU,QAAQoC,MAAM,oBAAoB2Q,EAAS9R,QAASsT,GACpDjB,EAAc1B,KAAK,CACjB3Q,KAAM8R,EAAS9R,KACff,SAAS,EACTkC,MAAOmS,EAAUpU,SAAW,sBAE9BoT,GAAY,CACd,CACF,CAGA,UACQE,EAAcC,GACpB1T,QAAQC,IAAI,+CAA+CyT,EAAc3T,mBAC3E,CAAE,MAAO0Q,GACPzQ,QAAQoC,MAAM,uCAAwCqO,EACxD,CAGA,MAAM+D,EAAelB,EAAcmB,QAAOC,GAAKA,EAAExU,UAASH,OAM1D,GALAC,QAAQC,IAAI,mDAAmDuU,KAAgBnB,EAAetT,UAG9FC,QAAQC,IAAI,2CAA4CqT,GAEpDC,EAAW,CACb,MAAMoB,EAAcrB,EAAcmB,QAAOC,IAAMA,EAAExU,UAAS0U,KAAIF,GAAKA,EAAEzT,OAAM4T,KAAK,MAChF7U,QAAQa,KAAK,gDAAgD8T,IAC/D,CAEA,OAAOH,EAAe,CACxB,CAAE,MAAOpS,GAEP,OADApC,QAAQoC,MAAM,0CAA2CA,IAClD,CACT,CACF,CAIA,SAASmO,IACF5L,EAASiF,OAAOuF,OAGrBxK,EAASiF,MAAMuF,MAAMgB,SAAQ6B,IAE3B,MAAMe,EAAWhL,EAAU6B,MAAM8H,MAAKC,GAAKA,EAAE1N,KAAO+N,EAAS/N,KACvD+O,EAAeD,EAAWA,EAAS5K,SAAW,EAG9C2K,EAAmBxC,OAAO0B,EAAS5B,oBAAsB,EAG/D4B,EAASpL,iBAAmBkM,EAAmBE,EAE/ChT,QAAQC,IAAI,mCAAmC+R,EAAS/Q,SAAS+Q,EAASpL,oCAAoCkM,eAA8BE,KAAgB,GAEhK,CAGA,SAASnO,EAAaiQ,GACpB,QAAKA,OAGDA,EAAYC,WAAW,aAAcD,EAAYC,WAAW,gBAK5DD,EAAYC,WAAW,eAK7B,CAGA,SAASjQ,EAAegQ,GACtB,OAAKA,EAGDjQ,EAAaiQ,GACRA,EAILA,EAAYE,SAAS,UAAYF,EAAYC,WAAW,eACnD,0BAA0BD,IAI5B,GAbkB,EAc3B,CAGA,MAAM7L,GAAelF,EAAAA,GAAAA,IAAI,CACvB9C,KAAM,GACNmI,MAAO,GACPE,MAAO,GACPjI,QAAS,KAILsI,GAAwB5F,EAAAA,GAAAA,IAAI,QAG5BiG,GAAoBjG,EAAAA,GAAAA,IAAI,IAGxB2B,GAAeuJ,EAAAA,EAAAA,KAAS,KAC5B,IAAKtK,EAASiF,QAAUjF,EAASiF,MAAMuF,MAAO,MAAO,GACrD,MAAM8F,EAAWtQ,EAASiF,MAAMuF,MAAMsF,QAAO9O,IAASA,EAAKuP,YAE3D,OADAlV,QAAQC,IAAI,oBAAqBgV,EAASlV,OAAQkV,EAASL,KAAIjD,GAAKA,EAAE1Q,QAC/DgU,CAAQ,IAGXhO,GAAegI,EAAAA,EAAAA,KAAS,KAC5B,IAAKtK,EAASiF,QAAUjF,EAASiF,MAAMuF,MAAO,MAAO,GACrD,MAAM8F,EAAWtQ,EAASiF,MAAMuF,MAAMsF,QAAO9O,IAA2B,IAAnBA,EAAKuP,YAE1D,OADAlV,QAAQC,IAAI,qBAAsBgV,EAASlV,OAAQkV,EAASL,KAAIjD,GAAKA,EAAE1Q,QAChEgU,CAAQ,IAIXE,GAAsBpR,EAAAA,GAAAA,KAAI,GAC1BqR,GAA0BrR,EAAAA,GAAAA,KAAI,GAC9BsR,GAAqBtR,EAAAA,GAAAA,KAAI,GACzBuR,GAAmBvR,EAAAA,GAAAA,IAAI,MAEvBsI,GAAkBtI,EAAAA,GAAAA,IAAI,CAC1BuI,SAAU,GACVE,YAAa,GACbC,cAAe,GACfpL,QAAS,GACTiI,MAAO,GACPiM,UAAWC,IACXC,gBAAiB,GACjBC,gBAAiB,GACjB9I,YAAa,EACb+I,gBAAiB,KAInB,SAASH,IACP,MAAMI,EAAQ,IAAI7T,KACZ8T,EAAOD,EAAME,cACbC,EAAQlH,OAAO+G,EAAMI,WAAa,GAAGC,SAAS,EAAG,KACjDC,EAAMrH,OAAO+G,EAAMO,WAAWF,SAAS,EAAG,KAChD,MAAO,GAAGJ,KAAQE,KAASG,GAC7B,CAGAzW,eAAe2W,IACbhB,EAAwBxL,OAAQ,EAChCyL,EAAmBzL,OAAQ,EAC3B0L,EAAiB1L,MAAQ,KAEzB,IAEE,MAAMyM,QAAeC,EAAAA,GAAAA,IAAgBjK,EAAgBzC,OAErD,IAAIyM,EAAOnW,QAeT,MAAM,IAAIqC,MAAM8T,EAAOjU,OAAS,gCAbhCiT,EAAmBzL,OAAQ,EAC3B0D,EAAU,2EAA4E,WAGtFtN,QAAQC,IAAI,qCAAsCoM,EAAgBzC,MAAMN,OAGxEiE,YAAW,KACTgJ,IACApB,EAAoBvL,OAAQ,CAAK,GAChC,IAKP,CAAE,MAAOxH,GACPpC,QAAQoC,MAAM,8BAA+BA,GAC7CkT,EAAiB1L,MAAQ,0EACzB0D,EAAU,+DAAgE,QAC5E,CAAE,QACA8H,EAAwBxL,OAAQ,CAClC,CACF,CAGA,SAAS4M,IACPD,IACApB,EAAoBvL,OAAQ,CAC9B,CAGA,SAAS2M,IACPlK,EAAgBzC,MAAM0C,SAAW,GACjCD,EAAgBzC,MAAM4C,YAAc,GACpCH,EAAgBzC,MAAM6C,cAAgB,GACtCJ,EAAgBzC,MAAMvI,QAAU,GAChCgL,EAAgBzC,MAAMN,MAAQ,GAC9B+C,EAAgBzC,MAAM2L,UAAYC,IAClCnJ,EAAgBzC,MAAM6L,gBAAkB,GACxCpJ,EAAgBzC,MAAM8L,gBAAkB,GACxCrJ,EAAgBzC,MAAMgD,YAAc,EACpCP,EAAgBzC,MAAM+L,gBAAkB,GACxCN,EAAmBzL,OAAQ,EAC3B0L,EAAiB1L,MAAQ,IAC3B,CAGAnK,eAAegX,IACb,IACE,MAAM9W,QAAqB0C,EAAAA,GAAAA,KAA6B,GACpD1C,IACFgF,EAASiF,MAAMjK,aAAeA,EAC9B0P,EAAuBzF,MAAQ7H,KAAKC,MACpCsL,EAAU,sCAAuC,WAErD,CAAE,MAAOlL,GACPpC,QAAQoC,MAAM,8CAA+CA,GAC7DkL,EAAU,8CAA+C,QAC3D,CACF,CAEA,MAAO,CACLnJ,SACAC,YACAhC,QACAuC,WACAe,eACAuB,eACAc,YACAc,YACAyB,aACArB,eACAU,wBACAK,oBACAtD,YACAgC,iBACAF,mBACAH,mBACAjC,cACA+D,gBACAkI,uBACAjI,gBACAvF,eACAC,iBACAyF,iBAEA4K,sBACA9I,kBACA+I,0BACAC,qBACAC,mBACAc,oBACAI,oBACAhB,iBAEA5J,QAEA6K,sBAEApH,yBAEJ,GGpmCF,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASqH,IAAQ,CAAC,YAAY,qBAEzF,S","sources":["webpack://websap/./src/services/businessInfoService.js","webpack://websap/./src/views/SharedMenuView.vue","webpack://websap/./src/components/reservas/ReservaForm.vue","webpack://websap/./src/components/reservas/ReservaForm.vue?888d","webpack://websap/./src/views/SharedMenuView.vue?e8e7"],"sourcesContent":["// src/services/businessInfoService.js\n\nimport apiService from './apiService';\nimport { getBusinessInfo, saveBusinessInfo } from './storageService';\nimport eventBus from '../utils/eventBus';\n\n// Constantes para la sincronización\nconst SYNC_INTERVAL = 30000; // 30 segundos\nconst CACHE_DURATION = 300000; // 5 minutos\nlet syncIntervalId = null;\nlet lastSyncTimestamp = 0;\nlet lastFetchTimestamp = 0;\nlet businessInfoCache = null;\nlet isInitialized = false;\n\n/**\n * Sincroniza la información del negocio guardada en IndexedDB con el backend\n * @returns {Promise<Object>} - Resultado de la sincronización\n */\nexport async function syncBusinessInfoWithBackend() {\n  try {\n    // Obtener la información del negocio desde IndexedDB\n    const businessInfo = await getBusinessInfo();\n    \n    if (!businessInfo || Object.keys(businessInfo).length === 0) {\n      console.log('No hay información del negocio para sincronizar');\n      return {\n        success: false,\n        message: 'No hay información del negocio para sincronizar'\n      };\n    }\n    \n    console.log('Sincronizando información del negocio con el backend:', businessInfo);\n    \n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    // Obtener el ID del restaurante del usuario actual\n    const userResponse = await apiService.get('/auth/me');\n    if (!userResponse || !userResponse.success || !userResponse.user || !userResponse.user.restaurante_id) {\n      console.warn('No se pudo obtener el restaurante del usuario actual');\n      return {\n        success: false,\n        message: 'No se pudo obtener el restaurante del usuario actual'\n      };\n    }\n    \n    const restauranteId = userResponse.user.restaurante_id;\n    \n    // Preparar los datos para actualizar el restaurante\n    const restauranteData = {\n      nombre: businessInfo.name,\n      descripcion: businessInfo.description,\n      direccion: businessInfo.address,\n      telefono: businessInfo.contact,\n      logo: businessInfo.logo,\n      // Guardar la información de pago como un campo JSON\n      informacion_pago: JSON.stringify(businessInfo.paymentInfo || {})\n    };\n    \n    // Actualizar el restaurante en el backend\n    const response = await apiService.put(`/restaurantes/${restauranteId}`, restauranteData);\n    \n    if (response && response.success) {\n      console.log('Información del negocio sincronizada con éxito');\n      lastSyncTimestamp = Date.now();\n      \n      // Notificar a todos los componentes que la información ha sido sincronizada\n      eventBus.emit('business-info-updated', businessInfo);\n      \n      return {\n        success: true,\n        message: 'Información del negocio sincronizada con éxito',\n        timestamp: lastSyncTimestamp\n      };\n    } else {\n      console.warn('Error al sincronizar información del negocio:', response);\n      return {\n        success: false,\n        message: response.message || 'Error al sincronizar información del negocio'\n      };\n    }\n  } catch (error) {\n    console.error('Error al sincronizar información del negocio:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al sincronizar información del negocio'\n    };\n  }\n}\n\n/**\n * Obtiene la información del negocio desde el backend y la guarda en IndexedDB\n * @param {boolean} forceUpdate - Forzar la actualización aunque esté en caché\n * @returns {Promise<Object>} - Información del negocio\n */\nexport async function fetchBusinessInfoFromBackend(forceUpdate = false) {\n  try {\n    // Si tenemos información en caché y no ha pasado el tiempo de caché, usarla\n    const now = Date.now();\n    if (businessInfoCache && !forceUpdate && (now - lastFetchTimestamp) < CACHE_DURATION) {\n      console.log('Usando información de negocio en caché');\n      return businessInfoCache;\n    }\n    \n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    // Obtener el ID del restaurante del usuario actual\n    const userResponse = await apiService.get('/auth/me');\n    if (!userResponse || !userResponse.success || !userResponse.user || !userResponse.user.restaurante_id) {\n      console.warn('No se pudo obtener el restaurante del usuario actual');\n      throw new Error('No se pudo obtener el restaurante del usuario actual');\n    }\n    \n    const restauranteId = userResponse.user.restaurante_id;\n    \n    // Obtener el restaurante del backend\n    const response = await apiService.get(`/restaurantes/${restauranteId}`);\n    \n    if (response && response.success && response.restaurante) {\n      const restaurante = response.restaurante;\n      \n      // Convertir la información a formato de negocio\n      let paymentInfo = {};\n      try {\n        if (restaurante.informacion_pago) {\n          paymentInfo = JSON.parse(restaurante.informacion_pago);\n        }\n      } catch (e) {\n        console.warn('Error al parsear información de pago:', e);\n      }\n      \n      const businessInfo = {\n        name: restaurante.nombre,\n        description: restaurante.descripcion,\n        address: restaurante.direccion,\n        contact: restaurante.telefono,\n        logo: restaurante.logo,\n        paymentInfo\n      };\n      \n      // Guardar en IndexedDB\n      await saveBusinessInfo(businessInfo);\n      \n      // Actualizar caché y timestamp\n      businessInfoCache = businessInfo;\n      lastFetchTimestamp = now;\n      \n      // Notificar a todos los componentes que la información ha sido actualizada\n      eventBus.emit('business-info-updated', businessInfo);\n      \n      console.log('Información del negocio obtenida con éxito:', businessInfo);\n      return businessInfo;\n    } else {\n      console.warn('Error al obtener información del negocio:', response);\n      throw new Error(response?.message || 'Error al obtener información del negocio');\n    }\n  } catch (error) {\n    console.error('Error al obtener información del negocio desde el backend:', error);\n    \n    // Si hay un error, intentar obtener la información desde IndexedDB\n    try {\n      const businessInfo = await getBusinessInfo();\n      if (businessInfo) {\n        return businessInfo;\n      }\n    } catch (localError) {\n      console.error('Error al obtener información local:', localError);\n    }\n    \n    throw error;\n  }\n}\n\n/**\n * Actualiza la información del negocio en IndexedDB y la sincroniza con el backend\n * @param {Object} businessInfo - Nueva información del negocio\n * @returns {Promise<Object>} - Resultado de la actualización\n */\nexport async function updateBusinessInfo(businessInfo) {\n  try {\n    // Guardar en IndexedDB\n    await saveBusinessInfo(businessInfo);\n    \n    // Actualizar caché y timestamp\n    businessInfoCache = businessInfo;\n    lastFetchTimestamp = Date.now();\n    \n    // Notificar a todos los componentes que la información ha sido actualizada\n    eventBus.emit('business-info-updated', businessInfo);\n    \n    // Sincronizar con el backend\n    const syncResult = await syncBusinessInfoWithBackend();\n    \n    return {\n      success: true,\n      message: 'Información del negocio actualizada con éxito',\n      syncResult\n    };\n  } catch (error) {\n    console.error('Error al actualizar información del negocio:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al actualizar información del negocio'\n    };\n  }\n}\n\n/**\n * Verifica si hay cambios en la información del negocio\n * @returns {Promise<boolean>} - True si hay cambios, false si no\n */\nexport async function checkForBusinessInfoChanges() {\n  try {\n    // Obtener información actual desde IndexedDB\n    const localInfo = await getBusinessInfo();\n    \n    // Obtener información desde el backend\n    const backendInfo = await fetchBusinessInfoFromBackend(true);\n    \n    // Comparar ambas informaciones\n    const localString = JSON.stringify(localInfo);\n    const backendString = JSON.stringify(backendInfo);\n    \n    const hasChanges = localString !== backendString;\n    \n    if (hasChanges) {\n      console.log('Se detectaron cambios en la información del negocio');\n      \n      // Actualizar la información local con la del backend\n      await saveBusinessInfo(backendInfo);\n      \n      // Notificar a todos los componentes\n      eventBus.emit('business-info-updated', backendInfo);\n    }\n    \n    return hasChanges;\n  } catch (error) {\n    console.error('Error al verificar cambios en información del negocio:', error);\n    return false;\n  }\n}\n\n/**\n * Inicia la verificación periódica de cambios en la información del negocio\n * @param {boolean} disableSync - Si es true, la sincronización se desactiva (útil para vistas compartidas)\n */\nexport function startBusinessInfoSyncInterval(disableSync = false) {\n  // Si se solicita deshabilitar la sincronización (por ejemplo, en vistas compartidas), salir\n  if (disableSync) {\n    console.log('Sincronización de información del negocio desactivada (modo vista compartida)');\n    return;\n  }\n\n  if (syncIntervalId) {\n    clearInterval(syncIntervalId);\n  }\n  \n  // Inicializar con una primera sincronización\n  if (!isInitialized) {\n    fetchBusinessInfoFromBackend()\n      .catch(error => console.error('Error en sincronización inicial:', error));\n    isInitialized = true;\n  }\n  \n  syncIntervalId = setInterval(() => {\n    checkForBusinessInfoChanges()\n      .catch(error => console.error('Error en verificación periódica:', error));\n  }, SYNC_INTERVAL);\n  \n  console.log('Verificación periódica de información del negocio iniciada');\n}\n\n/**\n * Detiene la verificación periódica\n */\nexport function stopBusinessInfoSyncInterval() {\n  if (syncIntervalId) {\n    clearInterval(syncIntervalId);\n    syncIntervalId = null;\n    console.log('Verificación periódica de información del negocio detenida');\n  }\n}\n\n/**\n * Ejecuta la migración para añadir la columna informacion_pago a la tabla restaurantes\n * @returns {Promise<Object>} - Resultado de la migración\n */\nexport async function runAddInformacionPagoMigration() {\n  try {\n    // Asegurarse de que el token esté configurado en apiService\n    const token = localStorage.getItem('token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    const response = await apiService.get('/restaurantes/migrate/add-informacion-pago');\n    \n    if (response && response.success) {\n      console.log('Migración ejecutada con éxito:', response.message);\n      return {\n        success: true,\n        message: response.message || 'Migración ejecutada con éxito'\n      };\n    } else {\n      console.warn('Error al ejecutar migración:', response);\n      return {\n        success: false,\n        message: response.message || 'Error al ejecutar migración'\n      };\n    }\n  } catch (error) {\n    console.error('Error al ejecutar migración:', error);\n    return {\n      success: false,\n      message: error.message || 'Error al ejecutar migración'\n    };\n  }\n}\n\n/**\n * Limpia la caché y fuerza una nueva carga desde el backend\n */\nexport function invalidateBusinessInfoCache() {\n  businessInfoCache = null;\n  lastFetchTimestamp = 0;\n}\n\nexport default {\n  syncBusinessInfoWithBackend,\n  fetchBusinessInfoFromBackend,\n  updateBusinessInfo,\n  checkForBusinessInfoChanges,\n  startBusinessInfoSyncInterval,\n  stopBusinessInfoSyncInterval,\n  runAddInformacionPagoMigration,\n  invalidateBusinessInfoCache\n};\n","<template>\r\n  <div class=\"shared-menu-container\" :id=\"menuId\">\r\n    <div v-if=\"isLoading\" class=\"loading\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Cargando menú...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error\">\r\n      <p>{{ error }}</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"menu-content\">\r\n      <!-- Información del negocio -->\r\n      <div v-if=\"menuData?.businessInfo\" class=\"business-info\">\r\n        <img v-if=\"menuData.businessInfo.logo && isValidImage(menuData.businessInfo.logo)\" :src=\"fixImageFormat(menuData.businessInfo.logo)\" alt=\"Logo\" class=\"business-logo\">\r\n        <h1>{{ menuData.businessInfo.name }}</h1>\r\n        <p class=\"description\">{{ menuData.businessInfo.description }}</p>\r\n        <div class=\"contact-info\" v-if=\"menuData.businessInfo.contact || menuData.businessInfo.address\">\r\n          <p v-if=\"menuData.businessInfo.contact\"><strong>Contacto:</strong> {{ menuData.businessInfo.contact }}</p>\r\n          <p v-if=\"menuData.businessInfo.address\"><strong>Dirección:</strong> {{ menuData.businessInfo.address }}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Lista de productos -->\r\n      <div>\r\n        <!-- Platos regulares -->\r\n        <div class=\"menu-list\">\r\n          <h2>Nuestro Menú</h2>\r\n          <div class=\"menu-items\">\r\n            <div v-for=\"(item, index) in regularItems\" :key=\"index\" class=\"menu-item\">\r\n              <div class=\"item-image-container\">\r\n                <img v-if=\"item.image && isValidImage(item.image)\" :src=\"fixImageFormat(item.image)\" alt=\"Imagen del producto\" class=\"item-image\">\r\n                <img v-else src=\"https://via.placeholder.com/150?text=Sin+Imagen\" alt=\"Sin imagen disponible\" class=\"item-image\">\r\n              </div>\r\n              <div class=\"item-details\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p class=\"item-description\">{{ item.description }}</p>\r\n                <p class=\"item-price\">${{ formatPrice(item.price) }}</p>\r\n                <p class=\"includes-drink\" v-if=\"item.includesDrink\">Incluye refresco</p>\r\n                <button \r\n                  @click=\"addToCart(item)\" \r\n                  class=\"add-to-cart-btn\"\r\n                  :disabled=\"!item.realAvailability || item.realAvailability <= 0\"\r\n                  :class=\"{ 'disabled-btn': !item.realAvailability || item.realAvailability <= 0 }\"\r\n                >\r\n                  <span v-if=\"!item.realAvailability || item.realAvailability <= 0\" class=\"btn-icon\">❌</span>\r\n                  <span v-else class=\"btn-icon\">🛒</span>\r\n                  {{ !item.realAvailability || item.realAvailability <= 0 ? 'No disponible' : 'Añadir al pedido' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Platos especiales (solo se muestra si hay platos especiales) -->\r\n        <div v-if=\"specialItems.length > 0\" class=\"menu-list special-menu-list\">\r\n          <h2>Platos Especiales</h2>\r\n          <div class=\"menu-items\">\r\n            <div v-for=\"(item, index) in specialItems\" :key=\"index\" class=\"menu-item special-item\">\r\n              <div class=\"item-image-container\">\r\n                <img v-if=\"item.image && isValidImage(item.image)\" :src=\"fixImageFormat(item.image)\" alt=\"Imagen del producto\" class=\"item-image\">\r\n                <img v-else src=\"https://via.placeholder.com/150?text=Sin+Imagen\" alt=\"Sin imagen disponible\" class=\"item-image\">\r\n              </div>\r\n              <div class=\"item-details\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p class=\"item-description\">{{ item.description }}</p>\r\n                <p class=\"item-price\">${{ formatPrice(item.price) }}</p>\r\n                <p class=\"includes-drink\" v-if=\"item.includesDrink\">Incluye refresco</p>\r\n                <button \r\n                  @click=\"addToCart(item)\" \r\n                  class=\"add-to-cart-btn special-button\"\r\n                  :disabled=\"!item.realAvailability || item.realAvailability <= 0\"\r\n                  :class=\"{ 'disabled-btn': !item.realAvailability || item.realAvailability <= 0 }\"\r\n                >\r\n                  <span v-if=\"!item.realAvailability || item.realAvailability <= 0\" class=\"btn-icon\">❌</span>\r\n                  <span v-else class=\"btn-icon\">🛒</span>\r\n                  {{ !item.realAvailability || item.realAvailability <= 0 ? 'No disponible' : 'Añadir al pedido' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Sección de \"Tu Pedido\" - Siempre visible aunque vacía -->\r\n        <div class=\"order-section\" ref=\"orderSection\">\r\n          <h2>Tu Pedido</h2>\r\n          \r\n          <div v-if=\"cartItems.length === 0\" class=\"empty-cart\">\r\n            <p>Tu pedido está vacío</p>\r\n            <p class=\"empty-cart-message\">Añade productos del menú para comenzar tu pedido</p>\r\n          </div>\r\n          \r\n          <div v-else class=\"cart-items\">\r\n            <div v-for=\"(item, index) in cartItems\" :key=\"index\" class=\"cart-item\">\r\n              <div class=\"cart-item-details\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p>${{ formatPrice(item.price) }} x {{ item.quantity }}</p>\r\n              </div>\r\n              <div class=\"cart-item-actions\">\r\n                <button @click=\"decreaseQuantity(index)\" class=\"quantity-btn\">-</button>\r\n                <span class=\"quantity-display\">{{ item.quantity }}</span>\r\n                <button @click=\"increaseQuantity(index)\" class=\"quantity-btn\">+</button>\r\n                <button @click=\"removeFromCart(index)\" class=\"remove-btn\">\r\n                  <span class=\"btn-icon\">🗑️</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"cart-total\">\r\n              <h3>Total: ${{ formatPrice(cartTotal) }}</h3>\r\n              \r\n              <!-- Formulario de datos del cliente -->\r\n              <div class=\"customer-form\">\r\n                <h4>Datos del Cliente</h4>\r\n                <div class=\"form-row\">\r\n                  <input type=\"text\" v-model=\"customerInfo.name\" placeholder=\"Nombres completos\" class=\"form-input\">\r\n                </div>\r\n                <div class=\"form-row\">\r\n                  <input type=\"tel\" v-model=\"customerInfo.phone\" placeholder=\"Teléfono\" class=\"form-input\">\r\n                </div>\r\n                <div class=\"form-row\">\r\n                  <input type=\"email\" v-model=\"customerInfo.email\" placeholder=\"Correo electrónico\" class=\"form-input\">\r\n                </div>\r\n                <div class=\"form-row\">\r\n                  <input type=\"text\" v-model=\"customerInfo.address\" placeholder=\"Dirección de entrega\" class=\"form-input\">\r\n                </div>\r\n                \r\n                <!-- Lista horizontal de métodos de pago -->\r\n                <div class=\"payment-methods-selection\">\r\n                  <h4>Forma de Pago</h4>\r\n                  <div class=\"payment-options\">\r\n                    <label class=\"payment-option\">\r\n                      <input type=\"radio\" v-model=\"selectedPaymentMethod\" value=\"qr\" name=\"paymentMethod\">\r\n                      <span class=\"payment-option-text\">QR</span>\r\n                    </label>\r\n                    <label class=\"payment-option\">\r\n                      <input type=\"radio\" v-model=\"selectedPaymentMethod\" value=\"nequi\" name=\"paymentMethod\">\r\n                      <span class=\"payment-option-text\">Nequi</span>\r\n                    </label>\r\n                    <label class=\"payment-option\">\r\n                      <input type=\"radio\" v-model=\"selectedPaymentMethod\" value=\"cash\" name=\"paymentMethod\">\r\n                      <span class=\"payment-option-text\">Contra entrega</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                \r\n                <!-- Campo de mensaje adicional -->\r\n                <div class=\"form-row\">\r\n                  <textarea v-model=\"additionalMessage\" placeholder=\"Mensaje o instrucciones adicionales\" class=\"form-textarea\"></textarea>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"order-actions\">\r\n                <button @click=\"completeOrder\" class=\"complete-order-btn\">\r\n                  <span class=\"btn-icon\">📱</span> Enviar por WhatsApp\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Botón flotante para ver pedido (visible cuando hay items y se hace scroll) -->\r\n        <div v-if=\"cartItems.length > 0\" class=\"floating-cart-button\" @click=\"scrollToOrder\">\r\n          <span class=\"cart-items-count\">{{ totalItems }}</span>\r\n          <span>Ver Pedido</span>\r\n        </div>\r\n        \r\n        <!-- Nueva sección: Forma de Pago -->\r\n        <div v-if=\"hasPaymentInfo\" class=\"payment-section\">\r\n          <h2>Forma de Pago</h2>\r\n          <div class=\"payment-methods\">\r\n            <div v-if=\"menuData?.businessInfo?.paymentInfo?.qrImage\" class=\"payment-method\">\r\n              <h3>{{ menuData?.businessInfo?.paymentInfo?.qrTitle || 'Código QR de Pago' }}</h3>\r\n              <img \r\n                v-if=\"menuData?.businessInfo?.paymentInfo?.qrImage && isValidImage(menuData?.businessInfo?.paymentInfo?.qrImage)\" \r\n                :src=\"fixImageFormat(menuData?.businessInfo?.paymentInfo?.qrImage)\" \r\n                alt=\"QR de Pago\" \r\n                class=\"payment-image\"\r\n              >\r\n            </div>\r\n            \r\n            <div v-if=\"menuData?.businessInfo?.paymentInfo?.nequiNumber || menuData?.businessInfo?.paymentInfo?.nequiImage\" class=\"payment-method\">\r\n              <h3>Pago con Nequi</h3>\r\n              <img \r\n                v-if=\"menuData?.businessInfo?.paymentInfo?.nequiImage && isValidImage(menuData?.businessInfo?.paymentInfo?.nequiImage)\" \r\n                :src=\"fixImageFormat(menuData?.businessInfo?.paymentInfo?.nequiImage)\" \r\n                alt=\"Nequi\" \r\n                class=\"payment-image\"\r\n              >\r\n              <p v-if=\"menuData?.businessInfo?.paymentInfo?.nequiNumber\" class=\"payment-detail\">\r\n                <strong>Número:</strong> {{ menuData?.businessInfo?.paymentInfo?.nequiNumber }}\r\n              </p>\r\n            </div>\r\n            \r\n            <div v-if=\"menuData?.businessInfo?.paymentInfo?.bankInfo\" class=\"payment-method\">\r\n              <h3>Pago Bancario</h3>\r\n              <p class=\"payment-detail\">\r\n                <strong>Información Bancaria:</strong> {{ menuData?.businessInfo?.paymentInfo?.bankInfo }}\r\n              </p>\r\n            </div>\r\n            \r\n            <div v-if=\"menuData?.businessInfo?.paymentInfo?.otherPaymentMethods\" class=\"payment-method\">\r\n              <h3>Otras Formas de Pago</h3>\r\n              <p class=\"payment-detail\">\r\n                <strong>Métodos Adicionales:</strong> {{ menuData?.businessInfo?.paymentInfo?.otherPaymentMethods }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Añadir el componente ReservaForm en una sección visible -->\r\n        <div class=\"reserva-section container mt-5\">\r\n          <h3 class=\"text-center mb-4\">¿Quieres hacer una reserva?</h3>\r\n          <ReservaForm />\r\n        </div>\r\n        \r\n        <!-- Sistema de notificaciones toast -->\r\n        <div v-if=\"toast.visible\" \r\n             class=\"toast-notification\" \r\n             :class=\"toast.type\">\r\n          {{ toast.message }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, reactive, onUnmounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { getSharedMenu } from '../services/menuService';\r\nimport { saveReservation } from '../services/reservaService'; // Importamos el servicio de reservas\r\nimport { getMenuItems, updateItemAvailability } from '../services/storageService'; // Importar funciones necesarias\r\nimport ReservaForm from '../components/reservas/ReservaForm.vue';\r\nimport eventBus from '../utils/eventBus';\r\nimport { \r\n  fetchBusinessInfoFromBackend, \r\n  startBusinessInfoSyncInterval, \r\n  stopBusinessInfoSyncInterval \r\n} from '../services/businessInfoService';\r\n\r\nexport default {\r\n  name: 'SharedMenuView',\r\n  components: {\r\n    ReservaForm,\r\n  },\r\n  props: {\r\n    // Añade id como prop si lo necesitas\r\n    id: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  setup(props) {\r\n    const route = useRoute();\r\n    const menuId = computed(() => props.id || route.params.id);\r\n    const menuData = ref({\r\n      items: [],\r\n      businessInfo: {\r\n        name: 'Restaurante WebSAP',\r\n        description: 'Deliciosa comida para todos los gustos',\r\n        contact: 'info@websap.com',\r\n        address: 'Calle Principal #123',\r\n        logo: null,\r\n        paymentInfo: {\r\n          qrImage: null,\r\n          qrTitle: 'Escanea para pagar',\r\n          nequiNumber: null,\r\n          nequiImage: null,\r\n          bankInfo: 'Banco XYZ - Cuenta 123456789',\r\n          otherPaymentMethods: 'Aceptamos efectivo y tarjetas'\r\n        }\r\n      }\r\n    });\r\n    const isLoading = ref(true);\r\n    const error = ref(null);\r\n    const cartItems = ref([]);\r\n    const orderRef = ref(null);\r\n    const isProcessingOrder = ref(false);\r\n    const lastBusinessInfoUpdate = ref(null);\r\n    \r\n    console.log(\"SharedMenuView montado, ID del menú:\", route.params.id);\r\n\r\n    // Sistema de notificaciones toast\r\n    const toast = ref({\r\n      visible: false,\r\n      message: '',\r\n      type: 'success', // 'success', 'warning', 'error'\r\n      timeoutId: null\r\n    });\r\n\r\n    // Cargar menú cuando el componente se monte\r\n    onMounted(() => {\r\n      loadMenu();\r\n      \r\n      // Suscribirse al evento de actualización de información del negocio\r\n      eventBus.on('business-info-updated', handleBusinessInfoUpdate);\r\n      \r\n      // Iniciar la sincronización periódica con parámetro true para desactivarla en vista compartida\r\n      startBusinessInfoSyncInterval(true);\r\n    });\r\n    \r\n    // Al desmontar el componente, cancelar suscripciones y detener intervalos\r\n    onUnmounted(() => {\r\n      eventBus.off('business-info-updated', handleBusinessInfoUpdate);\r\n      stopBusinessInfoSyncInterval();\r\n      \r\n      // Limpiar timeout del toast si existe\r\n      if (toast.value.timeoutId) {\r\n        clearTimeout(toast.value.timeoutId);\r\n      }\r\n    });\r\n    \r\n    // Manejar la actualización de información del negocio\r\n    const handleBusinessInfoUpdate = (updatedInfo) => {\r\n      console.log('Nueva información del negocio recibida en SharedMenuView:', updatedInfo);\r\n      \r\n      if (!updatedInfo) return;\r\n      \r\n      // Actualizar la información del negocio en menuData\r\n      menuData.value.businessInfo = {\r\n        ...updatedInfo\r\n      };\r\n      \r\n      lastBusinessInfoUpdate.value = Date.now();\r\n      \r\n      // Mostrar notificación sutil\r\n      showToast('Información del negocio actualizada', 'info');\r\n    };\r\n\r\n    // Cargar el menú desde la API\r\n    async function loadMenu() {\r\n      try {\r\n        isLoading.value = true;\r\n        error.value = null; // Resetear error al inicio\r\n        console.log(\"Cargando menú con ID:\", route.params.id);\r\n        \r\n        if (!route.params.id) {\r\n          error.value = 'ID de menú no especificado';\r\n          isLoading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Intenta cargar desde localStorage primero (por si hay un carrito guardado)\r\n        const savedCart = localStorage.getItem(`cart_${route.params.id}`);\r\n        if (savedCart) {\r\n          try {\r\n            cartItems.value = JSON.parse(savedCart);\r\n            console.log(\"Carrito recuperado de localStorage:\", cartItems.value);\r\n          } catch (e) {\r\n            console.error(\"Error al parsear carrito de localStorage:\", e);\r\n          }\r\n        }\r\n        \r\n        try {\r\n          // Cargar el menú y los items\r\n          const data = await getSharedMenu(route.params.id);\r\n          \r\n          if (data && data.items) {\r\n            // Asignar los items al menuData\r\n            menuData.value.items = data.items;\r\n            \r\n            // Intentar cargar la información del negocio desde el backend\r\n            try {\r\n              const businessInfo = await fetchBusinessInfoFromBackend();\r\n              if (businessInfo) {\r\n                menuData.value.businessInfo = businessInfo;\r\n                lastBusinessInfoUpdate.value = Date.now();\r\n                console.log(\"Información del negocio cargada del backend:\", businessInfo);\r\n              }\r\n            } catch (businessInfoError) {\r\n              console.warn(\"No se pudo cargar información del negocio desde backend:\", businessInfoError);\r\n              // Mantener la información que vino con el menú si existe\r\n              if (data.businessInfo) {\r\n                menuData.value.businessInfo = data.businessInfo;\r\n              }\r\n            }\r\n            \r\n            console.log(\"Menú cargado con éxito:\", menuData.value);\r\n            \r\n            // Inicializar disponibilidad para cada ítem\r\n            menuData.value.items.forEach(item => {\r\n              // Si la disponibilidad es explícitamente 0, mantenerla así\r\n              // Si es undefined o null, usar 0 en lugar de un valor predeterminado de 10\r\n              item.availableQuantity = item.availableQuantity !== undefined ? \r\n                Number(item.availableQuantity) : 0;\r\n              item.realAvailability = item.availableQuantity;\r\n            });\r\n            \r\n            // Actualizar disponibilidad real considerando el carrito\r\n            updateAvailabilityInMenu();\r\n            \r\n            // Guardar en localStorage como respaldo\r\n            try {\r\n              localStorage.setItem(`menu_${route.params.id}`, JSON.stringify(menuData.value));\r\n            } catch (saveError) {\r\n              console.warn('No se pudo guardar el menú en localStorage:', saveError);\r\n            }\r\n          } else {\r\n            throw new Error('Datos de menú no válidos');\r\n          }\r\n        } catch (apiError) {\r\n          console.error(\"Error al cargar el menú desde la API:\", apiError);\r\n          \r\n          // Intentar recuperar desde localStorage como respaldo\r\n          try {\r\n            const cachedMenu = localStorage.getItem(`menu_${route.params.id}`);\r\n            if (cachedMenu) {\r\n              menuData.value = JSON.parse(cachedMenu);\r\n              console.log(\"Menú recuperado desde localStorage:\", menuData.value);\r\n              \r\n              if (menuData.value && menuData.value.items) {\r\n                // Inicializar disponibilidad para cada ítem\r\n                menuData.value.items.forEach(item => {\r\n                  item.availableQuantity = item.availableQuantity !== undefined ? \r\n                    Number(item.availableQuantity) : 0;\r\n                  item.realAvailability = item.availableQuantity;\r\n                });\r\n                \r\n                // Actualizar disponibilidad real considerando el carrito\r\n                updateAvailabilityInMenu();\r\n                \r\n                // Mostrar notificación de que se está usando datos en caché\r\n                showToast('Usando datos almacenados localmente. Algunas funciones pueden estar limitadas.', 'warning');\r\n              } else {\r\n                throw new Error('Datos de menú en caché no válidos');\r\n              }\r\n            } else {\r\n              throw new Error('No se encontró el menú en caché');\r\n            }\r\n          } catch (cacheError) {\r\n            console.error(\"Error al recuperar menú desde caché:\", cacheError);\r\n            error.value = 'No se encontró el menú solicitado. Por favor, verifica el enlace o intenta más tarde.';\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error general al cargar el menú:\", e);\r\n        error.value = e.message || 'Error al cargar el menú';\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    }\r\n\r\n    // Verificar si hay información de pago\r\n    const hasPaymentInfo = computed(() => {\r\n      const paymentInfo = menuData.value?.businessInfo?.paymentInfo;\r\n      \r\n      if (!paymentInfo) return false;\r\n      \r\n      // Verificar si hay al menos un campo de información de pago con datos\r\n      return !!(\r\n        (paymentInfo.qrImage && isValidImage(paymentInfo.qrImage)) || \r\n        paymentInfo.qrTitle || \r\n        paymentInfo.nequiNumber || \r\n        (paymentInfo.nequiImage && isValidImage(paymentInfo.nequiImage)) || \r\n        paymentInfo.bankInfo || \r\n        paymentInfo.otherPaymentMethods\r\n      );\r\n    });\r\n    \r\n    // Contador total de items\r\n    const totalItems = computed(() => {\r\n      return cartItems.value.reduce((total, item) => total + item.quantity, 0);\r\n    });\r\n\r\n    // Total del carrito\r\n    const cartTotal = computed(() => {\r\n      return cartItems.value.reduce((total, item) => {\r\n        return total + (item.price * item.quantity);\r\n      }, 0);\r\n    });\r\n\r\n    // Formatear precio\r\n    function formatPrice(price) {\r\n      if (isNaN(Number(price))) return '0,00';\r\n      \r\n      // Convertir a número y formatear con 2 decimales fijos\r\n      const numero = Number(price).toFixed(2);\r\n      \r\n      // Separar parte entera y decimal\r\n      const [parteEntera, parteDecimal] = numero.split('.');\r\n      \r\n      // Formatear parte entera con puntos como separadores de miles\r\n      const parteEnteraFormateada = parteEntera.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n      \r\n      // Unir con coma como separador decimal\r\n      return `${parteEnteraFormateada},${parteDecimal}`;\r\n    }\r\n\r\n    // Agregar al carrito con verificación de disponibilidad\r\n    async function addToCart(item) {\r\n      // Verificación directa antes de hacer la comprobación completa\r\n      if (Number(item.availableQuantity) <= 0) {\r\n        showToast(`Lo sentimos, \"${item.name}\" no está disponible actualmente. Intente más tarde por favor.`, 'error');\r\n        return;\r\n      }\r\n      \r\n      const isAvailable = await checkAvailability(item);\r\n      if (!isAvailable) return;\r\n      \r\n      const existingItem = cartItems.value.find(i => {\r\n        // Asegurar que ambos items tienen ID y compararlos, o comparar por nombre si no hay ID\r\n        if (item.id && i.id) {\r\n          return i.id === item.id;\r\n        }\r\n        return i.name === item.name;\r\n      });\r\n      \r\n      if (existingItem) {\r\n        existingItem.quantity++;\r\n      } else {\r\n        cartItems.value.push({\r\n          id: item.id || Date.now().toString(),\r\n          name: item.name,\r\n          price: item.price,\r\n          quantity: 1,\r\n          availableQuantity: item.availableQuantity || 0 // Usar 0 como valor por defecto\r\n        });\r\n      }\r\n      \r\n      // Guardar carrito en localStorage\r\n      saveCartToLocalStorage();\r\n      \r\n      // Actualizar la disponibilidad en tiempo real\r\n      updateAvailabilityInMenu();\r\n      \r\n      // Mostrar notificación de éxito\r\n      showToast(`${item.name} añadido al carrito`, 'success');\r\n    }\r\n    \r\n    // Mostrar notificaciones toast\r\n    function showToast(message, type = 'success', duration = 5000) { // Aumentar a 5 segundos\r\n      console.log(`[Toast] Mostrando notificación: ${message} (${type})`);\r\n      \r\n      // Si ya hay un toast visible, limpiamos su timeout\r\n      if (toast.value.timeoutId) {\r\n        clearTimeout(toast.value.timeoutId);\r\n      }\r\n      \r\n      // Configurar el nuevo toast\r\n      toast.value.message = message;\r\n      toast.value.type = type;\r\n      toast.value.visible = true;\r\n      \r\n      // Debug: verificar que el estado del toast cambió\r\n      console.log(`[Toast] Estado: visible=${toast.value.visible}, message=${toast.value.message}`);\r\n      \r\n      // Configurar timeout para ocultar después de la duración\r\n      toast.value.timeoutId = setTimeout(() => {\r\n        console.log(`[Toast] Ocultando notificación después de ${duration}ms`);\r\n        toast.value.visible = false;\r\n      }, duration);\r\n    }\r\n\r\n    // Guardar carrito en localStorage\r\n    function saveCartToLocalStorage() {\r\n      try {\r\n        localStorage.setItem(`cart_${route.params.id}`, JSON.stringify(cartItems.value));\r\n      } catch (e) {\r\n        console.error(\"Error al guardar carrito en localStorage:\", e);\r\n      }\r\n    }\r\n\r\n    // Incrementar cantidad\r\n    function increaseQuantity(index) {\r\n      const item = cartItems.value[index];\r\n      \r\n      // Buscar el ítem en el menú\r\n      const menuItem = menuData.value.items?.find(i => i.id === item.id);\r\n      if (menuItem) {\r\n        // Verificar disponibilidad\r\n        const availableQuantity = menuItem.availableQuantity || 0;\r\n        if (item.quantity >= availableQuantity) {\r\n          showToast(`No hay más unidades disponibles de \"${item.name}\"`, 'warning');\r\n          return;\r\n        }\r\n      }\r\n      \r\n      // Incrementar cantidad\r\n      item.quantity++;\r\n      \r\n      // Guardar carrito y actualizar disponibilidad\r\n      saveCartToLocalStorage();\r\n      updateAvailabilityInMenu();\r\n    }\r\n\r\n    // Reemplazar la función decreaseQuantity (líneas 409-416)\r\n    function decreaseQuantity(index) {\r\n      if (cartItems.value[index].quantity > 1) {\r\n        cartItems.value[index].quantity--;\r\n        saveCartToLocalStorage();\r\n        updateAvailabilityInMenu(); // Actualizar disponibilidad\r\n      } else {\r\n        removeFromCart(index);\r\n      }\r\n    }\r\n\r\n    // Reemplazar la función removeFromCart (líneas 419-422)\r\n    function removeFromCart(index) {\r\n      cartItems.value.splice(index, 1);\r\n      saveCartToLocalStorage();\r\n      updateAvailabilityInMenu(); // Actualizar disponibilidad\r\n    }\r\n    \r\n    // Completar pedido con actualización de inventario\r\n    async function completeOrder() {\r\n      try {\r\n        // Validaciones básicas\r\n        if (cartItems.value.length === 0) {\r\n          showToast('No hay ítems en el pedido', 'error');\r\n          return;\r\n        }\r\n        \r\n        if (!customerInfo.value.name || !customerInfo.value.phone) {\r\n          showToast('Por favor complete su nombre y teléfono', 'error');\r\n          return;\r\n        }\r\n      \r\n        // Indicar que está procesando\r\n        isProcessingOrder.value = true;\r\n        \r\n        // Actualizar inventario - Usar el carrito correcto\r\n        await updateInventory();\r\n        \r\n        // Compartir en WhatsApp\r\n        openWhatsAppShare();\r\n        \r\n        showToast('¡Pedido completado! Gracias por tu compra.', 'success');\r\n        \r\n        // Limpiar carrito y datos del cliente después de completar\r\n        setTimeout(() => {\r\n          // Limpiar carrito\r\n          cartItems.value = [];\r\n          \r\n          // Limpiar localStorage\r\n          localStorage.removeItem(`cart_${route.params.id}`);\r\n          \r\n          // Limpiar datos del cliente\r\n          customerInfo.value = {\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            address: ''\r\n          };\r\n          additionalMessage.value = '';\r\n          isProcessingOrder.value = false;\r\n        }, 2000);\r\n      } catch (error) {\r\n        console.error('Error al completar el pedido:', error);\r\n        showToast('Error al procesar el pedido', 'error');\r\n        isProcessingOrder.value = false;\r\n      }\r\n    }\r\n    \r\n    // Compartir pedido por WhatsApp sin actualizar inventario\r\nfunction shareOrderByWhatsApp() {\r\n  // Validaciones básicas\r\n  if (cartItems.value.length === 0) {\r\n    showToast('No hay ítems en el pedido', 'error');\r\n    return;\r\n  }\r\n\r\n  if (!customerInfo.value.name || !customerInfo.value.phone) {\r\n    showToast('Por favor complete su nombre y teléfono', 'error');\r\n    return;\r\n  }\r\n\r\n  // Compartir directamente en WhatsApp sin actualizar inventario\r\n  openWhatsAppShare();\r\n\r\n  showToast('Pedido compartido por WhatsApp', 'success');\r\n}\r\n\r\nfunction openWhatsAppShare() {\r\n  // Construir mensaje de pedido para WhatsApp\r\n  let whatsappMessage = `🛒 *Pedido de ${customerInfo.value.name}*\\n\\n`;\r\n  whatsappMessage += `📦 *Productos:*\\n`;\r\n\r\n  cartItems.value.forEach(item => {\r\n    const subtotal = (item.price * item.quantity).toFixed(2);\r\n    whatsappMessage += `🍽️ ${item.quantity}x ${item.name} = $${formatPrice(subtotal)}\\n`;\r\n  });\r\n\r\n  whatsappMessage += `\\n💵 *Total:* $${formatPrice(cartTotal.value)}\\n`;\r\n\r\n  if (customerInfo.value.phone) {\r\n    whatsappMessage += `📞 *Teléfono:* ${customerInfo.value.phone}\\n`;\r\n  }\r\n\r\n  if (customerInfo.value.email) {\r\n    whatsappMessage += `✉️ *Email:* ${customerInfo.value.email}\\n`;\r\n  }\r\n\r\n  if (customerInfo.value.address) {\r\n    whatsappMessage += `📍 *Dirección:* ${customerInfo.value.address}\\n`;\r\n  }\r\n\r\n  if (additionalMessage.value) {\r\n    whatsappMessage += `📝 *Notas adicionales:*\\n${additionalMessage.value}\\n`;\r\n  }\r\n\r\n  // Añadir método de pago seleccionado\r\n  const formaPago = selectedPaymentMethod.value === 'qr' ? 'Código QR' :\r\n                    selectedPaymentMethod.value === 'nequi' ? 'Nequi' :\r\n                    'Contra entrega';\r\n\r\n  whatsappMessage += `\\n💳 *Forma de pago:* ${formaPago}`;\r\n\r\n  // Codificar y generar la URL de WhatsApp\r\n  const encodedMessage = encodeURIComponent(whatsappMessage);\r\n  const whatsappUrl = `https://api.whatsapp.com/send?text=${encodedMessage}`;\r\n\r\n  // Abrir WhatsApp en una nueva ventana\r\n  window.open(whatsappUrl, '_blank');\r\n}\r\n\r\n    // Desplazarse a la sección del pedido\r\n    function scrollToOrder() {\r\n      const orderSection = document.querySelector('.order-section');\r\n      if (orderSection) {\r\n        orderSection.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    }\r\n\r\n    // Verificar disponibilidad de inventario\r\n    async function checkAvailability(item) {\r\n      // Obtener la disponibilidad base (valor original del inventario)\r\n      // Importante: asegurarse que sea un número\r\n      const baseAvailability = Number(item.availableQuantity) || 0;\r\n      \r\n      // Verificación directa: si no hay stock, mostrar mensaje de error\r\n      if (baseAvailability <= 0) {\r\n        showToast(`Lo sentimos, \"${item.name}\" no está disponible actualmente. Intente más tarde por favor.`, 'error');\r\n        return false;\r\n      }\r\n      \r\n      // Obtener la cantidad actual en el carrito\r\n      const cartItem = cartItems.value.find(i => i.id === item.id);\r\n      const cartQuantity = cartItem ? cartItem.quantity : 0;\r\n      \r\n      // Calcular disponibilidad real\r\n      const realAvailability = baseAvailability - cartQuantity;\r\n      \r\n      // Verificar la disponibilidad considerando lo que ya está en el carrito\r\n      if (realAvailability <= 0) {\r\n        showToast(`No hay más unidades disponibles de \"${item.name}\"`, 'warning');\r\n        return false;\r\n      } else if (realAvailability <= 5) {\r\n        showToast(`¡Solo quedan ${realAvailability} unidades de \"${item.name}\"!`, 'warning');\r\n      }\r\n      \r\n      return true;\r\n    }\r\n\r\n    // Actualizar inventario al completar pedido\r\n    async function updateInventory() {\r\n      try {\r\n        // Validaciones iniciales\r\n        if (!cartItems.value || cartItems.value.length === 0) {\r\n          console.warn('Intentando actualizar inventario con carrito vacío');\r\n          return;\r\n        }\r\n        \r\n        console.log(`Iniciando actualización de inventario para ${cartItems.value.length} productos...`);\r\n        \r\n        // Obtener los elementos actuales del menú para actualizar cantidades\r\n        const currentMenu = await getMenuItems();\r\n        if (!currentMenu || !Array.isArray(currentMenu)) {\r\n          console.error('No se pudo obtener el menú actual');\r\n          return false;\r\n        }\r\n        \r\n        // Crear una copia profunda del carrito para procesar (evitar modificaciones durante el procesamiento)\r\n        const itemsToProcess = JSON.parse(JSON.stringify(cartItems.value));\r\n        const updateResults = [];\r\n        let hasErrors = false;\r\n        \r\n        // Importar función para guardar elementos vendidos\r\n        const { getSoldItems, saveSoldItems } = await import('../services/storageService');\r\n        \r\n        // Obtener la lista actual de elementos vendidos\r\n        let soldItemsList = [];\r\n        try {\r\n          soldItemsList = await getSoldItems() || [];\r\n          if (!Array.isArray(soldItemsList)) {\r\n            soldItemsList = [];\r\n          }\r\n          console.log('Lista de elementos vendidos obtenida:', soldItemsList.length);\r\n        } catch (soldItemsError) {\r\n          console.warn('Error al obtener elementos vendidos:', soldItemsError);\r\n          soldItemsList = [];\r\n        }\r\n        \r\n        // Procesar cada elemento del carrito de forma secuencial para evitar condiciones de carrera\r\n        for (let i = 0; i < itemsToProcess.length; i++) {\r\n          const cartItem = itemsToProcess[i];\r\n          console.log(`Procesando item ${i+1}/${itemsToProcess.length}: ${cartItem.name} (ID: ${cartItem.id})`);\r\n          \r\n          try {\r\n            // Buscar el ítem correspondiente en el menú actual\r\n            const menuItem = currentMenu.find(item => item.id === cartItem.id);\r\n            \r\n            if (!menuItem) {\r\n              console.warn(`Elemento no encontrado en el menú: ${cartItem.name} (ID: ${cartItem.id})`);\r\n              updateResults.push({\r\n                name: cartItem.name,\r\n                success: false,\r\n                error: 'Elemento no encontrado en el menú'\r\n              });\r\n              continue;\r\n            }\r\n            \r\n            // Garantizar que estamos trabajando con números enteros válidos\r\n            const currentQuantity = parseInt(Number(menuItem.availableQuantity || 0), 10);\r\n            const soldQuantity = parseInt(Number(cartItem.quantity || 0), 10);\r\n            \r\n            if (isNaN(currentQuantity) || isNaN(soldQuantity)) {\r\n              const error = `Cantidades inválidas para ${cartItem.name}: disponible=${menuItem.availableQuantity}, vendido=${cartItem.quantity}`;\r\n              console.error(error);\r\n              updateResults.push({\r\n                name: cartItem.name,\r\n                success: false,\r\n                error: error\r\n              });\r\n              hasErrors = true;\r\n              continue;\r\n            }\r\n            \r\n            // Calcular nueva cantidad exacta como entero\r\n            const newQuantity = Math.max(0, currentQuantity - soldQuantity);\r\n            \r\n            console.log(`Actualizando ${cartItem.name}: ${currentQuantity} - ${soldQuantity} = ${newQuantity} (currentQuantity tipo: ${typeof currentQuantity}, soldQuantity tipo: ${typeof soldQuantity})`);\r\n            \r\n            // Actualizar disponibilidad usando la función mejorada - forzar como número entero\r\n            const updateSuccess = await updateItemAvailability(menuItem.id, newQuantity);\r\n            \r\n            // Registrar resultado detallado\r\n            updateResults.push({\r\n              name: cartItem.name,\r\n              oldQuantity: currentQuantity,\r\n              soldQuantity: soldQuantity,\r\n              newQuantity: newQuantity,\r\n              success: updateSuccess,\r\n              error: updateSuccess ? null : 'Error al actualizar disponibilidad'\r\n            });\r\n            \r\n            if (!updateSuccess) {\r\n              hasErrors = true;\r\n            } else {\r\n              // Registrar en la lista de platos vendidos si la actualización fue exitosa\r\n              const currentDate = new Date().toISOString();\r\n              const existingSoldItem = soldItemsList.find(item => item.name === cartItem.name);\r\n              \r\n              if (existingSoldItem) {\r\n                existingSoldItem.quantity += soldQuantity;\r\n                existingSoldItem.date = currentDate;\r\n              } else {\r\n                soldItemsList.push({\r\n                  name: cartItem.name,\r\n                  quantity: soldQuantity,\r\n                  price: cartItem.price,\r\n                  includesDrink: menuItem.includesDrink || false,\r\n                  date: currentDate\r\n                });\r\n              }\r\n              console.log(`Elemento registrado en lista de vendidos: ${cartItem.name} x${soldQuantity}`);\r\n            }\r\n          } catch (itemError) {\r\n            console.error(`Error procesando ${cartItem.name}:`, itemError);\r\n            updateResults.push({\r\n              name: cartItem.name,\r\n              success: false,\r\n              error: itemError.message || 'Error desconocido'\r\n            });\r\n            hasErrors = true;\r\n          }\r\n        }\r\n        \r\n        // Guardar la lista actualizada de elementos vendidos\r\n        try {\r\n          await saveSoldItems(soldItemsList);\r\n          console.log(`Lista de elementos vendidos actualizada con ${soldItemsList.length} elementos`);\r\n        } catch (saveError) {\r\n          console.error('Error al guardar elementos vendidos:', saveError);\r\n        }\r\n        \r\n        // Mostrar resumen de la operación\r\n        const successCount = updateResults.filter(r => r.success).length;\r\n        console.log(`Actualización de inventario completada. Éxitos: ${successCount}/${itemsToProcess.length}`);\r\n        \r\n        // Registrar detalles completos de la actualización\r\n        console.log('Detalles de actualización de inventario:', updateResults);\r\n        \r\n        if (hasErrors) {\r\n          const failedItems = updateResults.filter(r => !r.success).map(r => r.name).join(', ');\r\n          console.warn(`Algunos productos no se pudieron actualizar: ${failedItems}`);\r\n        }\r\n        \r\n        return successCount > 0;\r\n      } catch (error) {\r\n        console.error('Error general al actualizar inventario:', error);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Añadir después de la función checkAvailability (línea 585)\r\n    // Función para actualizar la disponibilidad en tiempo real\r\n    function updateAvailabilityInMenu() {\r\n      if (!menuData.value?.items) return;\r\n      \r\n      // Actualizar la disponibilidad de todos los ítems\r\n      menuData.value.items.forEach(menuItem => {\r\n        // Encontrar si este ítem está en el carrito\r\n        const cartItem = cartItems.value.find(i => i.id === menuItem.id);\r\n        const cartQuantity = cartItem ? cartItem.quantity : 0;\r\n        \r\n        // Asegurarse de que availableQuantity sea un número exacto, no undefined o null\r\n        const baseAvailability = Number(menuItem.availableQuantity) || 0;\r\n        \r\n        // Calcular disponibilidad real\r\n        menuItem.realAvailability = baseAvailability - cartQuantity;\r\n        \r\n        console.log(`Disponibilidad actualizada para ${menuItem.name}: ${menuItem.realAvailability} unidades (base: ${baseAvailability}, carrito: ${cartQuantity})`);\r\n      });\r\n    }\r\n\r\n    // Verificar si una cadena de imagen es válida\r\n    function isValidImage(imageString) {\r\n      if (!imageString) return false;\r\n      \r\n      // Verificar si es una URL\r\n      if (imageString.startsWith('http://') || imageString.startsWith('https://')) {\r\n        return true;\r\n      }\r\n      \r\n      // Verificar si es una imagen en base64\r\n      if (imageString.startsWith('data:image/')) {\r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    }\r\n    \r\n    // Corregir formato de imagen si es necesario\r\n    function fixImageFormat(imageString) {\r\n      if (!imageString) return '';\r\n      \r\n      // Si ya es una URL o base64 válido, devolverlo tal cual\r\n      if (isValidImage(imageString)) {\r\n        return imageString;\r\n      }\r\n      \r\n      // Intentar convertir a base64 si no tiene el prefijo correcto\r\n      if (imageString.includes('/9j/') && !imageString.startsWith('data:image/')) {\r\n        return `data:image/jpeg;base64,${imageString}`;\r\n      }\r\n      \r\n      // Si no se puede arreglar, devolver una imagen por defecto\r\n      return '';\r\n    }\r\n\r\n    // Datos del cliente\r\n    const customerInfo = ref({\r\n      name: '',\r\n      phone: '',\r\n      email: '',\r\n      address: ''\r\n    });\r\n\r\n    // Método de pago seleccionado\r\n    const selectedPaymentMethod = ref('cash'); // Por defecto contra entrega\r\n\r\n    // Mensaje adicional\r\n    const additionalMessage = ref('');\r\n\r\n    // Filtrar items regulares y especiales\r\n    const regularItems = computed(() => {\r\n      if (!menuData.value || !menuData.value.items) return [];\r\n      const filtered = menuData.value.items.filter(item => !item.isSpecial);\r\n      console.log('Platos regulares:', filtered.length, filtered.map(i => i.name));\r\n      return filtered;\r\n    });\r\n\r\n    const specialItems = computed(() => {\r\n      if (!menuData.value || !menuData.value.items) return [];\r\n      const filtered = menuData.value.items.filter(item => item.isSpecial === true);\r\n      console.log('Platos especiales:', filtered.length, filtered.map(i => i.name));\r\n      return filtered;\r\n    });\r\n\r\n    // Estado para el formulario de reserva\r\n    const showReservationForm = ref(false);\r\n    const isProcessingReservation = ref(false);\r\n    const reservationSuccess = ref(false);\r\n    const reservationError = ref(null);\r\n    \r\n    const reservationData = ref({\r\n      fullName: '',\r\n      mobilePhone: '',\r\n      landlinePhone: '',\r\n      address: '',\r\n      email: '',\r\n      orderDate: getCurrentDate(), // Set the initial value here\r\n      reservationDate: '',\r\n      reservationTime: '',\r\n      peopleCount: 1,\r\n      additionalNotes: ''\r\n    });\r\n    \r\n    // Función para obtener la fecha actual en formato YYYY-MM-DD\r\n    function getCurrentDate() {\r\n      const today = new Date();\r\n      const year = today.getFullYear();\r\n      const month = String(today.getMonth() + 1).padStart(2, '0');\r\n      const day = String(today.getDate()).padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    }\r\n    \r\n    // Función para enviar la reserva\r\n    async function submitReservation() {\r\n      isProcessingReservation.value = true;\r\n      reservationSuccess.value = false;\r\n      reservationError.value = null;\r\n      \r\n      try {\r\n        // Utilizamos el servicio de reservas para guardar los datos\r\n        const result = await saveReservation(reservationData.value);\r\n        \r\n        if (result.success) {\r\n          // Reserva guardada correctamente\r\n          reservationSuccess.value = true;\r\n          showToast('¡Reserva enviada con éxito! Recibirá un correo de confirmación en breve.', 'success');\r\n          \r\n          // Enviar correo de confirmación (simulado)\r\n          console.log('Enviando correo de confirmación a:', reservationData.value.email);\r\n          \r\n          // Limpiar el formulario y ocultarlo después de un tiempo\r\n          setTimeout(() => {\r\n            resetReservationForm();\r\n            showReservationForm.value = false;\r\n          }, 3000);\r\n        } else {\r\n          // Error al guardar la reserva\r\n          throw new Error(result.error || 'Error al procesar la reserva');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al enviar la reserva:', error);\r\n        reservationError.value = 'Ocurrió un error al procesar su reserva. Por favor, intente nuevamente.';\r\n        showToast('Error al procesar la reserva. Por favor, intente nuevamente.', 'error');\r\n      } finally {\r\n        isProcessingReservation.value = false;\r\n      }\r\n    }\r\n    \r\n    // Función para cancelar la reserva\r\n    function cancelReservation() {\r\n      resetReservationForm();\r\n      showReservationForm.value = false;\r\n    }\r\n    \r\n    // Función para reiniciar el formulario\r\n    function resetReservationForm() {\r\n      reservationData.value.fullName = '';\r\n      reservationData.value.mobilePhone = '';\r\n      reservationData.value.landlinePhone = '';\r\n      reservationData.value.address = '';\r\n      reservationData.value.email = '';\r\n      reservationData.value.orderDate = getCurrentDate();\r\n      reservationData.value.reservationDate = '';\r\n      reservationData.value.reservationTime = '';\r\n      reservationData.value.peopleCount = 1;\r\n      reservationData.value.additionalNotes = '';\r\n      reservationSuccess.value = false;\r\n      reservationError.value = null;\r\n    }\r\n\r\n    // Refrescar información del negocio manualmente\r\n    async function refreshBusinessInfo() {\r\n      try {\r\n        const businessInfo = await fetchBusinessInfoFromBackend(true);\r\n        if (businessInfo) {\r\n          menuData.value.businessInfo = businessInfo;\r\n          lastBusinessInfoUpdate.value = Date.now();\r\n          showToast('Información del negocio actualizada', 'success');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al refrescar información del negocio:', error);\r\n        showToast('Error al actualizar información del negocio', 'error');\r\n      }\r\n    }\r\n\r\n    return {\r\n      menuId,\r\n      isLoading,\r\n      error,\r\n      menuData,\r\n      regularItems,\r\n      specialItems,\r\n      cartItems,\r\n      cartTotal,\r\n      totalItems,\r\n      customerInfo,\r\n      selectedPaymentMethod,\r\n      additionalMessage,\r\n      addToCart,\r\n      removeFromCart,\r\n      increaseQuantity,\r\n      decreaseQuantity,\r\n      formatPrice,\r\n      completeOrder,\r\n      shareOrderByWhatsApp,\r\n      scrollToOrder,\r\n      isValidImage,\r\n      fixImageFormat,\r\n      hasPaymentInfo,\r\n      // Reservas\r\n      showReservationForm,\r\n      reservationData,\r\n      isProcessingReservation,\r\n      reservationSuccess,\r\n      reservationError,\r\n      submitReservation,\r\n      cancelReservation,\r\n      getCurrentDate,\r\n      // Añadir el objeto toast para que esté disponible en la plantilla\r\n      toast,\r\n      // Función para refrescar información del negocio\r\n      refreshBusinessInfo,\r\n      // Última actualización de la información del negocio\r\n      lastBusinessInfoUpdate\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.shared-menu-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.loading, .error {\r\n  text-align: center;\r\n  padding: 50px;\r\n  font-size: 18px;\r\n}\r\n\r\n.error {\r\n  color: #d9534f;\r\n}\r\n\r\n.business-info {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.business-logo {\r\n  max-width: 100%;\r\n  max-height: 150px;\r\n  object-fit: contain;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.business-info h1 {\r\n  color: #343a40;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.description {\r\n  font-style: italic;\r\n  color: #6c757d;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.contact-info {\r\n  font-size: 14px;\r\n  color: #495057;\r\n}\r\n\r\n.menu-list {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.menu-list h2 {\r\n  color: #28a745;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #28a745;\r\n}\r\n\r\n.menu-items {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.menu-item {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.menu-item:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n}\r\n\r\n.item-image-container {\r\n  width: 100%;\r\n  height: 200px;\r\n  overflow: hidden;\r\n}\r\n\r\n.item-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.no-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f8f9fa;\r\n  color: #6c757d;\r\n  font-style: italic;\r\n}\r\n\r\n.item-details {\r\n  padding: 15px;\r\n}\r\n\r\n.item-details h3 {\r\n  margin-top: 0;\r\n  color: #343a40;\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.item-description {\r\n  color: #6c757d;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.item-price {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #28a745;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.includes-drink {\r\n  font-size: 14px;\r\n  color: #6c757d;\r\n  font-style: italic;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-to-cart-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  font-weight: bold;\r\n}\r\n\r\n.add-to-cart-btn:hover {\r\n  background-color: #218838;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.quantity-display {\r\n  min-width: 30px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Estilos para acciones de pedido */\r\n.order-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-top: 15px;\r\n  gap: 10px;\r\n}\r\n\r\n.complete-order-btn,\r\n.whatsapp-order-btn {\r\n  border: none;\r\n  padding: 12px 20px;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  gap: 8px;\r\n  height: 48px;\r\n  font-size: 17px;\r\n  width: 100%;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  letter-spacing: 0.5px;\r\n  text-shadow: 0 1px 2px rgba(0,0,0,0.3);\r\n}\r\n\r\n.complete-order-btn {\r\n  background-color: #218838;\r\n  color: white;\r\n  margin: 0;\r\n  border: 2px solid #1e7e34;\r\n}\r\n\r\n.complete-order-btn:hover {\r\n  background-color: #1e7e34;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n.whatsapp-order-btn {\r\n  height: 48px;\r\n  font-size: 17px;\r\n  width: 100%;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  letter-spacing: 0.5px;\r\n  text-shadow: 0 1px 2px rgba(0,0,0,0.3);\r\n}\r\n\r\n.complete-order-btn {\r\n  background-color: #218838;\r\n  color: white;\r\n  margin: 0;\r\n  border: 2px solid #1e7e34;\r\n}\r\n\r\n.complete-order-btn:hover {\r\n  background-color: #1e7e34;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n.whatsapp-order-btn {\r\n  background-color: #128C7E;\r\n  color: white;\r\n  margin: 0;\r\n  border: 2px solid #075E54;\r\n}\r\n\r\n.whatsapp-order-btn:hover {\r\n  background-color: #075E54;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2);\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 8px;\r\n}\r\n\r\n/* Estilos para la sección de \"Tu Pedido\" */\r\n.order-section {\r\n  margin: 30px auto;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  max-width: 800px;\r\n  border: 2px solid #28a745;\r\n  position: relative;\r\n}\r\n\r\n.order-section::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 10px solid transparent;\r\n  border-right: 10px solid transparent;\r\n  border-bottom: 10px solid #28a745;\r\n}\r\n\r\n.order-section h2 {\r\n  color: #343a40;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #28a745;\r\n}\r\n\r\n.cart-items {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #dee2e6;\r\n  animation: fadeIn 0.3s ease;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(-10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.cart-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.cart-item-details h3 {\r\n  margin: 0 0 5px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.cart-item-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.quantity-btn {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #28a745;\r\n  color: #28a745;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.quantity-btn:hover {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.remove-btn {\r\n  padding: 5px 10px;\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.remove-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.cart-total {\r\n  text-align: right;\r\n  padding-top: 15px;\r\n  border-top: 2px solid #28a745;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.cart-total h3 {\r\n  color: #343a40;\r\n  margin: 0;\r\n}\r\n\r\n/* Estilos para el formulario de datos del cliente */\r\n.customer-form {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border: 1px solid #dee2e6;\r\n}\r\n\r\n.customer-form h4 {\r\n  color: #343a40;\r\n  margin-top: 0;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.form-row {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.form-input, .form-textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.form-input:focus, .form-textarea:focus {\r\n  border-color: #28a745;\r\n  outline: none;\r\n}\r\n\r\n.form-textarea {\r\n  min-height: 80px;\r\n  resize: vertical;\r\n}\r\n\r\n/* Estilos para las opciones de pago */\r\n.payment-methods-selection {\r\n  width: 100%;\r\n  margin: 15px 0;\r\n}\r\n\r\n.payment-methods-selection h4 {\r\n  color: #343a40;\r\n  margin-top: 10px;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.payment-options {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.payment-option {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding: 8px 15px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 4px;\r\n  transition: all 0.2s;\r\n  flex: 1;\r\n  min-width: 100px;\r\n  justify-content: center;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.payment-option:hover {\r\n  background-color: #e9ecef;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\r\n}\r\n\r\n.payment-option input[type=\"radio\"] {\r\n  margin-right: 8px;\r\n  accent-color: #28a745;\r\n}\r\n\r\n.payment-option input[type=\"radio\"]:checked + .payment-option-text {\r\n  font-weight: bold;\r\n  color: #28a745;\r\n}\r\n\r\n.payment-option-text {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Estilo para opción seleccionada */\r\n.payment-option input[type=\"radio\"]:checked ~ .payment-option {\r\n  border-color: #28a745;\r\n  background-color: rgba(40, 167, 69, 0.1);\r\n}\r\n\r\n/* Botón flotante para ver pedido */\r\n.floating-cart-button {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border-radius: 50px;\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.2);\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  z-index: 98; /* Mantener por debajo del toast (9999) */\r\n  font-weight: bold;\r\n}\r\n\r\n/* Sistema de notificaciones toast */\r\n.toast-notification {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  padding: 15px 25px;\r\n  border-radius: 4px;\r\n  color: white;\r\n  z-index: 1000;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n  animation: slideIn 0.3s ease-out forwards;\r\n}\r\n\r\n@keyframes slideIn {\r\n  from {\r\n    transform: translateY(100%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.toast-notification.success {\r\n  background-color: #28a745;\r\n}\r\n\r\n.toast-notification.error {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.toast-notification.info {\r\n  background-color: #17a2b8;\r\n}\r\n\r\n.toast-notification.warning {\r\n  background-color: #ffc107;\r\n  color: #212529;\r\n}\r\n\r\n/* Estilos para la sección de formas de pago */\r\n.payment-section {\r\n  margin: 30px 0;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.payment-section h2 {\r\n  color: #343a40;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #28a745;\r\n}\r\n\r\n.payment-methods {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  justify-content: center;\r\n}\r\n\r\n.payment-method {\r\n  flex: 1;\r\n  min-width: 200px;\r\n  max-width: 300px;\r\n  padding: 15px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\r\n  text-align: center;\r\n}\r\n\r\n.payment-method h3 {\r\n  margin-top: 0;\r\n  color: #343a40;\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.payment-image {\r\n  max-width: 100%;\r\n  max-height: 200px;\r\n  object-fit: contain;\r\n  margin: 0 auto;\r\n  display: block;\r\n}\r\n\r\n/* Específicamente reducir el tamaño de la imagen de Nequi */\r\n.payment-method img[alt=\"Nequi\"] {\r\n  max-height: 150px;\r\n  width: auto;\r\n}\r\n\r\n.payment-detail {\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n  color: #6c757d;\r\n}\r\n</style>\r\n","<template>\n  <div class=\"reservas-section\">\n    <button @click=\"toggleReservaForm\" class=\"toggle-reserva-button\">\n      {{ showReservaForm ? 'Ocultar Formulario de Reserva' : 'Hacer una Reserva' }}\n    </button>\n    \n    <div v-if=\"showReservaForm\" class=\"reserva-form-container\">\n      <h3>Reserva tu Mesa</h3>\n      <form @submit.prevent=\"processReservation\" class=\"reserva-form\">\n        <div class=\"form-group\">\n          <label for=\"fullName\">Nombre Completo *</label>\n          <input \n            type=\"text\" \n            id=\"fullName\" \n            v-model=\"reservationData.fullName\" \n            placeholder=\"Ingresa tu nombre completo\"\n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"mobilePhone\">Teléfono Móvil *</label>\n          <input \n            type=\"tel\" \n            id=\"mobilePhone\" \n            v-model=\"reservationData.mobilePhone\" \n            placeholder=\"Ej. 612345678\"\n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"landlinePhone\">Teléfono Fijo</label>\n          <input \n            type=\"tel\" \n            id=\"landlinePhone\" \n            v-model=\"reservationData.landlinePhone\" \n            placeholder=\"Opcional\"\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"address\">Dirección</label>\n          <input \n            type=\"text\" \n            id=\"address\" \n            v-model=\"reservationData.address\" \n            placeholder=\"Tu dirección (opcional)\"\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"email\">Correo Electrónico</label>\n          <input \n            type=\"email\" \n            id=\"email\" \n            v-model=\"reservationData.email\" \n            placeholder=\"ejemplo@correo.com (opcional)\"\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"reservationDate\">Fecha de Reserva *</label>\n          <input \n            type=\"date\" \n            id=\"reservationDate\" \n            v-model=\"reservationData.date\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"reservationTime\">Hora de Reserva *</label>\n          <input \n            type=\"time\" \n            id=\"reservationTime\" \n            v-model=\"reservationData.time\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"peopleCount\">Número de Personas *</label>\n          <input \n            type=\"number\" \n            id=\"peopleCount\" \n            v-model=\"reservationData.peopleCount\" \n            min=\"1\" \n            max=\"20\" \n            required\n          >\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"specialNotes\">Notas Adicionales</label>\n          <textarea \n            id=\"specialNotes\" \n            v-model=\"reservationData.notes\" \n            placeholder=\"Instrucciones especiales, preferencias, etc.\"\n            rows=\"3\"\n          ></textarea>\n        </div>\n        \n        <div class=\"form-actions\">\n          <button \n            type=\"submit\" \n            class=\"submit-button\" \n            :disabled=\"isProcessing\"\n          >\n            {{ isProcessing ? 'Procesando...' : 'Reservar Mesa' }}\n          </button>\n          <button \n            type=\"button\" \n            class=\"clear-button\" \n            @click=\"clearForm\"\n            :disabled=\"isProcessing\"\n          >\n            Limpiar\n          </button>\n        </div>\n      </form>\n    </div>\n    \n    <!-- Toast de notificación -->\n    <div v-if=\"toast.show\" class=\"toast-notification\" :class=\"toast.type\">\n      {{ toast.message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, watch } from 'vue';\nimport eventBus from '@/utils/eventBus';\nimport { saveReservation, saveWhatsAppReservation } from '../../services/reservaService';\n\nexport default {\n  name: 'ReservaForm',\n  setup() {\n    console.log('ReservaForm montado');\n    // Estado para mostrar/ocultar el formulario\n    const showReservaForm = ref(false);\n    \n    // Estado para los datos de la reserva\n    const reservationData = reactive({\n      fullName: '',\n      mobilePhone: '',\n      landlinePhone: '',\n      address: '',\n      email: '',\n      date: '',\n      time: '',\n      peopleCount: 1,\n      notes: ''\n    });\n    \n    // Estado para el procesamiento de la reserva\n    const isProcessing = ref(false);\n    \n    // Estado para las notificaciones toast\n    const toast = reactive({\n      show: false,\n      message: '',\n      type: 'info'\n    });\n    \n    // Función para alternar la visibilidad del formulario\n    const toggleReservaForm = () => {\n      showReservaForm.value = !showReservaForm.value;\n    };\n    \n    // Función para mostrar mensajes toast\n    const showToast = (message, type = 'info') => {\n      toast.message = message;\n      toast.type = type;\n      toast.show = true;\n      \n      // Ocultar el toast después de 5 segundos\n      setTimeout(() => {\n        toast.show = false;\n      }, 5000);\n    };\n    \n    // Función para validar el formulario\n    const validateForm = () => {\n      if (!reservationData.fullName.trim()) {\n        showToast('Por favor, ingresa tu nombre completo', 'error');\n        return false;\n      }\n      \n      if (!reservationData.mobilePhone.trim()) {\n        showToast('Por favor, ingresa un número de teléfono móvil', 'error');\n        return false;\n      }\n      \n      if (!reservationData.date) {\n        showToast('Por favor, selecciona una fecha para la reserva', 'error');\n        return false;\n      }\n      \n      if (!reservationData.time) {\n        showToast('Por favor, selecciona una hora para la reserva', 'error');\n        return false;\n      }\n      \n      if (!reservationData.peopleCount || reservationData.peopleCount < 1) {\n        showToast('Por favor, indica el número de personas', 'error');\n        return false;\n      }\n      \n      return true;\n    };\n    \n    // Función para procesar la reserva\n    const processReservation = async () => {\n      if (!validateForm()) return;\n      \n      try {\n        isProcessing.value = true;\n        \n        // Construir el objeto de reserva para el sistema\n        const reservationObject = {\n          fullName: reservationData.fullName,\n          mobilePhone: reservationData.mobilePhone,\n          landlinePhone: reservationData.landlinePhone || '',\n          email: reservationData.email || '',\n          address: reservationData.address || '',\n          date: reservationData.date,\n          time: reservationData.time,\n          peopleCount: reservationData.peopleCount,\n          notes: reservationData.notes || '',\n          status: 'pending',\n          source: 'menu'\n        };\n        \n        console.log('Enviando reserva al sistema:', reservationObject);\n        \n        // Preparar datos para WhatsApp (formato que espera el handler)\n        const whatsappData = {\n          nombre: reservationData.fullName,\n          telefono: reservationData.mobilePhone,\n          email: reservationData.email || '',\n          fecha: reservationData.date,\n          hora: reservationData.time,\n          personas: reservationData.peopleCount,\n          notas: `Reserva desde menú compartido: ${reservationData.notes || 'Sin notas adicionales'}`\n        };\n        \n        console.log('Enviando reserva como mensaje de WhatsApp:', whatsappData);\n        \n        // Enviar la reserva al sistema como si viniera de WhatsApp\n        // Esto garantiza que aparezca en la sección de Gestión de Reservas\n        const whatsappResult = await saveWhatsAppReservation(whatsappData);\n        \n        console.log('Resultado de envío como WhatsApp:', whatsappResult);\n        \n        if (!whatsappResult.success) {\n          throw new Error(whatsappResult.error || 'Error al guardar la reserva');\n        }\n        \n        // Construir mensaje para WhatsApp (opcional, para que el cliente pueda confirmar)\nconst message = `\n📅 *NUEVA RESERVA DE MESA*\n---------------------------\n👤 *Nombre:* ${reservationData.fullName}\n📱 *Teléfono móvil:* ${reservationData.mobilePhone}\n${reservationData.landlinePhone ? `☎️ *Teléfono fijo:* ${reservationData.landlinePhone}` : ''}\n${reservationData.email ? `✉️ *Email:* ${reservationData.email}` : ''}\n📆 *Fecha:* ${reservationData.date}\n⏰ *Hora:* ${reservationData.time}\n👥 *Personas:* ${reservationData.peopleCount}\n${reservationData.notes ? `📝 *Notas:* ${reservationData.notes}` : ''}\n---------------------------\n🌐 Esta reserva fue realizada a través del sistema de reservas online.\n`;\n\n        \n        // Abrir WhatsApp con el mensaje (opcional)\n          const encodedMessage = encodeURIComponent(message);\n          const whatsappUrl = `https://api.whatsapp.com/send?text=${encodedMessage}`;\n          window.open(whatsappUrl, '_blank');\n\n        \n        // Mostrar mensaje de éxito\n        showToast('¡Reserva enviada correctamente! También puedes confirmarla por WhatsApp.', 'success');\n        \n        // Limpiar el formulario\n        clearForm();\n        \n      } catch (error) {\n        console.error('Error al procesar la reserva:', error);\n        showToast('Hubo un error al procesar tu reserva. Por favor, intenta nuevamente.', 'error');\n      } finally {\n        isProcessing.value = false;\n      }\n    };\n    \n    // Función para limpiar el formulario\n    const clearForm = () => {\n      reservationData.fullName = '';\n      reservationData.mobilePhone = '';\n      reservationData.landlinePhone = '';\n      reservationData.address = '';\n      reservationData.email = '';\n      reservationData.date = '';\n      reservationData.time = '';\n      reservationData.peopleCount = 1;\n      reservationData.notes = '';\n    };\n    \n    return {\n      showReservaForm,\n      reservationData,\n      isProcessing,\n      toast,\n      toggleReservaForm,\n      processReservation,\n      clearForm\n    };\n  }\n};\n</script>\n\n<style scoped>\n.reservas-section {\n  margin: 40px 0;\n  position: relative;\n  border: 5px solid red;  /* Borde rojo brillante para depuración */\n  padding: 20px;\n  background-color: rgb(165, 229, 245);  /* Fondo amarillo para depuración */\n}\n\n.toggle-reserva-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  display: block;\n  margin: 0 auto 20px;\n}\n\n.toggle-reserva-button:hover {\n  background-color: #388E3C;\n}\n\n.reserva-form-container {\n  background-color: #f8f8f8;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 30px;\n  border: 1px solid #e0e0e0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.reserva-form-container h3 {\n  color: #333;\n  margin-top: 0;\n  margin-bottom: 20px;\n  border-bottom: 2px solid #4CAF50;\n  padding-bottom: 10px;\n}\n\n.reserva-form {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 15px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #333;\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n  transition: border-color 0.3s;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  border-color: #4CAF50;\n  outline: none;\n}\n\n.form-actions {\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.submit-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 12px 24px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.submit-button:hover {\n  background-color: #388E3C;\n}\n\n.clear-button {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 12px 24px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.clear-button:hover {\n  background-color: #d32f2f;\n}\n\n.toast-notification {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  padding: 15px 20px;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  z-index: 1000;\n  animation: slideIn 0.3s ease, fadeOut 0.5s 4.5s ease forwards;\n  max-width: 300px;\n}\n\n.toast-notification.info {\n  background-color: #2196F3;\n}\n\n.toast-notification.success {\n  background-color: #4CAF50;\n}\n\n.toast-notification.error {\n  background-color: #f44336;\n}\n\n@keyframes slideIn {\n  from { transform: translateX(100%); }\n  to { transform: translateX(0); }\n}\n\n@keyframes fadeOut {\n  from { opacity: 1; }\n  to { opacity: 0; }\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .reserva-form {\n    grid-template-columns: 1fr;\n  }\n  \n  .form-actions {\n    flex-direction: column;\n  }\n  \n  .submit-button, .clear-button {\n    width: 100%;\n  }\n}\n</style>","import { render } from \"./ReservaForm.vue?vue&type=template&id=732333be&scoped=true\"\nimport script from \"./ReservaForm.vue?vue&type=script&lang=js\"\nexport * from \"./ReservaForm.vue?vue&type=script&lang=js\"\n\nimport \"./ReservaForm.vue?vue&type=style&index=0&id=732333be&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-732333be\"]])\n\nexport default __exports__","import { render } from \"./SharedMenuView.vue?vue&type=template&id=50a3da36&scoped=true\"\nimport script from \"./SharedMenuView.vue?vue&type=script&lang=js\"\nexport * from \"./SharedMenuView.vue?vue&type=script&lang=js\"\n\nimport \"./SharedMenuView.vue?vue&type=style&index=0&id=50a3da36&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-50a3da36\"]])\n\nexport default __exports__"],"names":["SYNC_INTERVAL","CACHE_DURATION","syncIntervalId","lastSyncTimestamp","lastFetchTimestamp","businessInfoCache","isInitialized","async","syncBusinessInfoWithBackend","businessInfo","getBusinessInfo","Object","keys","length","console","log","success","message","token","localStorage","getItem","apiService","setToken","userResponse","get","user","restaurante_id","warn","restauranteId","restauranteData","nombre","name","descripcion","description","direccion","address","telefono","contact","logo","informacion_pago","JSON","stringify","paymentInfo","response","put","Date","now","eventBus","emit","timestamp","error","fetchBusinessInfoFromBackend","forceUpdate","Error","restaurante","parse","e","saveBusinessInfo","localError","checkForBusinessInfoChanges","localInfo","backendInfo","localString","backendString","hasChanges","startBusinessInfoSyncInterval","disableSync","clearInterval","catch","setInterval","stopBusinessInfoSyncInterval","runAddInformacionPagoMigration","invalidateBusinessInfoCache","key","class","src","alt","ref","_createElementBlock","id","$setup","menuId","isLoading","_hoisted_2","_cache","_createElementVNode","_hoisted_3","_toDisplayString","_hoisted_4","menuData","_hoisted_5","isValidImage","fixImageFormat","_hoisted_6","_createCommentVNode","_hoisted_7","_hoisted_8","_hoisted_9","_createTextVNode","_hoisted_10","_hoisted_11","_hoisted_12","_Fragment","_renderList","regularItems","item","index","_hoisted_13","image","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","formatPrice","price","includesDrink","_hoisted_19","onClick","$event","addToCart","_normalizeClass","realAvailability","disabled","_hoisted_21","_hoisted_22","_hoisted_20","specialItems","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_33","_hoisted_34","_hoisted_32","_hoisted_35","cartItems","_hoisted_36","_hoisted_37","_hoisted_38","quantity","_hoisted_39","decreaseQuantity","_hoisted_40","_hoisted_41","increaseQuantity","_hoisted_42","removeFromCart","_hoisted_43","_hoisted_44","cartTotal","_hoisted_45","_hoisted_46","type","customerInfo","placeholder","_hoisted_47","phone","_hoisted_48","email","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","selectedPaymentMethod","value","_hoisted_53","_hoisted_54","_hoisted_55","additionalMessage","_hoisted_56","args","completeOrder","scrollToOrder","_hoisted_57","totalItems","hasPaymentInfo","_hoisted_58","_hoisted_59","qrImage","_hoisted_60","qrTitle","_hoisted_61","nequiNumber","nequiImage","_hoisted_62","_hoisted_63","_hoisted_64","bankInfo","_hoisted_65","_hoisted_66","otherPaymentMethods","_hoisted_67","_hoisted_68","_hoisted_69","_createVNode","_component_ReservaForm","toast","visible","_hoisted_1","toggleReservaForm","showReservaForm","onSubmit","_withModifiers","processReservation","for","reservationData","fullName","required","mobilePhone","landlinePhone","date","time","peopleCount","min","max","notes","rows","isProcessing","clearForm","show","setup","reactive","showToast","setTimeout","validateForm","trim","reservationObject","status","source","whatsappData","fecha","hora","personas","notas","whatsappResult","saveWhatsAppReservation","encodedMessage","encodeURIComponent","whatsappUrl","window","open","__exports__","components","ReservaForm","props","String","default","route","useRoute","computed","params","items","isProcessingOrder","lastBusinessInfoUpdate","timeoutId","onMounted","loadMenu","on","handleBusinessInfoUpdate","onUnmounted","off","clearTimeout","updatedInfo","savedCart","data","getSharedMenu","businessInfoError","forEach","availableQuantity","undefined","Number","updateAvailabilityInMenu","setItem","saveError","apiError","cachedMenu","cacheError","reduce","total","isNaN","numero","toFixed","parteEntera","parteDecimal","split","parteEnteraFormateada","replace","isAvailable","checkAvailability","existingItem","find","i","push","toString","saveCartToLocalStorage","duration","menuItem","splice","updateInventory","openWhatsAppShare","removeItem","shareOrderByWhatsApp","whatsappMessage","subtotal","formaPago","orderSection","document","querySelector","scrollIntoView","behavior","baseAvailability","cartItem","cartQuantity","currentMenu","getMenuItems","Array","isArray","itemsToProcess","updateResults","hasErrors","getSoldItems","saveSoldItems","soldItemsList","soldItemsError","currentQuantity","parseInt","soldQuantity","newQuantity","Math","updateSuccess","updateItemAvailability","oldQuantity","currentDate","toISOString","existingSoldItem","itemError","successCount","filter","r","failedItems","map","join","imageString","startsWith","includes","filtered","isSpecial","showReservationForm","isProcessingReservation","reservationSuccess","reservationError","orderDate","getCurrentDate","reservationDate","reservationTime","additionalNotes","today","year","getFullYear","month","getMonth","padStart","day","getDate","submitReservation","result","saveReservation","resetReservationForm","cancelReservation","refreshBusinessInfo","render"],"sourceRoot":""}