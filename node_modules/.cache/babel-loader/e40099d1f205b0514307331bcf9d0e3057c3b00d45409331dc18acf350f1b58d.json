{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n// Importamos el nuevo servicio\nimport { obtenerDatosDashboard } from '@/services/adminDashboardService';\nexport default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      dashboardData: {\n        estadisticas: {\n          totalUsuarios: 0,\n          totalRestaurantes: 0,\n          totalPedidos: 0,\n          totalVentas: 0\n        },\n        graficoVentas: [],\n        restaurantesPopulares: [],\n        usuariosActivos: []\n      },\n      loading: true,\n      error: null\n    };\n  },\n  async created() {\n    await this.cargarDatosDashboard();\n  },\n  methods: {\n    async cargarDatosDashboard() {\n      try {\n        console.log('Cargando estad√≠sticas del dashboard...');\n        this.loading = true;\n        const respuesta = await obtenerDatosDashboard();\n        if (respuesta && respuesta.success && respuesta.data) {\n          this.dashboardData = respuesta.data;\n          console.log('Datos del dashboard cargados correctamente');\n        } else {\n          console.warn('Respuesta incorrecta del API de dashboard');\n          // No hacemos nada porque el servicio ya proporciona datos de respaldo\n        }\n      } catch (error) {\n        console.error('Error al cargar datos del dashboard:', error);\n        // No hacemos nada porque el servicio ya maneja los errores\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatCurrency(value) {\n      return new Intl.NumberFormat('es-ES', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(value);\n    },\n    formatDate(dateStr) {\n      try {\n        const date = new Date(dateStr);\n        return date.toLocaleDateString('es-ES', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (error) {\n        return dateStr;\n      }\n    },\n    getInitials(name) {\n      return name.split(' ').map(word => word[0]).join('').toUpperCase().substring(0, 2);\n    },\n    calcBarHeight(value) {\n      if (!this.dashboardData || !this.dashboardData.graficoVentas) return 0;\n      const maxVenta = Math.max(...this.dashboardData.graficoVentas.map(item => item.ventas));\n      return value / maxVenta * 80; // 80% como altura m√°xima\n    }\n  }\n};","map":{"version":3,"names":["obtenerDatosDashboard","name","data","dashboardData","estadisticas","totalUsuarios","totalRestaurantes","totalPedidos","totalVentas","graficoVentas","restaurantesPopulares","usuariosActivos","loading","error","created","cargarDatosDashboard","methods","console","log","respuesta","success","warn","formatCurrency","value","Intl","NumberFormat","style","currency","format","formatDate","dateStr","date","Date","toLocaleDateString","year","month","day","hour","minute","getInitials","split","map","word","join","toUpperCase","substring","calcBarHeight","maxVenta","Math","max","item","ventas"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\admin\\AdminDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"admin-dashboard\">\n    <h2>Panel de Control</h2>\n    \n    <!-- Panel de carga -->\n    <div v-if=\"loading\" class=\"loading-panel\">\n      <div class=\"spinner\"></div>\n      <p>Cargando estad√≠sticas del dashboard...</p>\n    </div>\n    \n    <!-- Panel de error -->\n    <div v-else-if=\"error\" class=\"error-panel\">\n      <p class=\"error-message\">{{ error }}</p>\n      <button @click=\"cargarDatos\" class=\"btn btn-retry\">Reintentar</button>\n    </div>\n    \n    <!-- Contenido del dashboard -->\n    <div v-else-if=\"dashboardData\" class=\"dashboard-content\">\n      <!-- Tarjetas de estad√≠sticas -->\n      <div class=\"stats-cards\">\n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">üë§</div>\n          <div class=\"stat-value\">{{ dashboardData.estadisticas.totalUsuarios }}</div>\n          <div class=\"stat-label\">Usuarios</div>\n        </div>\n        \n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">üçΩÔ∏è</div>\n          <div class=\"stat-value\">{{ dashboardData.estadisticas.totalRestaurantes }}</div>\n          <div class=\"stat-label\">Restaurantes</div>\n        </div>\n        \n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">üìù</div>\n          <div class=\"stat-value\">{{ dashboardData.estadisticas.totalPedidos }}</div>\n          <div class=\"stat-label\">Pedidos</div>\n        </div>\n        \n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">üí∞</div>\n          <div class=\"stat-value\">{{ formatCurrency(dashboardData.estadisticas.totalVentas) }}</div>\n          <div class=\"stat-label\">Ventas</div>\n        </div>\n      </div>\n      \n      <!-- Gr√°fico de ventas -->\n      <div class=\"chart-panel\">\n        <h3>Ventas Mensuales</h3>\n        <div class=\"chart-container\">\n          <div class=\"chart\">\n            <div \n              v-for=\"(item, index) in dashboardData.graficoVentas\" \n              :key=\"`venta-${index}`\" \n              class=\"chart-bar\"\n              :style=\"{ height: calcBarHeight(item.ventas) + '%' }\">\n              <span class=\"chart-tooltip\">{{ formatCurrency(item.ventas) }}</span>\n            </div>\n          </div>\n          <div class=\"chart-labels\">\n            <span \n              v-for=\"(item, index) in dashboardData.graficoVentas\" \n              :key=\"`label-${index}`\" \n              class=\"chart-label\">\n              {{ item.mes }}\n            </span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Paneles inferiores -->\n      <div class=\"lower-panels\">\n        <!-- Restaurantes populares -->\n        <div class=\"panel\">\n          <h3>Restaurantes Populares</h3>\n          <div class=\"restaurant-list\">\n            <div \n              v-for=\"(restaurante, index) in dashboardData.restaurantesPopulares\" \n              :key=\"`rest-${index}`\"\n              class=\"restaurant-item\">\n              <div class=\"restaurant-rank\">{{ index + 1 }}</div>\n              <div class=\"restaurant-info\">\n                <div class=\"restaurant-name\">{{ restaurante.nombre }}</div>\n                <div class=\"restaurant-orders\">{{ restaurante.pedidos }} pedidos</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Usuarios activos -->\n        <div class=\"panel\">\n          <h3>Usuarios Activos</h3>\n          <div class=\"user-list\">\n            <div \n              v-for=\"(usuario, index) in dashboardData.usuariosActivos\" \n              :key=\"`user-${index}`\"\n              class=\"user-item\">\n              <div class=\"user-avatar\">\n                {{ getInitials(usuario.nombre) }}\n              </div>\n              <div class=\"user-info\">\n                <div class=\"user-name\">{{ usuario.nombre }}</div>\n                <div class=\"user-role\">{{ usuario.rol }}</div>\n              </div>\n              <div class=\"user-access\">\n                <span class=\"access-date\">{{ formatDate(usuario.ultimoAcceso) }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Pie de p√°gina del dashboard -->\n      <div class=\"dashboard-footer\">\n        <div class=\"data-updated\">\n          Datos actualizados: {{ fechaActualizacion }}\n        </div>\n      </div>\n    </div>\n    \n    <!-- Sin datos -->\n    <div v-else class=\"no-data\">\n      <p>No hay datos disponibles para mostrar.</p>\n      <button @click=\"cargarDatos\" class=\"btn btn-retry\">Cargar datos</button>\n    </div>\n  </div>\n</template>\n\n<script>\n// Importamos el nuevo servicio\nimport { obtenerDatosDashboard } from '@/services/adminDashboardService';\n\nexport default {\n  name: 'AdminDashboard',\n  \n  data() {\n    return {\n      dashboardData: {\n        estadisticas: {\n          totalUsuarios: 0,\n          totalRestaurantes: 0,\n          totalPedidos: 0,\n          totalVentas: 0\n        },\n        graficoVentas: [],\n        restaurantesPopulares: [],\n        usuariosActivos: []\n      },\n      loading: true,\n      error: null\n    };\n  },\n  \n  async created() {\n    await this.cargarDatosDashboard();\n  },\n  \n  methods: {\n    async cargarDatosDashboard() {\n      try {\n        console.log('Cargando estad√≠sticas del dashboard...');\n        this.loading = true;\n        \n        const respuesta = await obtenerDatosDashboard();\n        \n        if (respuesta && respuesta.success && respuesta.data) {\n          this.dashboardData = respuesta.data;\n          console.log('Datos del dashboard cargados correctamente');\n        } else {\n          console.warn('Respuesta incorrecta del API de dashboard');\n          // No hacemos nada porque el servicio ya proporciona datos de respaldo\n        }\n      } catch (error) {\n        console.error('Error al cargar datos del dashboard:', error);\n        // No hacemos nada porque el servicio ya maneja los errores\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    formatCurrency(value) {\n      return new Intl.NumberFormat('es-ES', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(value);\n    },\n    \n    formatDate(dateStr) {\n      try {\n        const date = new Date(dateStr);\n        return date.toLocaleDateString('es-ES', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (error) {\n        return dateStr;\n      }\n    },\n    \n    getInitials(name) {\n      return name\n        .split(' ')\n        .map(word => word[0])\n        .join('')\n        .toUpperCase()\n        .substring(0, 2);\n    },\n    \n    calcBarHeight(value) {\n      if (!this.dashboardData || !this.dashboardData.graficoVentas) return 0;\n      \n      const maxVenta = Math.max(\n        ...this.dashboardData.graficoVentas.map(item => item.ventas)\n      );\n      \n      return (value / maxVenta) * 80; // 80% como altura m√°xima\n    }\n  }\n};\n</script>\n\n<style scoped>\n.admin-dashboard {\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n}\n\nh2 {\n  margin-bottom: 20px;\n  color: #333;\n}\n\n/* Estilos para el panel de carga */\n.loading-panel {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n}\n\n.spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top: 4px solid #3498db;\n  width: 30px;\n  height: 30px;\n  animation: spin 1s linear infinite;\n  margin-bottom: 15px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Estilos para el panel de error */\n.error-panel {\n  background-color: #ffebee;\n  border-left: 4px solid #f44336;\n  padding: 15px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n}\n\n.error-message {\n  color: #d32f2f;\n  margin: 0 0 10px 0;\n}\n\n.btn-retry {\n  background-color: #2196f3;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n}\n\n.btn-retry:hover {\n  background-color: #1976d2;\n}\n\n/* Estilos para las tarjetas de estad√≠sticas */\n.stats-cards {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n@media (max-width: 1000px) {\n  .stats-cards {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (max-width: 600px) {\n  .stats-cards {\n    grid-template-columns: 1fr;\n  }\n}\n\n.stat-card {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.stat-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n}\n\n.stat-icon {\n  font-size: 28px;\n  margin-bottom: 10px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 5px;\n}\n\n.stat-label {\n  color: #666;\n  font-size: 14px;\n}\n\n/* Estilos para el gr√°fico */\n.chart-panel {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\nh3 {\n  margin-top: 0;\n  margin-bottom: 15px;\n  color: #333;\n}\n\n.chart-container {\n  height: 250px;\n  margin-top: 20px;\n}\n\n.chart {\n  display: flex;\n  align-items: flex-end;\n  height: 200px;\n  gap: 10px;\n}\n\n.chart-bar {\n  flex: 1;\n  background-color: #3498db;\n  min-width: 30px;\n  border-radius: 4px 4px 0 0;\n  position: relative;\n  transition: height 0.3s;\n}\n\n.chart-bar:hover {\n  background-color: #2980b9;\n}\n\n.chart-tooltip {\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #333;\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  opacity: 0;\n  transition: opacity 0.2s;\n  white-space: nowrap;\n}\n\n.chart-bar:hover .chart-tooltip {\n  opacity: 1;\n}\n\n.chart-labels {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n}\n\n.chart-label {\n  flex: 1;\n  text-align: center;\n  font-size: 12px;\n  color: #666;\n  min-width: 30px;\n}\n\n/* Estilos para paneles inferiores */\n.lower-panels {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n@media (max-width: 768px) {\n  .lower-panels {\n    grid-template-columns: 1fr;\n  }\n}\n\n.panel {\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* Estilos para lista de restaurantes */\n.restaurant-item {\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #eee;\n}\n\n.restaurant-item:last-child {\n  border-bottom: none;\n}\n\n.restaurant-rank {\n  width: 24px;\n  height: 24px;\n  background-color: #f5f5f5;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: #333;\n  margin-right: 12px;\n}\n\n.restaurant-info {\n  flex: 1;\n}\n\n.restaurant-name {\n  font-weight: 500;\n  margin-bottom: 2px;\n}\n\n.restaurant-orders {\n  font-size: 12px;\n  color: #666;\n}\n\n/* Estilos para lista de usuarios */\n.user-item {\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #eee;\n}\n\n.user-item:last-child {\n  border-bottom: none;\n}\n\n.user-avatar {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #3498db;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  margin-right: 12px;\n}\n\n.user-info {\n  flex: 1;\n}\n\n.user-name {\n  font-weight: 500;\n  margin-bottom: 2px;\n}\n\n.user-role {\n  font-size: 12px;\n  color: #666;\n}\n\n.user-access {\n  font-size: 12px;\n  color: #888;\n}\n\n/* Estilos para pie de p√°gina */\n.dashboard-footer {\n  margin-top: 20px;\n  padding-top: 10px;\n  border-top: 1px solid #eee;\n  color: #888;\n  font-size: 12px;\n  text-align: right;\n}\n\n/* Sin datos */\n.no-data {\n  padding: 40px;\n  text-align: center;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  color: #666;\n}\n</style>\n"],"mappings":";;AAgIA;AACA,SAASA,qBAAoB,QAAS,kCAAkC;AAExE,eAAe;EACbC,IAAI,EAAE,gBAAgB;EAEtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;QACbC,YAAY,EAAE;UACZC,aAAa,EAAE,CAAC;UAChBC,iBAAiB,EAAE,CAAC;UACpBC,YAAY,EAAE,CAAC;UACfC,WAAW,EAAE;QACf,CAAC;QACDC,aAAa,EAAE,EAAE;QACjBC,qBAAqB,EAAE,EAAE;QACzBC,eAAe,EAAE;MACnB,CAAC;MACDC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EAED,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,oBAAoB,CAAC,CAAC;EACnC,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,oBAAoBA,CAAA,EAAG;MAC3B,IAAI;QACFE,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACrD,IAAI,CAACN,OAAM,GAAI,IAAI;QAEnB,MAAMO,SAAQ,GAAI,MAAMnB,qBAAqB,CAAC,CAAC;QAE/C,IAAImB,SAAQ,IAAKA,SAAS,CAACC,OAAM,IAAKD,SAAS,CAACjB,IAAI,EAAE;UACpD,IAAI,CAACC,aAAY,GAAIgB,SAAS,CAACjB,IAAI;UACnCe,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;QAC3D,OAAO;UACLD,OAAO,CAACI,IAAI,CAAC,2CAA2C,CAAC;UACzD;QACF;MACF,EAAE,OAAOR,KAAK,EAAE;QACdI,OAAO,CAACJ,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5D;MACF,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAEDU,cAAcA,CAACC,KAAK,EAAE;MACpB,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QACpCC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;IAClB,CAAC;IAEDM,UAAUA,CAACC,OAAO,EAAE;MAClB,IAAI;QACF,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,OAAO,CAAC;QAC9B,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;UACtCC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,OAAO;UACdC,GAAG,EAAE,SAAS;UACdC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ,EAAE,OAAOzB,KAAK,EAAE;QACd,OAAOiB,OAAO;MAChB;IACF,CAAC;IAEDS,WAAWA,CAACtC,IAAI,EAAE;MAChB,OAAOA,IAAG,CACPuC,KAAK,CAAC,GAAG,EACTC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAAC,CAAC,CAAC,EACnBC,IAAI,CAAC,EAAE,EACPC,WAAW,CAAC,EACZC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAEDC,aAAaA,CAACvB,KAAK,EAAE;MACnB,IAAI,CAAC,IAAI,CAACpB,aAAY,IAAK,CAAC,IAAI,CAACA,aAAa,CAACM,aAAa,EAAE,OAAO,CAAC;MAEtE,MAAMsC,QAAO,GAAIC,IAAI,CAACC,GAAG,CACvB,GAAG,IAAI,CAAC9C,aAAa,CAACM,aAAa,CAACgC,GAAG,CAACS,IAAG,IAAKA,IAAI,CAACC,MAAM,CAC7D,CAAC;MAED,OAAQ5B,KAAI,GAAIwB,QAAQ,GAAI,EAAE,EAAE;IAClC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}