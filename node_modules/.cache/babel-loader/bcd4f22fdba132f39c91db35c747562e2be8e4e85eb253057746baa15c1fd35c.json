{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, reactive, computed, onMounted, watch, nextTick } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport QrcodeVue from 'qrcode.vue';\nimport html2canvas from 'html2canvas';\nimport chroma from 'chroma-js';\nimport { isAdmin } from '../services/authService';\nimport { jsPDF } from 'jspdf';\nimport qrcode from 'qrcode';\nimport apiConfig from '../config/apiConfig';\nimport { getBusinessInfo, getMenuItems, getSoldItems, compressImage, saveBusinessInfo } from '../services/storageService';\nimport { saveMenu } from '../services/menuService';\n\n// ...existing code...\n\nimport SalesChartComponent from '../components/SalesChartComponent.vue';\nexport default {\n  name: 'MenuComponent',\n  components: {\n    SalesChartComponent\n  },\n  props: {\n    viewOnly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    // Estado para información del negocio\n    const businessInfo = ref({\n      name: '',\n      description: '',\n      contact: '',\n      address: '',\n      logo: ''\n    });\n    const showBusinessForm = ref(false);\n\n    // Estado para información de pago\n    const paymentInfo = ref({\n      qrTitle: '',\n      qrImage: '',\n      nequiNumber: '',\n      nequiImage: ''\n    });\n    const showPaymentForm = ref(false);\n\n    // Estado para platos del menú\n    const newItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const menuItems = ref([]);\n    const showMenuForm = ref(false);\n    const isEditing = ref(false);\n    const editingIndex = ref(-1);\n\n    // Estado para ventas e inventario\n    const soldItems = ref([]);\n    const searchTerm = ref('');\n    const sortBy = ref('');\n    const categoryFilter = ref('');\n    const selectedChartType = ref('bar');\n\n    // Estado para compartir\n    const shareLink = ref('');\n    const showCopiedMessage = ref(false);\n\n    // Estado para mostrar progreso de migración\n    const migrationStatus = ref({\n      inProgress: false,\n      completed: false,\n      message: ''\n    });\n\n    // Estado para errores del gráfico\n    const chartError = ref(null);\n\n    // Primero, añadir el componente Toast\n    const toast = ref({\n      show: false,\n      message: '',\n      type: 'success' // success, error, warning\n    });\n\n    // Manejar errores del gráfico\n    const handleChartError = error => {\n      console.error(\"Error en el gráfico:\", error);\n      chartError.value = error;\n    };\n\n    // Estado para mensajes de notificación\n    const notification = ref({\n      show: false,\n      message: '',\n      type: 'success',\n      // 'success', 'error'\n      timeout: null\n    });\n\n    // Estado para platos especiales\n    const newSpecialItem = ref({\n      name: '',\n      description: '',\n      price: 0,\n      includesDrink: false,\n      availableQuantity: 0,\n      image: '',\n      id: null\n    });\n    const specialMenuItems = ref([]);\n    const showSpecialMenuForm = ref(false);\n    const isEditingSpecial = ref(false);\n    const editingSpecialIndex = ref(-1);\n\n    // Cargar datos guardados\n    onMounted(async () => {\n      try {\n        migrationStatus.value.inProgress = true;\n        migrationStatus.value.message = 'Cargando datos...';\n        const hasLocalData = localStorage.getItem('businessInfo') || localStorage.getItem('menuItems') || localStorage.getItem('soldItems');\n        if (hasLocalData) {\n          migrationStatus.value.message = 'Migrando datos desde localStorage a IndexedDB...';\n          const migrationResult = await migrateFromLocalStorage();\n          if (migrationResult) {\n            migrationStatus.value.completed = true;\n            migrationStatus.value.message = 'Migración completada exitosamente';\n            localStorage.removeItem('businessInfo');\n            localStorage.removeItem('menuItems');\n            localStorage.removeItem('soldItems');\n          } else {\n            migrationStatus.value.message = 'Error en la migración de datos';\n          }\n        }\n        const dbBusinessInfo = await getBusinessInfo();\n        if (dbBusinessInfo && dbBusinessInfo.name) {\n          businessInfo.value = dbBusinessInfo;\n        }\n        const dbMenuItems = await getMenuItems();\n        if (dbMenuItems && dbMenuItems.length > 0) {\n          // Separar los platos regulares de los especiales\n          const regularItems = dbMenuItems.filter(item => !item.isSpecial);\n          const specialItems = dbMenuItems.filter(item => item.isSpecial === true);\n          menuItems.value = regularItems;\n          if (specialItems.length > 0) {\n            specialMenuItems.value = specialItems;\n          }\n        }\n        const dbSoldItems = await getSoldItems();\n        if (dbSoldItems && dbSoldItems.length > 0) {\n          soldItems.value = dbSoldItems;\n        }\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 1500);\n      } catch (error) {\n        console.error('Error al cargar datos:', error);\n        migrationStatus.value.message = 'Error al cargar datos: ' + error.message;\n        setTimeout(() => {\n          migrationStatus.value.inProgress = false;\n        }, 3000);\n      }\n    });\n\n    // Métodos para información del negocio\n    const toggleBusinessForm = () => {\n      showBusinessForm.value = !showBusinessForm.value;\n    };\n    const onLogoChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedLogo = await compressImage(e.target.result);\n          businessInfo.value.logo = compressedLogo;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const handleSaveBusinessInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        await saveBusinessInfo(businessInfo.value);\n        notification.value = {\n          show: true,\n          message: 'Información del negocio guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información del negocio:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    const clearBusinessForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar el formulario?');\n      if (confirmed) {\n        businessInfo.value = {\n          name: '',\n          description: '',\n          contact: '',\n          address: '',\n          logo: ''\n        };\n      }\n    };\n\n    // Métodos para información de pago\n    const togglePaymentForm = () => {\n      showPaymentForm.value = !showPaymentForm.value;\n    };\n    const onQRImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.qrImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const onNequiImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          paymentInfo.value.nequiImage = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const savePaymentInfo = async () => {\n      try {\n        if (notification.value.timeout) {\n          clearTimeout(notification.value.timeout);\n        }\n        businessInfo.value.paymentInfo = {\n          ...paymentInfo.value\n        };\n        await saveBusinessInfo(businessInfo.value);\n        notification.value = {\n          show: true,\n          message: 'Información de pago guardada con éxito!',\n          type: 'success',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      } catch (error) {\n        console.error('Error al guardar información de pago:', error);\n        notification.value = {\n          show: true,\n          message: 'Error al guardar la información de pago. Por favor, intenta nuevamente.',\n          type: 'error',\n          timeout: setTimeout(() => {\n            notification.value.show = false;\n          }, 3000)\n        };\n      }\n    };\n    const clearPaymentForm = async () => {\n      const confirmed = await confirm('¿Estás seguro de querer limpiar la información de pago?');\n      if (confirmed) {\n        paymentInfo.value = {\n          qrTitle: '',\n          qrImage: '',\n          nequiNumber: '',\n          nequiImage: ''\n        };\n      }\n    };\n\n    // Métodos para platos del menú\n    const toggleMenuForm = () => {\n      showMenuForm.value = !showMenuForm.value;\n      if (!showMenuForm.value) {\n        clearMenuForm();\n      }\n    };\n    const onImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          newItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveMenuItem = async () => {\n      try {\n        // Validaciones iniciales\n        if (!newItem.value.name || !newItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n        if (newItem.value.availableQuantity < 0) {\n          showNotification('La cantidad disponible no puede ser negativa', 'error');\n          return;\n        }\n\n        // Generar ID si no existe\n        if (!newItem.value.id) {\n          newItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n        try {\n          console.log('📝 Datos del plato antes de guardar:', newItem.value);\n\n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newItem.value);\n          console.log('✅ Plato guardado correctamente:', savedPlato);\n          if (isEditing.value) {\n            // Actualizar el plato existente en la lista\n            const index = menuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              menuItems.value[index] = {\n                ...savedPlato\n              };\n              showNotification('Plato actualizado exitosamente', 'success');\n            }\n          } else {\n            // Agregar el nuevo plato a la lista\n            menuItems.value.push({\n              ...savedPlato\n            });\n            showNotification('Plato creado exitosamente', 'success');\n          }\n\n          // Guardar la lista completa\n          await saveMenuItems(menuItems.value);\n\n          // Limpiar el formulario\n          clearMenuForm();\n        } catch (error) {\n          console.error('❌ Error al guardar en la base de datos:', error);\n          showNotification(`Error al guardar el plato: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n    const clearMenuForm = () => {\n      newItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditing.value = false;\n      editingIndex.value = -1;\n    };\n    const editMenuItem = index => {\n      newItem.value = {\n        ...menuItems.value[index]\n      };\n      isEditing.value = true;\n      editingIndex.value = index;\n      showMenuForm.value = true;\n    };\n    const deleteMenuItem = async index => {\n      try {\n        const item = menuItems.value[index];\n        if (!item) {\n          console.error('Error: Elemento del menú no encontrado en el índice', index);\n          await alert('Error: No se encontró el elemento a eliminar');\n          return;\n        }\n\n        // Confirmar eliminación\n        if (!confirm(`¿Estás seguro de que deseas eliminar \"${item.name || 'este plato'}\" del menú?`)) {\n          return;\n        }\n\n        // Eliminar del backend MySQL directamente\n        try {\n          console.log(`Eliminando plato con ID: ${item.id} del servidor MySQL`);\n          const response = await fetch(`${apiConfig.API_DOMAIN}/direct-delete?id=${encodeURIComponent(item.id)}`, {\n            method: 'GET',\n            headers: {\n              'Cache-Control': 'no-cache'\n            }\n          });\n          const result = await response.json();\n          console.log('Resultado de la eliminación directa:', result);\n          if (!result.success) {\n            console.error('Error al eliminar plato del servidor:', result.message);\n            alert(`Error al eliminar plato: ${result.message}`);\n          }\n        } catch (serverError) {\n          console.error('Error al comunicarse con el servidor:', serverError);\n        }\n\n        // Eliminar de IndexedDB\n        if (item.id) {\n          try {\n            console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n            const deleteResult = await deleteMenuItemFromDB(item.id);\n            console.log(`Resultado de la eliminación de IndexedDB: ${deleteResult}`);\n          } catch (deleteError) {\n            console.error('Error al eliminar item del almacén local:', deleteError);\n          }\n        }\n\n        // Eliminar de la lista local\n        menuItems.value.splice(index, 1);\n\n        // Mostrar notificación de éxito\n        showNotification('Plato eliminado correctamente', 'success');\n      } catch (error) {\n        console.error('Error al eliminar elemento del menú:', error);\n        showNotification('Error al eliminar el plato', 'error');\n      }\n    };\n    const sellMenuItem = async index => {\n      try {\n        const item = menuItems.value[index];\n\n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato está agotado', 'error');\n          return;\n        }\n        const confirmed = await confirm(`¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`);\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n\n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n\n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n\n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n\n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para platos especiales\n    const toggleSpecialMenuForm = () => {\n      showSpecialMenuForm.value = !showSpecialMenuForm.value;\n      if (!showSpecialMenuForm.value) {\n        clearSpecialMenuForm();\n      }\n    };\n    const onSpecialImageChange = async event => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = async e => {\n          const compressedImage = await compressImage(e.target.result);\n          newSpecialItem.value.image = compressedImage;\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    const saveSpecialMenuItem = async () => {\n      try {\n        if (!newSpecialItem.value.name || !newSpecialItem.value.price) {\n          showNotification('El nombre y el precio son obligatorios', 'error');\n          return;\n        }\n        if (!newSpecialItem.value.id) {\n          newSpecialItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\n        }\n\n        // Marcar como plato especial\n        newSpecialItem.value.isSpecial = true;\n        try {\n          console.log('📝 Datos del plato especial antes de guardar:', newSpecialItem.value);\n\n          // Guardar en la base de datos\n          const savedPlato = await guardarPlato(newSpecialItem.value);\n          console.log('✅ Plato especial guardado correctamente:', savedPlato);\n          if (isEditingSpecial.value) {\n            // Actualizar el plato existente en la lista\n            const index = specialMenuItems.value.findIndex(item => item.id === savedPlato.id);\n            if (index !== -1) {\n              specialMenuItems.value[index] = {\n                ...savedPlato\n              };\n              showNotification('Plato especial actualizado exitosamente', 'success');\n            }\n            isEditingSpecial.value = false;\n            editingSpecialIndex.value = -1;\n          } else {\n            const existingItem = specialMenuItems.value.find(item => item.name.toLowerCase() === savedPlato.name.toLowerCase());\n            if (existingItem) {\n              const confirmed = await confirm(`Ya existe un plato especial llamado \"${savedPlato.name}\". ¿Desea actualizarlo?`, {\n                title: 'Actualizar plato especial existente'\n              });\n              if (confirmed) {\n                const index = specialMenuItems.value.findIndex(item => item.id === existingItem.id);\n                if (index !== -1) {\n                  // Conservar el ID original pero actualizar los demás datos\n                  const updatedPlato = {\n                    ...savedPlato,\n                    id: existingItem.id\n                  };\n\n                  // Actualizar en la base de datos\n                  await guardarPlato(updatedPlato);\n\n                  // Actualizar en la lista local\n                  specialMenuItems.value[index] = {\n                    ...updatedPlato\n                  };\n                  showNotification('Plato especial actualizado exitosamente', 'success');\n                }\n              } else {\n                return;\n              }\n            } else {\n              // Agregar el nuevo plato a la lista\n              specialMenuItems.value.push({\n                ...savedPlato\n              });\n              showNotification('Plato especial creado exitosamente', 'success');\n            }\n          }\n\n          // Guardar todos los elementos\n          await saveMenuItems([...menuItems.value, ...specialMenuItems.value]);\n\n          // Limpiar el formulario\n          clearSpecialMenuForm();\n        } catch (error) {\n          console.error('❌ Error al guardar plato especial:', error);\n          showNotification(`Error al guardar el plato especial: ${error.message || 'Intente nuevamente'}`, 'error');\n        }\n      } catch (error) {\n        console.error('❌ Error general en saveSpecialMenuItem:', error);\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\n      }\n    };\n    const clearSpecialMenuForm = () => {\n      newSpecialItem.value = {\n        name: '',\n        description: '',\n        price: 0,\n        includesDrink: false,\n        availableQuantity: 0,\n        image: '',\n        id: null\n      };\n      isEditingSpecial.value = false;\n      editingSpecialIndex.value = -1;\n    };\n    const editSpecialMenuItem = index => {\n      newSpecialItem.value = {\n        ...specialMenuItems.value[index]\n      };\n      isEditingSpecial.value = true;\n      editingSpecialIndex.value = index;\n      showSpecialMenuForm.value = true;\n    };\n    const deleteSpecialMenuItem = async index => {\n      try {\n        const item = specialMenuItems.value[index];\n        if (!item) {\n          console.error('Error: Elemento del menú especial no encontrado en el índice', index);\n          await alert('Error: No se encontró el elemento a eliminar');\n          return;\n        }\n\n        // Confirmar eliminación\n        if (!confirm(`¿Estás seguro de que deseas eliminar \"${item.name || 'este plato'}\" del menú especial?`)) {\n          return;\n        }\n\n        // Eliminar del backend MySQL directamente\n        try {\n          console.log(`Eliminando plato con ID: ${item.id} del servidor MySQL`);\n          const response = await fetch(`${apiConfig.API_DOMAIN}/direct-delete?id=${encodeURIComponent(item.id)}`, {\n            method: 'GET',\n            headers: {\n              'Cache-Control': 'no-cache'\n            }\n          });\n          const result = await response.json();\n          console.log('Resultado de la eliminación directa:', result);\n          if (!result.success) {\n            console.error('Error al eliminar plato del servidor:', result.message);\n            alert(`Error al eliminar plato: ${result.message}`);\n          }\n        } catch (serverError) {\n          console.error('Error al comunicarse con el servidor:', serverError);\n        }\n\n        // Eliminar de IndexedDB\n        if (item.id) {\n          try {\n            console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\n            const deleteResult = await deleteMenuItemFromDB(item.id);\n            console.log(`Resultado de la eliminación de IndexedDB: ${deleteResult}`);\n          } catch (deleteError) {\n            console.error('Error al eliminar item del almacén local:', deleteError);\n          }\n        }\n\n        // Eliminar de la lista local\n        specialMenuItems.value.splice(index, 1);\n\n        // Mostrar notificación de éxito\n        showNotification('Plato eliminado correctamente', 'success');\n      } catch (error) {\n        console.error('Error al eliminar elemento del menú especial:', error);\n        showNotification('Error al eliminar el plato', 'error');\n      }\n    };\n    const sellSpecialMenuItem = async index => {\n      try {\n        const item = specialMenuItems.value[index];\n\n        // Validar disponibilidad\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\n          showNotification('Este plato especial está agotado', 'error');\n          return;\n        }\n        const confirmed = await confirm(`¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`);\n        if (confirmed) {\n          try {\n            const newQuantity = item.availableQuantity - 1;\n\n            // Actualizar en la base de datos\n            await updateItemAvailability(item.id, newQuantity);\n\n            // Actualizar en el estado local\n            item.availableQuantity = newQuantity;\n\n            // Registrar la venta\n            const currentDate = new Date().toISOString();\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\n            if (soldItem) {\n              soldItem.quantity += 1;\n              soldItem.date = currentDate;\n            } else {\n              soldItems.value.push({\n                name: item.name,\n                quantity: 1,\n                price: item.price,\n                includesDrink: item.includesDrink,\n                date: currentDate\n              });\n            }\n\n            // Guardar items vendidos\n            await saveSoldItems(soldItems.value);\n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\n            if (newQuantity <= 5) {\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\n            }\n          } catch (error) {\n            console.error('Error al procesar la venta:', error);\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n          }\n        }\n      } catch (error) {\n        console.error('Error al procesar la venta:', error);\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\n      }\n    };\n\n    // Métodos para compartir\n    const shareByWhatsApp = async () => {\n      try {\n        await alert('Procesando imágenes para compartir...');\n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          return;\n        }\n\n        // Combinar platos regulares y especiales\n        const itemsToShare = [...menuItems.value.map(item => ({\n          ...item,\n          isSpecial: false\n        })), ...specialMenuItems.value.map(item => ({\n          ...item,\n          isSpecial: true\n        }))];\n        console.log(`Preparando para compartir ${itemsToShare.length} elementos...`);\n        console.log('Items regulares:', menuItems.value.length);\n        console.log('Items especiales:', specialMenuItems.value.length);\n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        const message = formatShareLinkMessage(url, businessInfo.value.name);\n        const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\n        window.open(whatsappUrl, '_blank');\n      } catch (error) {\n        console.error('Error al compartir por WhatsApp:', error);\n        await alert(`Error al compartir el menú: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n    const copyLink = async () => {\n      try {\n        const loadingMessage = 'Procesando imágenes para compartir...';\n        showCopiedMessage.value = true;\n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\n        if (totalItems > 30) {\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\n          showCopiedMessage.value = false;\n          return;\n        }\n\n        // Combinar platos regulares y especiales\n        const itemsToShare = [...menuItems.value.map(item => ({\n          ...item,\n          isSpecial: false\n        })), ...specialMenuItems.value.map(item => ({\n          ...item,\n          isSpecial: true\n        }))];\n        const menuId = await saveMenu(itemsToShare);\n        const url = `${window.location.origin}/menu/${menuId}`;\n        shareLink.value = url;\n        try {\n          await copyToClipboard(url);\n          showCopiedMessage.value = true;\n          setTimeout(() => {\n            showCopiedMessage.value = false;\n          }, 3000);\n        } catch (clipboardError) {\n          console.error('Error al copiar al portapapeles:', clipboardError);\n          await alert('No se pudo copiar automáticamente. Por favor, copia manualmente este enlace: ' + url);\n        }\n      } catch (error) {\n        console.error('Error al generar enlace para compartir:', error);\n        showCopiedMessage.value = false;\n        await alert(`Error al generar el enlace: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\n      }\n    };\n\n    // Computados\n    const totalSales = computed(() => {\n      if (!soldItems.value || !Array.isArray(soldItems.value)) return 0;\n      return soldItems.value.reduce((total, item) => {\n        const price = Number(item.price) || 0;\n        const quantity = Number(item.quantity) || 0;\n        return total + price * quantity;\n      }, 0);\n    });\n    const filteredSoldItems = computed(() => {\n      if (!soldItems.value || !Array.isArray(soldItems.value)) return [];\n      let items = [...soldItems.value];\n\n      // Filtrar por término de búsqueda\n      if (searchTerm.value) {\n        const term = searchTerm.value.toLowerCase().trim();\n        items = items.filter(item => {\n          if (item && typeof item === 'object') {\n            const name = String(item.name || '').toLowerCase();\n            return name.includes(term);\n          }\n          return false;\n        });\n      }\n\n      // Filtrar por categoría\n      if (categoryFilter.value) {\n        if (categoryFilter.value === 'drinks') {\n          items = items.filter(item => item && item.includesDrink === true);\n        } else if (categoryFilter.value === 'nodrinks') {\n          items = items.filter(item => item && item.includesDrink === false);\n        }\n      }\n\n      // Ordenar según el criterio seleccionado\n      if (sortBy.value) {\n        switch (sortBy.value) {\n          case 'name':\n            items.sort((a, b) => {\n              if (!a || !a.name) return 1;\n              if (!b || !b.name) return -1;\n              return a.name.localeCompare(b.name);\n            });\n            break;\n          case 'quantity-desc':\n            items.sort((a, b) => {\n              const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n              const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n              return qtyB - qtyA;\n            });\n            break;\n          case 'quantity-asc':\n            items.sort((a, b) => {\n              const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n              const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n              return qtyA - qtyB;\n            });\n            break;\n          case 'price-desc':\n            items.sort((a, b) => {\n              const priceA = a && typeof a.price === 'number' ? a.price : 0;\n              const priceB = b && typeof b.price === 'number' ? b.price : 0;\n              return priceB - priceA;\n            });\n            break;\n          case 'price-asc':\n            items.sort((a, b) => {\n              const priceA = a && typeof a.price === 'number' ? a.price : 0;\n              const priceB = b && typeof b.price === 'number' ? b.price : 0;\n              return priceA - priceB;\n            });\n            break;\n          case 'date-desc':\n            items.sort((a, b) => {\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\n              return dateB - dateA;\n            });\n            break;\n          case 'date-asc':\n            items.sort((a, b) => {\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\n              return dateA - dateB;\n            });\n            break;\n          default:\n            break;\n        }\n      }\n      return items;\n    });\n\n    // Funciones para formatear datos\n    const formatPrice = price => {\n      if (isNaN(Number(price))) return '0,00';\n      const fixed = Number(price).toFixed(2);\n      const [intPart, decPart] = fixed.split('.');\n      const formattedIntPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n      return `${formattedIntPart},${decPart}`;\n    };\n    const formatDate = dateStr => {\n      if (!dateStr) return 'N/A';\n      const date = new Date(dateStr);\n      if (isNaN(date.getTime())) return 'Fecha inválida';\n      return new Intl.DateTimeFormat('es-ES', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n    const filterInventoryItems = computed(() => {\n      return items => {\n        if (!items || !Array.isArray(items)) {\n          console.warn('filterInventoryItems recibió un valor no array:', items);\n          return [];\n        }\n        if (searchTerm.value) {\n          const term = searchTerm.value.toLowerCase().trim();\n          items = items.filter(item => {\n            if (item && typeof item === 'object') {\n              const name = String(item.name || '').toLowerCase();\n              return name.includes(term);\n            }\n            return false;\n          });\n        }\n        if (categoryFilter.value) {\n          if (categoryFilter.value === 'drinks') {\n            items = items.filter(item => item && item.includesDrink === true);\n          } else if (categoryFilter.value === 'nodrinks') {\n            items = items.filter(item => item && item.includesDrink === false);\n          }\n        }\n        if (sortBy.value) {\n          switch (sortBy.value) {\n            case 'name':\n              items.sort((a, b) => {\n                const nameA = a && a.name ? a.name.toLowerCase() : '';\n                const nameB = b && b.name ? b.name.toLowerCase() : '';\n                return nameA.localeCompare(nameB);\n              });\n              break;\n            case 'quantity-desc':\n              items.sort((a, b) => {\n                const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n                const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n                return qtyB - qtyA;\n              });\n              break;\n            case 'quantity-asc':\n              items.sort((a, b) => {\n                const qtyA = a && typeof a.quantity === 'number' ? a.quantity : 0;\n                const qtyB = b && typeof b.quantity === 'number' ? b.quantity : 0;\n                return qtyA - qtyB;\n              });\n              break;\n            case 'price-desc':\n              items.sort((a, b) => {\n                const priceA = a && typeof a.price === 'number' ? a.price : 0;\n                const priceB = b && typeof b.price === 'number' ? b.price : 0;\n                return priceB - priceA;\n              });\n              break;\n            case 'price-asc':\n              items.sort((a, b) => {\n                const priceA = a && typeof a.price === 'number' ? a.price : 0;\n                const priceB = b && typeof b.price === 'number' ? b.price : 0;\n                return priceA - priceB;\n              });\n              break;\n            case 'date-desc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateB - dateA;\n              });\n              break;\n            case 'date-asc':\n              items.sort((a, b) => {\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\n                return dateA - dateB;\n              });\n              break;\n            default:\n              break;\n          }\n        }\n        return items;\n      };\n    });\n    const exportToExcel = () => {\n      // Crear un array con los datos a exportar\n      const data = [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal', 'Acciones'], ...filteredSoldItems.value.map(item => [item.name, item.includesDrink ? 'Con refresco' : 'Sin refresco', item.quantity, `$${formatPrice(item.price)}`, formatDate(item.date), `$${formatPrice(item.quantity * item.price)}`, '']), ['', '', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]];\n\n      // Crear un libro de Excel y una hoja de cálculo\n      const ws = XLSX.utils.aoa_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Ventas');\n\n      // Generar el archivo Excel y descargarlo\n      const excelBuffer = XLSX.write(wb, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      const blob = new Blob([excelBuffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      saveAs(blob, `ventas_${new Date().toLocaleDateString()}.xlsx`);\n    };\n    const exportToPDF = () => {\n      // Crear un nuevo documento PDF\n      const doc = new jsPDF();\n\n      // Añadir título\n      doc.setFontSize(18);\n      doc.text('Reporte de Ventas', 14, 22);\n      doc.setFontSize(11);\n      doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 32);\n\n      // Crear la tabla con los datos\n      const tableData = filteredSoldItems.value.map(item => [item.name, item.includesDrink ? 'Con refresco' : 'Sin refresco', item.quantity, `$${formatPrice(item.price)}`, formatDate(item.date), `$${formatPrice(item.quantity * item.price)}`]);\n\n      // Añadir la tabla\n      doc.autoTable({\n        head: [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal']],\n        body: tableData,\n        foot: [['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]],\n        startY: 40,\n        theme: 'striped',\n        headStyles: {\n          fillColor: [76, 175, 80]\n        },\n        footStyles: {\n          fillColor: [240, 240, 240],\n          textColor: [0, 0, 0],\n          fontStyle: 'bold'\n        }\n      });\n\n      // Guardar el PDF de exportación\n      doc.save(`ventas_${new Date().toLocaleDateString()}.pdf`);\n    };\n    const returnSoldItem = async item => {\n      try {\n        // Buscar el plato en el menú para incrementar su stock\n        const menuItem = menuItems.value.find(mi => mi.name === item.name) || specialMenuItems.value.find(smi => smi.name === item.name);\n        if (!menuItem) {\n          showNotification('No se encontró el plato en el inventario actual', 'error');\n          return;\n        }\n        const confirmed = await confirm(`¿Desea devolver una unidad de \"${item.name}\" al stock?`);\n        if (confirmed) {\n          // Incrementar el stock del plato\n          const newQuantity = (menuItem.availableQuantity || 0) + 1;\n\n          // Actualizar en la base de datos\n          await updateItemAvailability(menuItem.id, newQuantity);\n\n          // Actualizar en el estado local\n          menuItem.availableQuantity = newQuantity;\n\n          // Reducir la cantidad vendida\n          if (item.quantity > 1) {\n            item.quantity -= 1;\n          } else {\n            // Si solo queda 1, eliminar el item de la lista\n            const index = soldItems.value.findIndex(si => si.name === item.name);\n            if (index !== -1) {\n              soldItems.value.splice(index, 1);\n            }\n          }\n\n          // Guardar items vendidos actualizados\n          await saveSoldItems(soldItems.value);\n          showNotification(`Se ha devuelto una unidad de ${item.name} al stock`, 'success');\n        }\n      } catch (error) {\n        console.error('Error al devolver plato al stock:', error);\n        showNotification('Error al procesar la devolución. Por favor, intente nuevamente.', 'error');\n      }\n    };\n    const canClearList = computed(() => {\n      if (soldItems.value.length === 0) return false;\n\n      // Encontrar la fecha de venta más reciente\n      const mostRecentDate = soldItems.value.reduce((latest, item) => {\n        const itemDate = new Date(item.date);\n        return itemDate > latest ? itemDate : latest;\n      }, new Date(0));\n\n      // Calcular si han pasado 24 horas\n      const now = new Date();\n      const hoursPassed = (now - mostRecentDate) / (1000 * 60 * 60);\n      return hoursPassed >= 24;\n    });\n    const clearListTooltip = computed(() => {\n      if (soldItems.value.length === 0) {\n        return 'No hay platos vendidos para borrar';\n      }\n      if (canClearList.value) {\n        return 'Borrar todos los platos vendidos';\n      } else {\n        // Encontrar la fecha de venta más reciente\n        const mostRecentDate = soldItems.value.reduce((latest, item) => {\n          const itemDate = new Date(item.date);\n          return itemDate > latest ? itemDate : latest;\n        }, new Date(0));\n\n        // Calcular tiempo restante\n        const now = new Date();\n        const hoursPassed = (now - mostRecentDate) / (1000 * 60 * 60);\n        const hoursRemaining = Math.ceil(24 - hoursPassed);\n        return `Debe esperar ${hoursRemaining} horas más para borrar la lista`;\n      }\n    });\n    const clearAllSoldItems = async () => {\n      if (!canClearList.value) {\n        showNotification('Debe esperar 24 horas desde la última venta para borrar la lista', 'error');\n        return;\n      }\n      const confirmed = await confirm('¿Está seguro de que desea borrar toda la lista de platos vendidos? Esta acción no se puede deshacer.');\n      if (confirmed) {\n        try {\n          // Vaciar la lista de platos vendidos\n          soldItems.value = [];\n\n          // Guardar en la base de datos\n          await saveSoldItems([]);\n          showNotification('Lista de platos vendidos borrada exitosamente', 'success');\n        } catch (error) {\n          console.error('Error al borrar la lista de platos vendidos:', error);\n          showNotification('Error al borrar la lista. Por favor, intente nuevamente.', 'error');\n        }\n      }\n    };\n\n    // Función para mostrar notificaciones\n    const showNotification = (message, type) => {\n      notification.value = {\n        show: true,\n        message,\n        type\n      };\n      setTimeout(() => {\n        notification.value.show = false;\n      }, 3000); // 3 segundos como acordado\n    };\n    const checkAvailabilityToast = async itemId => {\n      try {\n        // Buscar el item en ambos menús\n        const item = menuItems.value.find(i => i.id === itemId) || specialMenuItems.value.find(i => i.id === itemId);\n        if (item) {\n          // Asegurar que availableQuantity sea un número válido\n          const availableQty = parseInt(item.availableQuantity);\n          if (isNaN(availableQty)) {\n            showNotification('Cantidad no disponible o no válida', 'warning');\n          } else if (availableQty > 5) {\n            showNotification(`Disponible: ${availableQty} unidades`, 'success');\n          } else if (availableQty > 0) {\n            showNotification(`¡Quedan solo ${availableQty} unidades!`, 'warning');\n          } else {\n            showNotification('Producto agotado', 'error');\n          }\n        } else {\n          showNotification('No se encontró el producto', 'error');\n        }\n      } catch (error) {\n        console.error('Error al verificar disponibilidad:', error);\n        showNotification('Error al verificar la disponibilidad', 'error');\n      }\n    };\n\n    // Añadir propiedad isEmployee\n    const isEmployee = computed(() => {\n      return hasRole('Empleado') && !hasRole('Administrador') && !hasRole('Superadministrador');\n    });\n    const removeDuplicates = array => {\n      return [...new Set(array)];\n    };\n    return {\n      businessInfo,\n      showBusinessForm,\n      toggleBusinessForm,\n      onLogoChange,\n      saveBusinessInfo,\n      clearBusinessForm,\n      paymentInfo,\n      showPaymentForm,\n      togglePaymentForm,\n      onQRImageChange,\n      onNequiImageChange,\n      savePaymentInfo,\n      clearPaymentForm,\n      newItem,\n      menuItems,\n      showMenuForm,\n      isEditing,\n      toggleMenuForm,\n      onImageChange,\n      saveMenuItem,\n      clearMenuForm,\n      editMenuItem,\n      deleteMenuItem,\n      sellMenuItem,\n      soldItems,\n      totalSales,\n      searchTerm,\n      sortBy,\n      categoryFilter,\n      selectedChartType,\n      shareLink,\n      showCopiedMessage,\n      shareByWhatsApp,\n      copyLink,\n      exportToExcel,\n      exportToPDF,\n      filteredSoldItems,\n      migrationStatus,\n      chartError,\n      handleChartError,\n      notification,\n      newSpecialItem,\n      specialMenuItems,\n      showSpecialMenuForm,\n      isEditingSpecial,\n      editingSpecialIndex,\n      toggleSpecialMenuForm,\n      onSpecialImageChange,\n      saveSpecialMenuItem,\n      clearSpecialMenuForm,\n      editSpecialMenuItem,\n      deleteSpecialMenuItem,\n      sellSpecialMenuItem,\n      toast,\n      showNotification,\n      checkAvailabilityToast,\n      isEmployee,\n      filterInventoryItems,\n      returnSoldItem,\n      canClearList,\n      clearListTooltip,\n      clearAllSoldItems,\n      removeDuplicates,\n      formatPrice,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","watch","nextTick","useRoute","useRouter","QrcodeVue","html2canvas","chroma","isAdmin","jsPDF","qrcode","apiConfig","getBusinessInfo","getMenuItems","getSoldItems","compressImage","saveBusinessInfo","saveMenu","SalesChartComponent","name","components","props","viewOnly","type","Boolean","default","setup","businessInfo","description","contact","address","logo","showBusinessForm","paymentInfo","qrTitle","qrImage","nequiNumber","nequiImage","showPaymentForm","newItem","price","includesDrink","availableQuantity","image","id","menuItems","showMenuForm","isEditing","editingIndex","soldItems","searchTerm","sortBy","categoryFilter","selectedChartType","shareLink","showCopiedMessage","migrationStatus","inProgress","completed","message","chartError","toast","show","handleChartError","error","console","value","notification","timeout","newSpecialItem","specialMenuItems","showSpecialMenuForm","isEditingSpecial","editingSpecialIndex","hasLocalData","localStorage","getItem","migrationResult","migrateFromLocalStorage","removeItem","dbBusinessInfo","dbMenuItems","length","regularItems","filter","item","isSpecial","specialItems","dbSoldItems","setTimeout","toggleBusinessForm","onLogoChange","event","file","target","files","reader","FileReader","onload","e","compressedLogo","result","readAsDataURL","handleSaveBusinessInfo","clearTimeout","clearBusinessForm","confirmed","confirm","togglePaymentForm","onQRImageChange","compressedImage","onNequiImageChange","savePaymentInfo","clearPaymentForm","toggleMenuForm","clearMenuForm","onImageChange","saveMenuItem","showNotification","Date","now","Math","random","toString","substring","log","savedPlato","guardarPlato","index","findIndex","push","saveMenuItems","editMenuItem","deleteMenuItem","alert","response","fetch","API_DOMAIN","encodeURIComponent","method","headers","json","success","serverError","deleteResult","deleteMenuItemFromDB","deleteError","splice","sellMenuItem","newQuantity","updateItemAvailability","currentDate","toISOString","soldItem","find","sold","quantity","date","saveSoldItems","toggleSpecialMenuForm","clearSpecialMenuForm","onSpecialImageChange","saveSpecialMenuItem","existingItem","toLowerCase","title","updatedPlato","editSpecialMenuItem","deleteSpecialMenuItem","sellSpecialMenuItem","shareByWhatsApp","totalItems","itemsToShare","map","menuId","url","window","location","origin","formatShareLinkMessage","whatsappUrl","open","copyLink","loadingMessage","copyToClipboard","clipboardError","totalSales","Array","isArray","reduce","total","Number","filteredSoldItems","items","term","trim","String","includes","sort","a","b","localeCompare","qtyA","qtyB","priceA","priceB","dateA","dateB","formatPrice","isNaN","fixed","toFixed","intPart","decPart","split","formattedIntPart","replace","formatDate","dateStr","getTime","Intl","DateTimeFormat","day","month","year","hour","minute","format","filterInventoryItems","warn","nameA","nameB","exportToExcel","data","ws","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","excelBuffer","write","bookType","blob","Blob","saveAs","toLocaleDateString","exportToPDF","doc","setFontSize","text","tableData","autoTable","head","body","foot","startY","theme","headStyles","fillColor","footStyles","textColor","fontStyle","save","returnSoldItem","menuItem","mi","smi","si","canClearList","mostRecentDate","latest","itemDate","hoursPassed","clearListTooltip","hoursRemaining","ceil","clearAllSoldItems","checkAvailabilityToast","itemId","i","availableQty","parseInt","isEmployee","hasRole","removeDuplicates","array","Set"],"sources":["F:\\Driver google\\VUE.JS-2\\VUE-JS\\websap\\src\\components\\MenuComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"menu-container\">\r\n    <!-- Notificaciones -->\r\n    <div v-if=\"notification.show\" :class=\"['notification', notification.type]\">\r\n      <div>{{ notification.message }}</div>\r\n      <button class=\"notification-close\" @click=\"notification.show = false\">×</button>\r\n    </div>\r\n\r\n    <!-- Estado de migración -->\r\n    <div v-if=\"migrationStatus.inProgress\" class=\"migration-status\" :class=\"{ completed: migrationStatus.completed }\">\r\n      <div class=\"migration-message\">\r\n        <div v-if=\"!migrationStatus.completed\" class=\"loading-spinner\"></div>\r\n        <span>{{ migrationStatus.message }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Toast -->\r\n    <div v-if=\"toast.show\" :class=\"['toast-notification', toast.type]\">\r\n      {{ toast.message }}\r\n    </div>\r\n\r\n    <!-- Información del Negocio -->\r\n    <section>\r\n      <h2>Información del Negocio</h2>\r\n      <button class=\"toggle-button\" @click=\"toggleBusinessForm\" :disabled=\"viewOnly\">\r\n        {{ showBusinessForm ? 'Ocultar Formulario' : 'Editar Información' }}\r\n      </button>\r\n\r\n      <div v-if=\"showBusinessForm && !viewOnly\">\r\n        <form @submit.prevent=\"saveBusinessInfo\">\r\n          <div>\r\n            <label for=\"business-name\">Nombre del Negocio:</label>\r\n            <input id=\"business-name\" v-model=\"businessInfo.name\" type=\"text\" placeholder=\"Nombre de tu restaurante\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"business-description\">Descripción:</label>\r\n            <textarea id=\"business-description\" v-model=\"businessInfo.description\" rows=\"3\" \r\n              placeholder=\"Breve descripción del restaurante\"></textarea>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"business-contact\">Contacto:</label>\r\n            <input id=\"business-contact\" v-model=\"businessInfo.contact\" type=\"text\" \r\n              placeholder=\"Teléfono o correo electrónico\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"business-address\">Dirección:</label>\r\n            <input id=\"business-address\" v-model=\"businessInfo.address\" type=\"text\" \r\n              placeholder=\"Dirección del restaurante\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"business-logo\">Logo:</label>\r\n            <input id=\"business-logo\" type=\"file\" accept=\"image/*\" @change=\"onLogoChange\" />\r\n            <img v-if=\"businessInfo.logo\" :src=\"businessInfo.logo\" alt=\"Logo del negocio\" \r\n              style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\" />\r\n          </div>\r\n\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">Guardar Información</button>\r\n            <button type=\"button\" class=\"clear-button\" @click=\"clearBusinessForm\">\r\n              Limpiar Formulario\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div v-else class=\"business-preview\">\r\n        <h3>{{ businessInfo.name || 'Nombre del Restaurante' }}</h3>\r\n        <p>{{ businessInfo.description || 'Sin descripción' }}</p>\r\n        <p><strong>Contacto:</strong> {{ businessInfo.contact || 'No especificado' }}</p>\r\n        <p><strong>Dirección:</strong> {{ businessInfo.address || 'No especificada' }}</p>\r\n        <div v-if=\"businessInfo.logo\">\r\n          <img :src=\"businessInfo.logo\" alt=\"Logo del negocio\" \r\n            style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Información de Pago -->\r\n    <section>\r\n      <h2>Información de Pago</h2>\r\n      <button class=\"toggle-button\" @click=\"togglePaymentForm\" :disabled=\"viewOnly\">\r\n        {{ showPaymentForm ? 'Ocultar Formulario' : 'Editar Información de Pago' }}\r\n      </button>\r\n\r\n      <div v-if=\"showPaymentForm && !viewOnly\">\r\n        <form @submit.prevent=\"savePaymentInfo\">\r\n          <div>\r\n            <label for=\"qr-title\">Título para QR:</label>\r\n            <input id=\"qr-title\" v-model=\"paymentInfo.qrTitle\" type=\"text\" \r\n              placeholder=\"Título para el código QR de pago\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"qr-image\">Imagen QR:</label>\r\n            <input id=\"qr-image\" type=\"file\" accept=\"image/*\" @change=\"onQRImageChange\" />\r\n            <img v-if=\"paymentInfo.qrImage\" :src=\"paymentInfo.qrImage\" alt=\"Código QR\" \r\n              style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"nequi-number\">Número Nequi:</label>\r\n            <input id=\"nequi-number\" v-model=\"paymentInfo.nequiNumber\" type=\"text\" \r\n              placeholder=\"Número de cuenta Nequi\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"nequi-image\">Imagen Nequi:</label>\r\n            <input id=\"nequi-image\" type=\"file\" accept=\"image/*\" @change=\"onNequiImageChange\" />\r\n            <img v-if=\"paymentInfo.nequiImage\" :src=\"paymentInfo.nequiImage\" alt=\"Código Nequi\" \r\n              style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\" />\r\n          </div>\r\n\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">Guardar Información</button>\r\n            <button type=\"button\" class=\"clear-button\" @click=\"clearPaymentForm\">\r\n              Limpiar Formulario\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"business-preview\">\r\n        <h3>Información de Pago</h3>\r\n        <p><strong>Título QR:</strong> {{ businessInfo.paymentInfo?.qrTitle || 'No especificado' }}</p>\r\n        <div v-if=\"businessInfo.paymentInfo?.qrImage\">\r\n          <img :src=\"businessInfo.paymentInfo.qrImage\" alt=\"Código QR\" \r\n            style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\" />\r\n        </div>\r\n        <p><strong>Número Nequi:</strong> {{ businessInfo.paymentInfo?.nequiNumber || 'No especificado' }}</p>\r\n        <div v-if=\"businessInfo.paymentInfo?.nequiImage\">\r\n          <img :src=\"businessInfo.paymentInfo.nequiImage\" alt=\"Código Nequi\" \r\n            style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Menú -->\r\n    <section v-if=\"!viewOnly || menuItems.length > 0\">\r\n      <h2>Menú</h2>\r\n      <button class=\"toggle-button\" @click=\"toggleMenuForm\" :disabled=\"viewOnly\">\r\n        {{ showMenuForm ? 'Ocultar Formulario' : 'Agregar Plato' }}\r\n      </button>\r\n\r\n      <div v-if=\"showMenuForm && !viewOnly\">\r\n        <form @submit.prevent=\"saveMenuItem\">\r\n          <div>\r\n            <label for=\"item-name\">Nombre del Plato:</label>\r\n            <input id=\"item-name\" v-model=\"newItem.name\" type=\"text\" placeholder=\"Nombre del plato\" required />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"item-description\">Descripción:</label>\r\n            <textarea id=\"item-description\" v-model=\"newItem.description\" rows=\"3\" \r\n              placeholder=\"Descripción del plato\"></textarea>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"item-price\">Precio:</label>\r\n            <input id=\"item-price\" v-model.number=\"newItem.price\" type=\"number\" min=\"0\" step=\"0.01\" required />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"item-quantity\">Cantidad Disponible:</label>\r\n            <input id=\"item-quantity\" v-model.number=\"newItem.availableQuantity\" type=\"number\" min=\"0\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"newItem.includesDrink\" />\r\n              Incluye Bebida\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"item-image\">Imagen:</label>\r\n            <input id=\"item-image\" type=\"file\" accept=\"image/*\" @change=\"onImageChange\" />\r\n            <img v-if=\"newItem.image\" :src=\"newItem.image\" alt=\"Imagen del plato\" \r\n              style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\" />\r\n          </div>\r\n\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">\r\n              {{ isEditing ? 'Actualizar Plato' : 'Guardar Plato' }}\r\n            </button>\r\n            <button type=\"button\" class=\"clear-button\" @click=\"clearMenuForm\">\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div v-if=\"menuItems.length > 0\" class=\"menu-items-list\">\r\n        <div v-for=\"(item, index) in menuItems\" :key=\"item.id\" class=\"menu-item-card\">\r\n          <div class=\"menu-item-image-container\">\r\n            <img v-if=\"item.image\" :src=\"item.image\" alt=\"Imagen de plato\" class=\"menu-item-image\" />\r\n            <div v-else class=\"no-image-placeholder\">\r\n              <span>Sin imagen</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"menu-item-details\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p>{{ item.description }}</p>\r\n            <p><strong>Precio:</strong> ${{ formatPrice(item.price) }}</p>\r\n            <p>\r\n              <strong>Disponible:</strong> \r\n              <span :style=\"{ color: item.availableQuantity <= 5 ? 'red' : 'green' }\">\r\n                {{ item.availableQuantity }} unidades\r\n              </span>\r\n              <button \r\n                @click=\"checkAvailabilityToast(item.id)\"\r\n                style=\"border: none; background: none; cursor: pointer; color: #007bff;\"\r\n              >\r\n                <i class=\"action-icon\">&#128269;</i>\r\n              </button>\r\n            </p>\r\n            <p>\r\n              <strong>Incluye bebida:</strong> \r\n              {{ item.includesDrink ? 'Sí' : 'No' }}\r\n            </p>\r\n          </div>\r\n          <div class=\"menu-item-actions\" v-if=\"!viewOnly\">\r\n            <button class=\"edit-button\" @click=\"editMenuItem(index)\">\r\n              Editar\r\n            </button>\r\n            <button class=\"sell-button\" @click=\"sellMenuItem(index)\" \r\n              :disabled=\"!item.availableQuantity || item.availableQuantity <= 0\">\r\n              Vender\r\n            </button>\r\n            <button class=\"delete-button\" @click=\"deleteMenuItem(index)\">\r\n              Eliminar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <p>No hay platos en el menú. Agregue algunos para comenzar.</p>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Platos Especiales -->\r\n    <section v-if=\"!viewOnly || specialMenuItems.length > 0\">\r\n      <h2>Platos Especiales</h2>\r\n      <button class=\"toggle-button\" @click=\"toggleSpecialMenuForm\" :disabled=\"viewOnly\">\r\n        {{ showSpecialMenuForm ? 'Ocultar Formulario' : 'Agregar Plato Especial' }}\r\n      </button>\r\n\r\n      <div v-if=\"showSpecialMenuForm && !viewOnly\">\r\n        <form @submit.prevent=\"saveSpecialMenuItem\">\r\n          <div>\r\n            <label for=\"special-item-name\">Nombre del Plato Especial:</label>\r\n            <input id=\"special-item-name\" v-model=\"newSpecialItem.name\" type=\"text\" \r\n              placeholder=\"Nombre del plato especial\" required />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"special-item-description\">Descripción:</label>\r\n            <textarea id=\"special-item-description\" v-model=\"newSpecialItem.description\" rows=\"3\" \r\n              placeholder=\"Descripción del plato especial\"></textarea>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"special-item-price\">Precio:</label>\r\n            <input id=\"special-item-price\" v-model.number=\"newSpecialItem.price\" type=\"number\" min=\"0\" step=\"0.01\" required />\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"special-item-quantity\">Cantidad Disponible:</label>\r\n            <input id=\"special-item-quantity\" v-model.number=\"newSpecialItem.availableQuantity\" type=\"number\" min=\"0\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              <input type=\"checkbox\" v-model=\"newSpecialItem.includesDrink\" />\r\n              Incluye Bebida\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"special-item-image\">Imagen:</label>\r\n            <input id=\"special-item-image\" type=\"file\" accept=\"image/*\" @change=\"onSpecialImageChange\" />\r\n            <img v-if=\"newSpecialItem.image\" :src=\"newSpecialItem.image\" alt=\"Imagen del plato especial\" \r\n              style=\"max-width: 200px; max-height: 200px; margin-top: 10px;\" />\r\n          </div>\r\n\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">\r\n              {{ isEditingSpecial ? 'Actualizar Plato Especial' : 'Guardar Plato Especial' }}\r\n            </button>\r\n            <button type=\"button\" class=\"clear-button\" @click=\"clearSpecialMenuForm\">\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div v-if=\"specialMenuItems.length > 0\" class=\"menu-special-items-list\">\r\n        <div v-for=\"(item, index) in specialMenuItems\" :key=\"item.id\" class=\"menu-item-card\">\r\n          <div class=\"menu-item-image-container\">\r\n            <img v-if=\"item.image\" :src=\"item.image\" alt=\"Imagen de plato especial\" class=\"menu-item-image\" />\r\n            <div v-else class=\"no-image-placeholder\">\r\n              <span>Sin imagen</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"menu-item-details\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p>{{ item.description }}</p>\r\n            <p><strong>Precio:</strong> ${{ formatPrice(item.price) }}</p>\r\n            <p>\r\n              <strong>Disponible:</strong> \r\n              <span :style=\"{ color: item.availableQuantity <= 5 ? 'red' : 'green' }\">\r\n                {{ item.availableQuantity }} unidades\r\n              </span>\r\n              <button \r\n                @click=\"checkAvailabilityToast(item.id)\"\r\n                style=\"border: none; background: none; cursor: pointer; color: #007bff;\"\r\n              >\r\n                <i class=\"action-icon\">&#128269;</i>\r\n              </button>\r\n            </p>\r\n            <p>\r\n              <strong>Incluye bebida:</strong> \r\n              {{ item.includesDrink ? 'Sí' : 'No' }}\r\n            </p>\r\n          </div>\r\n          <div class=\"menu-item-actions\" v-if=\"!viewOnly\">\r\n            <button class=\"edit-button\" @click=\"editSpecialMenuItem(index)\">\r\n              Editar\r\n            </button>\r\n            <button class=\"sell-button\" @click=\"sellSpecialMenuItem(index)\" \r\n              :disabled=\"!item.availableQuantity || item.availableQuantity <= 0\">\r\n              Vender\r\n            </button>\r\n            <button class=\"delete-button\" @click=\"deleteSpecialMenuItem(index)\">\r\n              Eliminar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <p>No hay platos especiales en el menú. Agregue algunos para comenzar.</p>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Inventario de Platos Vendidos -->\r\n    <section>\r\n      <h2>Inventario de Platos Vendidos</h2>\r\n      \r\n      <!-- Controles de búsqueda, filtrado y acciones -->\r\n      <div class=\"inventory-controls\">\r\n        <div class=\"inventory-search-container\">\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"searchTerm\" \r\n            placeholder=\"Buscar platos...\"\r\n            class=\"inventory-search-input\"\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"inventory-filters\">\r\n          <select v-model=\"sortBy\" class=\"inventory-filter\">\r\n            <option value=\"\">Ordenar por</option>\r\n            <option value=\"name\">Nombre (A-Z)</option>\r\n            <option value=\"quantity-desc\">Mayor cantidad vendida</option>\r\n            <option value=\"quantity-asc\">Menor cantidad vendida</option>\r\n            <option value=\"price-desc\">Mayor precio</option>\r\n            <option value=\"price-asc\">Menor precio</option>\r\n            <option value=\"date-desc\">Más reciente</option>\r\n            <option value=\"date-asc\">Más antiguo</option>\r\n          </select>\r\n          \r\n          <select v-model=\"categoryFilter\" class=\"inventory-filter\">\r\n            <option value=\"\">Todas las categorías</option>\r\n            <option value=\"drinks\">Con bebida</option>\r\n            <option value=\"nodrinks\">Sin bebida</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div class=\"inventory-actions\">\r\n          <button @click=\"exportToExcel\" class=\"export-button excel\" title=\"Exportar a Excel\">\r\n            <i class=\"action-icon\">📊</i> Excel\r\n          </button>\r\n          \r\n          <button @click=\"exportToPDF\" class=\"export-button pdf\" title=\"Exportar a PDF\">\r\n            <i class=\"action-icon\">📄</i> PDF\r\n          </button>\r\n          \r\n          <div class=\"tooltip-container\">\r\n            <button \r\n              @click=\"clearAllSoldItems\" \r\n              class=\"clear-all-button\" \r\n              :disabled=\"!canClearList\"\r\n              :title=\"clearListTooltip\"\r\n            >\r\n              <i class=\"action-icon\">🗑️</i> Limpiar\r\n            </button>\r\n            <div class=\"tooltip\" :class=\"{ 'tooltip-visible': !canClearList && soldItems.length > 0 }\">\r\n              {{ clearListTooltip }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Gráfico de ventas -->\r\n      <div class=\"sales-chart-container\">\r\n        <SalesChartComponent \r\n          :items=\"filteredSoldItems\" \r\n          :chart-type=\"selectedChartType\"\r\n          @error=\"handleChartError\"\r\n        />\r\n        <div v-if=\"chartError\" style=\"color: red; padding: 10px;\">\r\n          Error al cargar el gráfico: {{ chartError }}\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Selector de tipo de gráfico -->\r\n      <div style=\"margin: 15px 0;\">\r\n        <label style=\"font-weight: bold; margin-right: 10px;\">Tipo de gráfico:</label>\r\n        <select v-model=\"selectedChartType\" style=\"padding: 8px; border-radius: 4px;\">\r\n          <option value=\"bar\">Barras</option>\r\n          <option value=\"line\">Líneas</option>\r\n          <option value=\"pie\">Circular</option>\r\n          <option value=\"doughnut\">Dona</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <!-- Tabla de inventario -->\r\n      <div class=\"inventory-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nombre del Plato</th>\r\n              <th>Categoría</th>\r\n              <th>Cantidad Vendida</th>\r\n              <th>Precio por Unidad</th>\r\n              <th>Fecha de Venta</th>\r\n              <th>Subtotal</th>\r\n              <th v-if=\"!viewOnly\">Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(item, index) in filteredSoldItems\" :key=\"index\" \r\n                :class=\"{ 'alternate-row': index % 2 === 1 }\">\r\n              <td>{{ item.name }}</td>\r\n              <td>{{ item.includesDrink ? 'Con refresco' : 'Sin refresco' }}</td>\r\n              <td>{{ item.quantity }}</td>\r\n              <td>${{ formatPrice(item.price) }}</td>\r\n              <td>{{ formatDate(item.date) }}</td>\r\n              <td>${{ formatPrice(item.quantity * item.price) }}</td>\r\n              <td v-if=\"!viewOnly\">\r\n                <button @click=\"returnSoldItem(item)\" class=\"return-button\" title=\"Devolver al stock\">\r\n                  <i class=\"action-icon\">↩️</i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr v-if=\"filteredSoldItems.length === 0\">\r\n              <td colspan=\"7\" style=\"text-align: center; padding: 20px;\">\r\n                No hay platos vendidos que coincidan con la búsqueda\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td colspan=\"5\" style=\"text-align: right;\"><strong>Total:</strong></td>\r\n              <td colspan=\"2\"><strong>${{ formatPrice(totalSales) }}</strong></td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Compartir Menú -->\r\n    <section v-if=\"!viewOnly && (menuItems.length > 0 || specialMenuItems.length > 0)\">\r\n      <h2>Compartir Menú</h2>\r\n      <p>Comparta su menú con clientes a través de WhatsApp o copiando el enlace.</p>\r\n      \r\n      <div class=\"share-buttons\">\r\n        <button @click=\"shareByWhatsApp\" class=\"whatsapp-button\">\r\n          <span class=\"emoji\">📱</span> Compartir por WhatsApp\r\n        </button>\r\n        <button @click=\"copyLink\" class=\"copy-button\">\r\n          <span class=\"emoji\">📋</span> Copiar enlace\r\n        </button>\r\n      </div>\r\n      \r\n      <div v-if=\"showCopiedMessage\" class=\"copied-message\">\r\n        ¡Enlace copiado al portapapeles!\r\n      </div>\r\n      \r\n      <div v-if=\"shareLink\" class=\"share-link\">\r\n        {{ shareLink }}\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted, watch, nextTick } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport QrcodeVue from 'qrcode.vue';\r\nimport html2canvas from 'html2canvas';\r\nimport chroma from 'chroma-js';\r\nimport { isAdmin } from '../services/authService';\r\nimport { jsPDF } from 'jspdf';\r\nimport qrcode from 'qrcode';\r\nimport apiConfig from '../config/apiConfig';\r\nimport { getBusinessInfo, getMenuItems, getSoldItems, compressImage, saveBusinessInfo } from '../services/storageService';\r\nimport { saveMenu } from '../services/menuService';\r\n\r\n// ...existing code...\r\n\r\nimport SalesChartComponent from '../components/SalesChartComponent.vue';\r\n\r\nexport default {\r\n  name: 'MenuComponent',\r\n  components: {\r\n    SalesChartComponent\r\n  },\r\n  props: {\r\n    viewOnly: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  setup(props) {\r\n    // Estado para información del negocio\r\n    const businessInfo = ref({\r\n      name: '',\r\n      description: '',\r\n      contact: '',\r\n      address: '',\r\n      logo: ''\r\n    });\r\n    const showBusinessForm = ref(false);\r\n\r\n    // Estado para información de pago\r\n    const paymentInfo = ref({\r\n      qrTitle: '',\r\n      qrImage: '',\r\n      nequiNumber: '',\r\n      nequiImage: ''\r\n    });\r\n    const showPaymentForm = ref(false);\r\n\r\n    // Estado para platos del menú\r\n    const newItem = ref({\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      includesDrink: false,\r\n      availableQuantity: 0,\r\n      image: '',\r\n      id: null\r\n    });\r\n    const menuItems = ref([]);\r\n    const showMenuForm = ref(false);\r\n    const isEditing = ref(false);\r\n    const editingIndex = ref(-1);\r\n\r\n    // Estado para ventas e inventario\r\n    const soldItems = ref([]);\r\n    const searchTerm = ref('');\r\n    const sortBy = ref('');\r\n    const categoryFilter = ref('');\r\n    const selectedChartType = ref('bar');\r\n\r\n    // Estado para compartir\r\n    const shareLink = ref('');\r\n    const showCopiedMessage = ref(false);\r\n    \r\n    // Estado para mostrar progreso de migración\r\n    const migrationStatus = ref({\r\n      inProgress: false,\r\n      completed: false,\r\n      message: ''\r\n    });\r\n\r\n    // Estado para errores del gráfico\r\n    const chartError = ref(null);\r\n    \r\n    // Primero, añadir el componente Toast\r\n    const toast = ref({\r\n      show: false,\r\n      message: '',\r\n      type: 'success' // success, error, warning\r\n    });\r\n\r\n    // Manejar errores del gráfico\r\n    const handleChartError = (error) => {\r\n      console.error(\"Error en el gráfico:\", error);\r\n      chartError.value = error;\r\n    };\r\n\r\n    // Estado para mensajes de notificación\r\n    const notification = ref({\r\n      show: false,\r\n      message: '',\r\n      type: 'success', // 'success', 'error'\r\n      timeout: null\r\n    });\r\n\r\n    // Estado para platos especiales\r\n    const newSpecialItem = ref({\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      includesDrink: false,\r\n      availableQuantity: 0,\r\n      image: '',\r\n      id: null\r\n    });\r\n    const specialMenuItems = ref([]);\r\n    const showSpecialMenuForm = ref(false);\r\n    const isEditingSpecial = ref(false);\r\n    const editingSpecialIndex = ref(-1);\r\n\r\n    // Cargar datos guardados\r\n    onMounted(async () => {\r\n      try {\r\n        migrationStatus.value.inProgress = true;\r\n        migrationStatus.value.message = 'Cargando datos...';\r\n        \r\n        const hasLocalData = localStorage.getItem('businessInfo') || \r\n                             localStorage.getItem('menuItems') ||\r\n                             localStorage.getItem('soldItems');\r\n          \r\n        if (hasLocalData) {\r\n          migrationStatus.value.message = 'Migrando datos desde localStorage a IndexedDB...';\r\n          \r\n          const migrationResult = await migrateFromLocalStorage();\r\n          \r\n          if (migrationResult) {\r\n            migrationStatus.value.completed = true;\r\n            migrationStatus.value.message = 'Migración completada exitosamente';\r\n            localStorage.removeItem('businessInfo');\r\n            localStorage.removeItem('menuItems');\r\n            localStorage.removeItem('soldItems');\r\n          } else {\r\n            migrationStatus.value.message = 'Error en la migración de datos';\r\n          }\r\n        }\r\n\r\n        const dbBusinessInfo = await getBusinessInfo();\r\n        if (dbBusinessInfo && dbBusinessInfo.name) {\r\n          businessInfo.value = dbBusinessInfo;\r\n        }\r\n\r\n        const dbMenuItems = await getMenuItems();\r\n        if (dbMenuItems && dbMenuItems.length > 0) {\r\n          // Separar los platos regulares de los especiales\r\n          const regularItems = dbMenuItems.filter(item => !item.isSpecial);\r\n          const specialItems = dbMenuItems.filter(item => item.isSpecial === true);\r\n          \r\n          menuItems.value = regularItems;\r\n          \r\n          if (specialItems.length > 0) {\r\n            specialMenuItems.value = specialItems;\r\n          }\r\n        }\r\n\r\n        const dbSoldItems = await getSoldItems();\r\n        if (dbSoldItems && dbSoldItems.length > 0) {\r\n          soldItems.value = dbSoldItems;\r\n        }\r\n        \r\n        setTimeout(() => {\r\n          migrationStatus.value.inProgress = false;\r\n        }, 1500);\r\n      } catch (error) {\r\n        console.error('Error al cargar datos:', error);\r\n        migrationStatus.value.message = 'Error al cargar datos: ' + error.message;\r\n        setTimeout(() => {\r\n          migrationStatus.value.inProgress = false;\r\n        }, 3000);\r\n      }\r\n    });\r\n\r\n    // Métodos para información del negocio\r\n    const toggleBusinessForm = () => {\r\n      showBusinessForm.value = !showBusinessForm.value;\r\n    };\r\n\r\n    const onLogoChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          const compressedLogo = await compressImage(e.target.result);\r\n          businessInfo.value.logo = compressedLogo;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const handleSaveBusinessInfo = async () => {\r\n      try {\r\n        if (notification.value.timeout) {\r\n          clearTimeout(notification.value.timeout);\r\n        }\r\n        \r\n        await saveBusinessInfo(businessInfo.value);\r\n        \r\n        notification.value = {\r\n          show: true,\r\n          message: 'Información del negocio guardada con éxito!',\r\n          type: 'success',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000)\r\n        };\r\n      } catch (error) {\r\n        console.error('Error al guardar información del negocio:', error);\r\n        \r\n        notification.value = {\r\n          show: true,\r\n          message: 'Error al guardar la información. Por favor, intenta nuevamente.',\r\n          type: 'error',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000)\r\n        };\r\n      }\r\n    };\r\n\r\n    const clearBusinessForm = async () => {\r\n      const confirmed = await confirm('¿Estás seguro de querer limpiar el formulario?');\r\n      if (confirmed) {\r\n        businessInfo.value = {\r\n          name: '',\r\n          description: '',\r\n          contact: '',\r\n          address: '',\r\n          logo: ''\r\n        };\r\n      }\r\n    };\r\n\r\n    // Métodos para información de pago\r\n    const togglePaymentForm = () => {\r\n      showPaymentForm.value = !showPaymentForm.value;\r\n    };\r\n\r\n    const onQRImageChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          const compressedImage = await compressImage(e.target.result);\r\n          paymentInfo.value.qrImage = compressedImage;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const onNequiImageChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          const compressedImage = await compressImage(e.target.result);\r\n          paymentInfo.value.nequiImage = compressedImage;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const savePaymentInfo = async () => {\r\n      try {\r\n        if (notification.value.timeout) {\r\n          clearTimeout(notification.value.timeout);\r\n        }\r\n        \r\n        businessInfo.value.paymentInfo = { ...paymentInfo.value };\r\n        \r\n        await saveBusinessInfo(businessInfo.value);\r\n        \r\n        notification.value = {\r\n          show: true,\r\n          message: 'Información de pago guardada con éxito!',\r\n          type: 'success',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000)\r\n        };\r\n      } catch (error) {\r\n        console.error('Error al guardar información de pago:', error);\r\n        \r\n        notification.value = {\r\n          show: true,\r\n          message: 'Error al guardar la información de pago. Por favor, intenta nuevamente.',\r\n          type: 'error',\r\n          timeout: setTimeout(() => {\r\n            notification.value.show = false;\r\n          }, 3000)\r\n        };\r\n      }\r\n    };\r\n\r\n    const clearPaymentForm = async () => {\r\n      const confirmed = await confirm('¿Estás seguro de querer limpiar la información de pago?');\r\n      if (confirmed) {\r\n        paymentInfo.value = {\r\n          qrTitle: '',\r\n          qrImage: '',\r\n          nequiNumber: '',\r\n          nequiImage: ''\r\n        };\r\n      }\r\n    };\r\n\r\n    // Métodos para platos del menú\r\n    const toggleMenuForm = () => {\r\n      showMenuForm.value = !showMenuForm.value;\r\n      if (!showMenuForm.value) {\r\n        clearMenuForm();\r\n      }\r\n    };\r\n\r\n    const onImageChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          const compressedImage = await compressImage(e.target.result);\r\n          newItem.value.image = compressedImage;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const saveMenuItem = async () => {\r\n      try {\r\n        // Validaciones iniciales\r\n        if (!newItem.value.name || !newItem.value.price) {\r\n          showNotification('El nombre y el precio son obligatorios', 'error');\r\n          return;\r\n        }\r\n\r\n        if (newItem.value.availableQuantity < 0) {\r\n          showNotification('La cantidad disponible no puede ser negativa', 'error');\r\n          return;\r\n        }\r\n\r\n        // Generar ID si no existe\r\n        if (!newItem.value.id) {\r\n          newItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\r\n        }\r\n\r\n        try {\r\n          console.log('📝 Datos del plato antes de guardar:', newItem.value);\r\n          \r\n          // Guardar en la base de datos\r\n          const savedPlato = await guardarPlato(newItem.value);\r\n          console.log('✅ Plato guardado correctamente:', savedPlato);\r\n          \r\n          if (isEditing.value) {\r\n            // Actualizar el plato existente en la lista\r\n            const index = menuItems.value.findIndex(item => item.id === savedPlato.id);\r\n            if (index !== -1) {\r\n              menuItems.value[index] = { ...savedPlato };\r\n              showNotification('Plato actualizado exitosamente', 'success');\r\n            }\r\n          } else {\r\n            // Agregar el nuevo plato a la lista\r\n            menuItems.value.push({ ...savedPlato });\r\n            showNotification('Plato creado exitosamente', 'success');\r\n          }\r\n\r\n          // Guardar la lista completa\r\n          await saveMenuItems(menuItems.value);\r\n          \r\n          // Limpiar el formulario\r\n          clearMenuForm();\r\n          \r\n        } catch (error) {\r\n          console.error('❌ Error al guardar en la base de datos:', error);\r\n          showNotification(`Error al guardar el plato: ${error.message || 'Intente nuevamente'}`, 'error');\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Error general en saveMenuItem:', error);\r\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\r\n      }\r\n    };\r\n\r\n    const clearMenuForm = () => {\r\n      newItem.value = {\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        includesDrink: false,\r\n        availableQuantity: 0,\r\n        image: '',\r\n        id: null\r\n      };\r\n      isEditing.value = false;\r\n      editingIndex.value = -1;\r\n    };\r\n\r\n    const editMenuItem = (index) => {\r\n      newItem.value = { ...menuItems.value[index] };\r\n      isEditing.value = true;\r\n      editingIndex.value = index;\r\n      showMenuForm.value = true;\r\n    };\r\n\r\n    const deleteMenuItem = async (index) => {\r\n      try {\r\n        const item = menuItems.value[index];\r\n        \r\n        if (!item) {\r\n          console.error('Error: Elemento del menú no encontrado en el índice', index);\r\n          await alert('Error: No se encontró el elemento a eliminar');\r\n          return;\r\n        }\r\n        \r\n        // Confirmar eliminación\r\n        if (!confirm(`¿Estás seguro de que deseas eliminar \"${item.name || 'este plato'}\" del menú?`)) {\r\n          return;\r\n        }\r\n        \r\n        // Eliminar del backend MySQL directamente\r\n        try {\r\n          console.log(`Eliminando plato con ID: ${item.id} del servidor MySQL`);\r\n          const response = await fetch(`${apiConfig.API_DOMAIN}/direct-delete?id=${encodeURIComponent(item.id)}`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Cache-Control': 'no-cache'\r\n            }\r\n          });\r\n          \r\n          const result = await response.json();\r\n          console.log('Resultado de la eliminación directa:', result);\r\n          \r\n          if (!result.success) {\r\n            console.error('Error al eliminar plato del servidor:', result.message);\r\n            alert(`Error al eliminar plato: ${result.message}`);\r\n          }\r\n        } catch (serverError) {\r\n          console.error('Error al comunicarse con el servidor:', serverError);\r\n        }\r\n        \r\n        // Eliminar de IndexedDB\r\n        if (item.id) {\r\n          try {\r\n            console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\r\n            const deleteResult = await deleteMenuItemFromDB(item.id);\r\n            console.log(`Resultado de la eliminación de IndexedDB: ${deleteResult}`);\r\n          } catch (deleteError) {\r\n            console.error('Error al eliminar item del almacén local:', deleteError);\r\n          }\r\n        }\r\n        \r\n        // Eliminar de la lista local\r\n        menuItems.value.splice(index, 1);\r\n        \r\n        // Mostrar notificación de éxito\r\n        showNotification('Plato eliminado correctamente', 'success');\r\n        \r\n      } catch (error) {\r\n        console.error('Error al eliminar elemento del menú:', error);\r\n        showNotification('Error al eliminar el plato', 'error');\r\n      }\r\n    };\r\n\r\n    const sellMenuItem = async (index) => {\r\n      try {\r\n        const item = menuItems.value[index];\r\n        \r\n        // Validar disponibilidad\r\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\r\n          showNotification('Este plato está agotado', 'error');\r\n          return;\r\n        }\r\n\r\n        const confirmed = await confirm(\r\n          `¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`\r\n        );\r\n\r\n        if (confirmed) {\r\n          try {\r\n            const newQuantity = item.availableQuantity - 1;\r\n            \r\n            // Actualizar en la base de datos\r\n            await updateItemAvailability(item.id, newQuantity);\r\n            \r\n            // Actualizar en el estado local\r\n            item.availableQuantity = newQuantity;\r\n            \r\n            // Registrar la venta\r\n            const currentDate = new Date().toISOString();\r\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\r\n            \r\n            if (soldItem) {\r\n              soldItem.quantity += 1;\r\n              soldItem.date = currentDate;\r\n            } else {\r\n              soldItems.value.push({\r\n                name: item.name,\r\n                quantity: 1,\r\n                price: item.price,\r\n                includesDrink: item.includesDrink,\r\n                date: currentDate\r\n              });\r\n            }\r\n            \r\n            // Guardar items vendidos\r\n            await saveSoldItems(soldItems.value);\r\n            \r\n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\r\n            \r\n            if (newQuantity <= 5) {\r\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\r\n            }\r\n          } catch (error) {\r\n            console.error('Error al procesar la venta:', error);\r\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al procesar la venta:', error);\r\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\r\n      }\r\n    };\r\n\r\n    // Métodos para platos especiales\r\n    const toggleSpecialMenuForm = () => {\r\n      showSpecialMenuForm.value = !showSpecialMenuForm.value;\r\n      if (!showSpecialMenuForm.value) {\r\n        clearSpecialMenuForm();\r\n      }\r\n    };\r\n\r\n    const onSpecialImageChange = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          const compressedImage = await compressImage(e.target.result);\r\n          newSpecialItem.value.image = compressedImage;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const saveSpecialMenuItem = async () => {\r\n      try {\r\n        if (!newSpecialItem.value.name || !newSpecialItem.value.price) {\r\n          showNotification('El nombre y el precio son obligatorios', 'error');\r\n          return;\r\n        }\r\n        \r\n        if (!newSpecialItem.value.id) {\r\n          newSpecialItem.value.id = Date.now() + Math.random().toString(36).substring(2, 10);\r\n        }\r\n        \r\n        // Marcar como plato especial\r\n        newSpecialItem.value.isSpecial = true;\r\n        \r\n        try {\r\n          console.log('📝 Datos del plato especial antes de guardar:', newSpecialItem.value);\r\n          \r\n          // Guardar en la base de datos\r\n          const savedPlato = await guardarPlato(newSpecialItem.value);\r\n          console.log('✅ Plato especial guardado correctamente:', savedPlato);\r\n          \r\n          if (isEditingSpecial.value) {\r\n            // Actualizar el plato existente en la lista\r\n            const index = specialMenuItems.value.findIndex(item => item.id === savedPlato.id);\r\n            if (index !== -1) {\r\n              specialMenuItems.value[index] = { ...savedPlato };\r\n              showNotification('Plato especial actualizado exitosamente', 'success');\r\n            }\r\n            isEditingSpecial.value = false;\r\n            editingSpecialIndex.value = -1;\r\n          } else {\r\n            const existingItem = specialMenuItems.value.find(item => \r\n              item.name.toLowerCase() === savedPlato.name.toLowerCase()\r\n            );\r\n            \r\n            if (existingItem) {\r\n              const confirmed = await confirm(\r\n                `Ya existe un plato especial llamado \"${savedPlato.name}\". ¿Desea actualizarlo?`,\r\n                { title: 'Actualizar plato especial existente' }\r\n              );\r\n              \r\n              if (confirmed) {\r\n                const index = specialMenuItems.value.findIndex(item => item.id === existingItem.id);\r\n                if (index !== -1) {\r\n                  // Conservar el ID original pero actualizar los demás datos\r\n                  const updatedPlato = {\r\n                    ...savedPlato,\r\n                    id: existingItem.id\r\n                  };\r\n                  \r\n                  // Actualizar en la base de datos\r\n                  await guardarPlato(updatedPlato);\r\n                  \r\n                  // Actualizar en la lista local\r\n                  specialMenuItems.value[index] = { ...updatedPlato };\r\n                  showNotification('Plato especial actualizado exitosamente', 'success');\r\n                }\r\n              } else {\r\n                return;\r\n              }\r\n            } else {\r\n              // Agregar el nuevo plato a la lista\r\n              specialMenuItems.value.push({ ...savedPlato });\r\n              showNotification('Plato especial creado exitosamente', 'success');\r\n            }\r\n          }\r\n          \r\n          // Guardar todos los elementos\r\n          await saveMenuItems([...menuItems.value, ...specialMenuItems.value]);\r\n          \r\n          // Limpiar el formulario\r\n          clearSpecialMenuForm();\r\n        } catch (error) {\r\n          console.error('❌ Error al guardar plato especial:', error);\r\n          showNotification(`Error al guardar el plato especial: ${error.message || 'Intente nuevamente'}`, 'error');\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Error general en saveSpecialMenuItem:', error);\r\n        showNotification(`Error inesperado: ${error.message || 'Intente nuevamente'}`, 'error');\r\n      }\r\n    };\r\n\r\n    const clearSpecialMenuForm = () => {\r\n      newSpecialItem.value = {\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        includesDrink: false,\r\n        availableQuantity: 0,\r\n        image: '',\r\n        id: null\r\n      };\r\n      isEditingSpecial.value = false;\r\n      editingSpecialIndex.value = -1;\r\n    };\r\n\r\n    const editSpecialMenuItem = (index) => {\r\n      newSpecialItem.value = { ...specialMenuItems.value[index] };\r\n      isEditingSpecial.value = true;\r\n      editingSpecialIndex.value = index;\r\n      showSpecialMenuForm.value = true;\r\n    };\r\n\r\n    const deleteSpecialMenuItem = async (index) => {\r\n      try {\r\n        const item = specialMenuItems.value[index];\r\n        \r\n        if (!item) {\r\n          console.error('Error: Elemento del menú especial no encontrado en el índice', index);\r\n          await alert('Error: No se encontró el elemento a eliminar');\r\n          return;\r\n        }\r\n        \r\n        // Confirmar eliminación\r\n        if (!confirm(`¿Estás seguro de que deseas eliminar \"${item.name || 'este plato'}\" del menú especial?`)) {\r\n          return;\r\n        }\r\n        \r\n        // Eliminar del backend MySQL directamente\r\n        try {\r\n          console.log(`Eliminando plato con ID: ${item.id} del servidor MySQL`);\r\n          const response = await fetch(`${apiConfig.API_DOMAIN}/direct-delete?id=${encodeURIComponent(item.id)}`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Cache-Control': 'no-cache'\r\n            }\r\n          });\r\n          \r\n          const result = await response.json();\r\n          console.log('Resultado de la eliminación directa:', result);\r\n          \r\n          if (!result.success) {\r\n            console.error('Error al eliminar plato del servidor:', result.message);\r\n            alert(`Error al eliminar plato: ${result.message}`);\r\n          }\r\n        } catch (serverError) {\r\n          console.error('Error al comunicarse con el servidor:', serverError);\r\n        }\r\n        \r\n        // Eliminar de IndexedDB\r\n        if (item.id) {\r\n          try {\r\n            console.log(`Llamando a deleteMenuItemFromDB para ID: ${item.id}`);\r\n            const deleteResult = await deleteMenuItemFromDB(item.id);\r\n            console.log(`Resultado de la eliminación de IndexedDB: ${deleteResult}`);\r\n          } catch (deleteError) {\r\n            console.error('Error al eliminar item del almacén local:', deleteError);\r\n          }\r\n        }\r\n        \r\n        // Eliminar de la lista local\r\n        specialMenuItems.value.splice(index, 1);\r\n        \r\n        // Mostrar notificación de éxito\r\n        showNotification('Plato eliminado correctamente', 'success');\r\n        \r\n      } catch (error) {\r\n        console.error('Error al eliminar elemento del menú especial:', error);\r\n        showNotification('Error al eliminar el plato', 'error');\r\n      }\r\n    };\r\n\r\n    const sellSpecialMenuItem = async (index) => {\r\n      try {\r\n        const item = specialMenuItems.value[index];\r\n        \r\n        // Validar disponibilidad\r\n        if (!item.availableQuantity || item.availableQuantity <= 0) {\r\n          showNotification('Este plato especial está agotado', 'error');\r\n          return;\r\n        }\r\n\r\n        const confirmed = await confirm(\r\n          `¿Desea vender una unidad de \"${item.name}\"?\\nDisponibles: ${item.availableQuantity}`\r\n        );\r\n\r\n        if (confirmed) {\r\n          try {\r\n            const newQuantity = item.availableQuantity - 1;\r\n            \r\n            // Actualizar en la base de datos\r\n            await updateItemAvailability(item.id, newQuantity);\r\n            \r\n            // Actualizar en el estado local\r\n            item.availableQuantity = newQuantity;\r\n            \r\n            // Registrar la venta\r\n            const currentDate = new Date().toISOString();\r\n            const soldItem = soldItems.value.find(sold => sold.name === item.name);\r\n            \r\n            if (soldItem) {\r\n              soldItem.quantity += 1;\r\n              soldItem.date = currentDate;\r\n            } else {\r\n              soldItems.value.push({\r\n                name: item.name,\r\n                quantity: 1,\r\n                price: item.price,\r\n                includesDrink: item.includesDrink,\r\n                date: currentDate\r\n              });\r\n            }\r\n            \r\n            // Guardar items vendidos\r\n            await saveSoldItems(soldItems.value);\r\n            \r\n            showNotification(`Se ha vendido una unidad de ${item.name}`, 'success');\r\n            \r\n            if (newQuantity <= 5) {\r\n              showNotification(`¡Atención! Quedan solo ${newQuantity} unidades de ${item.name}`, 'warning');\r\n            }\r\n          } catch (error) {\r\n            console.error('Error al procesar la venta:', error);\r\n            showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al procesar la venta:', error);\r\n        showNotification('Error al procesar la venta. Por favor, intente nuevamente.', 'error');\r\n      }\r\n    };\r\n\r\n    // Métodos para compartir\r\n    const shareByWhatsApp = async () => {\r\n      try {\r\n        await alert('Procesando imágenes para compartir...');\r\n        \r\n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\r\n        if (totalItems > 30) {\r\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\r\n          return;\r\n        }\r\n        \r\n        // Combinar platos regulares y especiales\r\n        const itemsToShare = [\r\n          ...menuItems.value.map(item => ({\r\n            ...item,\r\n            isSpecial: false\r\n          })),\r\n          ...specialMenuItems.value.map(item => ({\r\n            ...item,\r\n            isSpecial: true\r\n          }))\r\n        ];\r\n        \r\n        console.log(`Preparando para compartir ${itemsToShare.length} elementos...`);\r\n        console.log('Items regulares:', menuItems.value.length);\r\n        console.log('Items especiales:', specialMenuItems.value.length);\r\n        \r\n        const menuId = await saveMenu(itemsToShare);\r\n        const url = `${window.location.origin}/menu/${menuId}`;\r\n        shareLink.value = url;\r\n        \r\n        const message = formatShareLinkMessage(url, businessInfo.value.name);\r\n        const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message)}`;\r\n        window.open(whatsappUrl, '_blank');\r\n      } catch (error) {\r\n        console.error('Error al compartir por WhatsApp:', error);\r\n        await alert(`Error al compartir el menú: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\r\n      }\r\n    };\r\n\r\n    const copyLink = async () => {\r\n      try {\r\n        const loadingMessage = 'Procesando imágenes para compartir...';\r\n        showCopiedMessage.value = true;\r\n        \r\n        const totalItems = menuItems.value.length + specialMenuItems.value.length;\r\n        if (totalItems > 30) {\r\n          await alert('El menú tiene demasiados elementos. Por favor, seleccione menos platos para compartir.');\r\n          showCopiedMessage.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Combinar platos regulares y especiales\r\n        const itemsToShare = [\r\n          ...menuItems.value.map(item => ({\r\n            ...item,\r\n            isSpecial: false\r\n          })),\r\n          ...specialMenuItems.value.map(item => ({\r\n            ...item,\r\n            isSpecial: true\r\n          }))\r\n        ];\r\n        \r\n        const menuId = await saveMenu(itemsToShare);\r\n        const url = `${window.location.origin}/menu/${menuId}`;\r\n        shareLink.value = url;\r\n        \r\n        try {\r\n          await copyToClipboard(url);\r\n          showCopiedMessage.value = true;\r\n          setTimeout(() => {\r\n            showCopiedMessage.value = false;\r\n          }, 3000);\r\n        } catch (clipboardError) {\r\n          console.error('Error al copiar al portapapeles:', clipboardError);\r\n          await alert('No se pudo copiar automáticamente. Por favor, copia manualmente este enlace: ' + url);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al generar enlace para compartir:', error);\r\n        showCopiedMessage.value = false;\r\n        await alert(`Error al generar el enlace: ${error.message || 'Error desconocido'}. Por favor, intenta reducir el tamaño de las imágenes o eliminar algunos ítems.`);\r\n      }\r\n    };\r\n\r\n    // Computados\r\n    const totalSales = computed(() => {\r\n      if (!soldItems.value || !Array.isArray(soldItems.value)) return 0;\r\n      return soldItems.value.reduce((total, item) => {\r\n        const price = Number(item.price) || 0;\r\n        const quantity = Number(item.quantity) || 0;\r\n        return total + (price * quantity);\r\n      }, 0);\r\n    });\r\n\r\n    const filteredSoldItems = computed(() => {\r\n      if (!soldItems.value || !Array.isArray(soldItems.value)) return [];\r\n      \r\n      let items = [...soldItems.value];\r\n      \r\n      // Filtrar por término de búsqueda\r\n      if (searchTerm.value) {\r\n        const term = searchTerm.value.toLowerCase().trim();\r\n        items = items.filter(item => {\r\n          if (item && typeof item === 'object') {\r\n            const name = String(item.name || '').toLowerCase();\r\n            return name.includes(term);\r\n          }\r\n          return false;\r\n        });\r\n      }\r\n      \r\n      // Filtrar por categoría\r\n      if (categoryFilter.value) {\r\n        if (categoryFilter.value === 'drinks') {\r\n          items = items.filter(item => item && item.includesDrink === true);\r\n        } else if (categoryFilter.value === 'nodrinks') {\r\n          items = items.filter(item => item && item.includesDrink === false);\r\n        }\r\n      }\r\n      \r\n      // Ordenar según el criterio seleccionado\r\n      if (sortBy.value) {\r\n        switch (sortBy.value) {\r\n          case 'name':\r\n            items.sort((a, b) => {\r\n              if (!a || !a.name) return 1;\r\n              if (!b || !b.name) return -1;\r\n              return a.name.localeCompare(b.name);\r\n            });\r\n            break;\r\n          case 'quantity-desc':\r\n            items.sort((a, b) => {\r\n              const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\r\n              const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\r\n              return qtyB - qtyA;\r\n            });\r\n            break;\r\n          case 'quantity-asc':\r\n            items.sort((a, b) => {\r\n              const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\r\n              const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\r\n              return qtyA - qtyB;\r\n            });\r\n            break;\r\n          case 'price-desc':\r\n            items.sort((a, b) => {\r\n              const priceA = (a && typeof a.price === 'number') ? a.price : 0;\r\n              const priceB = (b && typeof b.price === 'number') ? b.price : 0;\r\n              return priceB - priceA;\r\n            });\r\n            break;\r\n          case 'price-asc':\r\n            items.sort((a, b) => {\r\n              const priceA = (a && typeof a.price === 'number') ? a.price : 0;\r\n              const priceB = (b && typeof b.price === 'number') ? b.price : 0;\r\n              return priceA - priceB;\r\n            });\r\n            break;\r\n          case 'date-desc':\r\n            items.sort((a, b) => {\r\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\r\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\r\n              return dateB - dateA;\r\n            });\r\n            break;\r\n          case 'date-asc':\r\n            items.sort((a, b) => {\r\n              const dateA = a && a.date ? new Date(a.date) : new Date(0);\r\n              const dateB = b && b.date ? new Date(b.date) : new Date(0);\r\n              return dateA - dateB;\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      \r\n      return items;\r\n    });\r\n\r\n    // Funciones para formatear datos\r\n    const formatPrice = (price) => {\r\n      if (isNaN(Number(price))) return '0,00';\r\n      const fixed = Number(price).toFixed(2);\r\n      const [intPart, decPart] = fixed.split('.');\r\n      const formattedIntPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n      return `${formattedIntPart},${decPart}`;\r\n    };\r\n    \r\n    const formatDate = (dateStr) => {\r\n      if (!dateStr) return 'N/A';\r\n      const date = new Date(dateStr);\r\n      if (isNaN(date.getTime())) return 'Fecha inválida';\r\n      return new Intl.DateTimeFormat('es-ES', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      }).format(date);\r\n    };\r\n\r\n    const filterInventoryItems = computed(() => {\r\n      return (items) => {\r\n        if (!items || !Array.isArray(items)) {\r\n          console.warn('filterInventoryItems recibió un valor no array:', items);\r\n          return [];\r\n        }\r\n        if (searchTerm.value) {\r\n          const term = searchTerm.value.toLowerCase().trim();\r\n          \r\n          items = items.filter(item => {\r\n            if (item && typeof item === 'object') {\r\n              const name = String(item.name || '').toLowerCase();\r\n              return name.includes(term);\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n        if (categoryFilter.value) {\r\n          if (categoryFilter.value === 'drinks') {\r\n            items = items.filter(item => item && item.includesDrink === true);\r\n          } else if (categoryFilter.value === 'nodrinks') {\r\n            items = items.filter(item => item && item.includesDrink === false);\r\n          }\r\n        }\r\n        if (sortBy.value) {\r\n          switch (sortBy.value) {\r\n            case 'name':\r\n              items.sort((a, b) => {\r\n                const nameA = (a && a.name) ? a.name.toLowerCase() : '';\r\n                const nameB = (b && b.name) ? b.name.toLowerCase() : '';\r\n                return nameA.localeCompare(nameB);\r\n              });\r\n              break;\r\n            case 'quantity-desc':\r\n              items.sort((a, b) => {\r\n                const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\r\n                const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\r\n                return qtyB - qtyA;\r\n              });\r\n              break;\r\n            case 'quantity-asc':\r\n              items.sort((a, b) => {\r\n                const qtyA = (a && typeof a.quantity === 'number') ? a.quantity : 0;\r\n                const qtyB = (b && typeof b.quantity === 'number') ? b.quantity : 0;\r\n                return qtyA - qtyB;\r\n              });\r\n              break;\r\n            case 'price-desc':\r\n              items.sort((a, b) => {\r\n                const priceA = (a && typeof a.price === 'number') ? a.price : 0;\r\n                const priceB = (b && typeof b.price === 'number') ? b.price : 0;\r\n                return priceB - priceA;\r\n              });\r\n              break;\r\n            case 'price-asc':\r\n              items.sort((a, b) => {\r\n                const priceA = (a && typeof a.price === 'number') ? a.price : 0;\r\n                const priceB = (b && typeof b.price === 'number') ? b.price : 0;\r\n                return priceA - priceB;\r\n              });\r\n              break;\r\n            case 'date-desc':\r\n              items.sort((a, b) => {\r\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\r\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\r\n                return dateB - dateA;\r\n              });\r\n              break;\r\n            case 'date-asc':\r\n              items.sort((a, b) => {\r\n                const dateA = a && a.date ? new Date(a.date) : new Date(0);\r\n                const dateB = b && b.date ? new Date(b.date) : new Date(0);\r\n                return dateA - dateB;\r\n              });\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n        return items;\r\n      };\r\n    });\r\n\r\n    const exportToExcel = () => {\r\n      // Crear un array con los datos a exportar\r\n      const data = [\r\n        ['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal', 'Acciones'],\r\n        ...filteredSoldItems.value.map(item => [\r\n          item.name,\r\n          item.includesDrink ? 'Con refresco' : 'Sin refresco',\r\n          item.quantity,\r\n          `$${formatPrice(item.price)}`,\r\n          formatDate(item.date),\r\n          `$${formatPrice(item.quantity * item.price)}`,\r\n          ''\r\n        ]),\r\n        ['', '', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]\r\n      ];\r\n\r\n      // Crear un libro de Excel y una hoja de cálculo\r\n      const ws = XLSX.utils.aoa_to_sheet(data);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, 'Ventas');\r\n\r\n      // Generar el archivo Excel y descargarlo\r\n      const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      saveAs(blob, `ventas_${new Date().toLocaleDateString()}.xlsx`);\r\n    };\r\n\r\n    const exportToPDF = () => {\r\n      // Crear un nuevo documento PDF\r\n      const doc = new jsPDF();\r\n      \r\n      // Añadir título\r\n      doc.setFontSize(18);\r\n      doc.text('Reporte de Ventas', 14, 22);\r\n      doc.setFontSize(11);\r\n      doc.text(`Fecha: ${new Date().toLocaleDateString()}`, 14, 32);\r\n\r\n      // Crear la tabla con los datos\r\n      const tableData = filteredSoldItems.value.map(item => [\r\n        item.name,\r\n        item.includesDrink ? 'Con refresco' : 'Sin refresco',\r\n        item.quantity,\r\n        `$${formatPrice(item.price)}`,\r\n        formatDate(item.date),\r\n        `$${formatPrice(item.quantity * item.price)}`\r\n      ]);\r\n\r\n      // Añadir la tabla\r\n      doc.autoTable({\r\n        head: [['Nombre del Plato', 'Categoría', 'Cantidad Vendida', 'Precio por Unidad', 'Fecha de Venta', 'Subtotal']],\r\n        body: tableData,\r\n        foot: [['', '', '', '', 'Total', `$${formatPrice(totalSales.value)}`]],\r\n        startY: 40,\r\n        theme: 'striped',\r\n        headStyles: { fillColor: [76, 175, 80] },\r\n        footStyles: { fillColor: [240, 240, 240], textColor: [0, 0, 0], fontStyle: 'bold' }\r\n      });\r\n\r\n      // Guardar el PDF de exportación\r\n      doc.save(`ventas_${new Date().toLocaleDateString()}.pdf`);\r\n    };\r\n\r\n    const returnSoldItem = async (item) => {\r\n      try {\r\n        // Buscar el plato en el menú para incrementar su stock\r\n        const menuItem = menuItems.value.find(mi => mi.name === item.name) || \r\n                         specialMenuItems.value.find(smi => smi.name === item.name);\r\n        \r\n        if (!menuItem) {\r\n          showNotification('No se encontró el plato en el inventario actual', 'error');\r\n          return;\r\n        }\r\n        \r\n        const confirmed = await confirm(\r\n          `¿Desea devolver una unidad de \"${item.name}\" al stock?`\r\n        );\r\n        \r\n        if (confirmed) {\r\n          // Incrementar el stock del plato\r\n          const newQuantity = (menuItem.availableQuantity || 0) + 1;\r\n          \r\n          // Actualizar en la base de datos\r\n          await updateItemAvailability(menuItem.id, newQuantity);\r\n          \r\n          // Actualizar en el estado local\r\n          menuItem.availableQuantity = newQuantity;\r\n          \r\n          // Reducir la cantidad vendida\r\n          if (item.quantity > 1) {\r\n            item.quantity -= 1;\r\n          } else {\r\n            // Si solo queda 1, eliminar el item de la lista\r\n            const index = soldItems.value.findIndex(si => si.name === item.name);\r\n            if (index !== -1) {\r\n              soldItems.value.splice(index, 1);\r\n            }\r\n          }\r\n          \r\n          // Guardar items vendidos actualizados\r\n          await saveSoldItems(soldItems.value);\r\n          \r\n          showNotification(`Se ha devuelto una unidad de ${item.name} al stock`, 'success');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al devolver plato al stock:', error);\r\n        showNotification('Error al procesar la devolución. Por favor, intente nuevamente.', 'error');\r\n      }\r\n    };\r\n\r\n    const canClearList = computed(() => {\r\n      if (soldItems.value.length === 0) return false;\r\n      \r\n      // Encontrar la fecha de venta más reciente\r\n      const mostRecentDate = soldItems.value.reduce((latest, item) => {\r\n        const itemDate = new Date(item.date);\r\n        return itemDate > latest ? itemDate : latest;\r\n      }, new Date(0));\r\n      \r\n      // Calcular si han pasado 24 horas\r\n      const now = new Date();\r\n      const hoursPassed = (now - mostRecentDate) / (1000 * 60 * 60);\r\n      \r\n      return hoursPassed >= 24;\r\n    });\r\n\r\n    const clearListTooltip = computed(() => {\r\n      if (soldItems.value.length === 0) {\r\n        return 'No hay platos vendidos para borrar';\r\n      }\r\n      \r\n      if (canClearList.value) {\r\n        return 'Borrar todos los platos vendidos';\r\n      } else {\r\n        // Encontrar la fecha de venta más reciente\r\n        const mostRecentDate = soldItems.value.reduce((latest, item) => {\r\n          const itemDate = new Date(item.date);\r\n          return itemDate > latest ? itemDate : latest;\r\n        }, new Date(0));\r\n        \r\n        // Calcular tiempo restante\r\n        const now = new Date();\r\n        const hoursPassed = (now - mostRecentDate) / (1000 * 60 * 60);\r\n        const hoursRemaining = Math.ceil(24 - hoursPassed);\r\n        \r\n        return `Debe esperar ${hoursRemaining} horas más para borrar la lista`;\r\n      }\r\n    });\r\n\r\n    const clearAllSoldItems = async () => {\r\n      if (!canClearList.value) {\r\n        showNotification('Debe esperar 24 horas desde la última venta para borrar la lista', 'error');\r\n        return;\r\n      }\r\n      \r\n      const confirmed = await confirm(\r\n        '¿Está seguro de que desea borrar toda la lista de platos vendidos? Esta acción no se puede deshacer.'\r\n      );\r\n      \r\n      if (confirmed) {\r\n        try {\r\n          // Vaciar la lista de platos vendidos\r\n          soldItems.value = [];\r\n          \r\n          // Guardar en la base de datos\r\n          await saveSoldItems([]);\r\n          \r\n          showNotification('Lista de platos vendidos borrada exitosamente', 'success');\r\n        } catch (error) {\r\n          console.error('Error al borrar la lista de platos vendidos:', error);\r\n          showNotification('Error al borrar la lista. Por favor, intente nuevamente.', 'error');\r\n        }\r\n      }\r\n    };\r\n\r\n    // Función para mostrar notificaciones\r\n    const showNotification = (message, type) => {\r\n      notification.value = {\r\n        show: true,\r\n        message,\r\n        type\r\n      };\r\n      \r\n      setTimeout(() => {\r\n        notification.value.show = false;\r\n      }, 3000); // 3 segundos como acordado\r\n    };\r\n\r\n    const checkAvailabilityToast = async (itemId) => {\r\n      try {\r\n        // Buscar el item en ambos menús\r\n        const item = menuItems.value.find(i => i.id === itemId) || \r\n                    specialMenuItems.value.find(i => i.id === itemId);\r\n        \r\n        if (item) {\r\n          // Asegurar que availableQuantity sea un número válido\r\n          const availableQty = parseInt(item.availableQuantity);\r\n          if (isNaN(availableQty)) {\r\n            showNotification('Cantidad no disponible o no válida', 'warning');\r\n          } else if (availableQty > 5) {\r\n            showNotification(`Disponible: ${availableQty} unidades`, 'success');\r\n          } else if (availableQty > 0) {\r\n            showNotification(`¡Quedan solo ${availableQty} unidades!`, 'warning');\r\n          } else {\r\n            showNotification('Producto agotado', 'error');\r\n          }\r\n        } else {\r\n          showNotification('No se encontró el producto', 'error');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al verificar disponibilidad:', error);\r\n        showNotification('Error al verificar la disponibilidad', 'error');\r\n      }\r\n    };\r\n\r\n    // Añadir propiedad isEmployee\r\n    const isEmployee = computed(() => {\r\n      return hasRole('Empleado') && !hasRole('Administrador') && !hasRole('Superadministrador');\r\n    });\r\n\r\n    const removeDuplicates = (array) => {\r\n      return [...new Set(array)];\r\n    };\r\n\r\n    return {\r\n      businessInfo,\r\n      showBusinessForm,\r\n      toggleBusinessForm,\r\n      onLogoChange,\r\n      saveBusinessInfo,\r\n      clearBusinessForm,\r\n      paymentInfo,\r\n      showPaymentForm,\r\n      togglePaymentForm,\r\n      onQRImageChange,\r\n      onNequiImageChange,\r\n      savePaymentInfo,\r\n      clearPaymentForm,\r\n      newItem,\r\n      menuItems,\r\n      showMenuForm,\r\n      isEditing,\r\n      toggleMenuForm,\r\n      onImageChange,\r\n      saveMenuItem,\r\n      clearMenuForm,\r\n      editMenuItem,\r\n      deleteMenuItem,\r\n      sellMenuItem,\r\n      soldItems,\r\n      totalSales,\r\n      searchTerm,\r\n      sortBy,\r\n      categoryFilter,\r\n      selectedChartType,\r\n      shareLink,\r\n      showCopiedMessage,\r\n      shareByWhatsApp,\r\n      copyLink,\r\n      exportToExcel,\r\n      exportToPDF,\r\n      filteredSoldItems,\r\n      migrationStatus,\r\n      chartError,\r\n      handleChartError,\r\n      notification,\r\n      newSpecialItem,\r\n      specialMenuItems,\r\n      showSpecialMenuForm,\r\n      isEditingSpecial,\r\n      editingSpecialIndex,\r\n      toggleSpecialMenuForm,\r\n      onSpecialImageChange,\r\n      saveSpecialMenuItem,\r\n      clearSpecialMenuForm,\r\n      editSpecialMenuItem,\r\n      deleteSpecialMenuItem,\r\n      sellSpecialMenuItem,\r\n      toast,\r\n      showNotification,\r\n      checkAvailabilityToast,\r\n      isEmployee,\r\n      filterInventoryItems,\r\n      returnSoldItem,\r\n      canClearList,\r\n      clearListTooltip,\r\n      clearAllSoldItems,\r\n      removeDuplicates,\r\n      formatPrice,\r\n      formatDate\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.menu-container {\r\n  padding: 20px;\r\n}\r\n\r\nsection {\r\n  margin-bottom: 40px;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n}\r\n\r\nh2 {\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.toggle-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.toggle-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\nform {\r\n  display: grid;\r\n  gap: 15px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n}\r\n\r\ninput, textarea, select {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 15px;\r\n}\r\n\r\n.save-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  flex: 1;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.clear-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  flex: 1;\r\n}\r\n\r\n.clear-button:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.business-preview {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n/* Mejoras a la lista de platos */\r\n.menu-items-list, .menu-special-items-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.menu-item-card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.menu-item-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\r\n}\r\n\r\n.menu-item-image-container {\r\n  width: 100%;\r\n  height: 200px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.menu-item-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform 0.5s ease;\r\n}\r\n\r\n.menu-item-card:hover .menu-item-image {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.no-image-placeholder {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: #999;\r\n  font-style: italic;\r\n}\r\n\r\n.menu-item-details {\r\n  padding: 15px;\r\n  flex-grow: 1;\r\n}\r\n\r\n.menu-item-details h3 {\r\n  margin-top: 0;\r\n  color: #333;\r\n  font-size: 18px;\r\n}\r\n\r\n.menu-item-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  padding: 0 15px 15px;\r\n}\r\n\r\n.edit-button, .sell-button, .delete-button {\r\n  flex: 1;\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.edit-button {\r\n  background-color: #ffc107;\r\n  color: #333;\r\n}\r\n\r\n.edit-button:hover {\r\n  background-color: #e0a800;\r\n}\r\n\r\n.sell-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.sell-button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.delete-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.delete-button:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n/* Mejoras a la sección de inventario */\r\n.inventory-section {\r\n  margin-top: 30px;\r\n}\r\n\r\n.inventory-controls {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n  align-items: center;\r\n}\r\n\r\n.inventory-search-container {\r\n  flex: 1;\r\n  min-width: 200px;\r\n}\r\n\r\n.inventory-search-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.inventory-filters {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.inventory-filter {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n}\r\n\r\n.inventory-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.export-button {\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.excel {\r\n  background-color: #217346;\r\n  color: white;\r\n}\r\n\r\n.excel:hover {\r\n  background-color: #1a5c38;\r\n}\r\n\r\n.pdf {\r\n  background-color: #f40f02;\r\n  color: white;\r\n}\r\n\r\n.pdf:hover {\r\n  background-color: #d30902;\r\n}\r\n\r\n.clear-all-button {\r\n  padding: 8px 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-weight: bold;\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n\r\n.clear-all-button:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.clear-all-button:disabled {\r\n  background-color: #6c757d;\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n\r\n.return-button {\r\n  background-color: #17a2b8;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 6px 10px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.return-button:hover {\r\n  background-color: #138496;\r\n}\r\n\r\n.action-icon {\r\n  font-size: 16px;\r\n}\r\n\r\n.sales-chart-container {\r\n  margin: 20px 0;\r\n  height: 300px;\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.inventory-table {\r\n  overflow-x: auto;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 15px;\r\n  text-align: left;\r\n}\r\n\r\nthead {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\nthead th {\r\n  font-weight: 600;\r\n}\r\n\r\ntbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.alternate-row {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\ntfoot {\r\n  background-color: #e9e9e9;\r\n  font-weight: bold;\r\n}\r\n\r\ntfoot td {\r\n  padding: 12px 15px;\r\n}\r\n\r\n.share-buttons {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.whatsapp-button, .copy-button {\r\n  flex: 1;\r\n  padding: 12px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.whatsapp-button {\r\n  background-color: #25D366;\r\n  color: white;\r\n}\r\n\r\n.whatsapp-button:hover {\r\n  background-color: #128C7E;\r\n}\r\n\r\n.copy-button {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.copy-button:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.emoji {\r\n  font-size: 1.2em;\r\n  margin-right: 8px;\r\n}\r\n\r\n.copied-message {\r\n  color: #28a745;\r\n  margin-top: 10px;\r\n}\r\n\r\n.share-link {\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  word-break: break-all;\r\n}\r\n\r\n.migration-status {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  background-color: #ffeb3b;\r\n  color: #333;\r\n  padding: 15px 20px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n  max-width: 300px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.migration-status.completed {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.migration-message {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.loading-spinner {\r\n  display: inline-block;\r\n  width: 18px;\r\n  height: 18px;\r\n  border: 3px solid rgba(0, 0, 0, 0.1);\r\n  border-top-color: #333;\r\n  animation: spin 1s ease-in-out infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n/* Estilos para notificaciones */\r\n.notification {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  padding: 15px 20px;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-weight: bold;\r\n  z-index: 1001;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  min-width: 300px;\r\n  max-width: 500px;\r\n  animation: slide-in 0.3s ease-out;\r\n}\r\n\r\n.notification.success {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.notification.error {\r\n  background-color: #f44336;\r\n}\r\n\r\n.notification-close {\r\n  background: transparent;\r\n  border: none;\r\n  color: white;\r\n  font-size: 20px;\r\n  margin-left: 15px;\r\n  cursor: pointer;\r\n  padding: 0 5px;\r\n}\r\n\r\n@keyframes slide-in {\r\n  from {\r\n    transform: translateX(100%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n/* Estilos del toast */\r\n.toast-notification {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  padding: 15px 20px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  z-index: 1000;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  animation: fadeIn 0.3s, fadeOut 0.3s 2.7s;\r\n}\r\n\r\n.toast-notification.success {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.toast-notification.error {\r\n  background-color: #f44336;\r\n}\r\n\r\n.toast-notification.warning {\r\n  background-color: #ff9800;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n@keyframes fadeOut {\r\n  from { opacity: 1; transform: translateY(0); }\r\n  to { opacity: 0; transform: translateY(-20px); }\r\n}\r\n\r\n/* Estilos del tooltip */\r\n.tooltip-container {\r\n  position: relative;\r\n}\r\n\r\n.tooltip {\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  padding: 8px 12px;\r\n  background-color: #333;\r\n  color: white;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transition: opacity 0.3s, visibility 0.3s;\r\n}\r\n\r\n.tooltip::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border: 6px solid transparent;\r\n  border-top-color: #333;\r\n}\r\n\r\n.tooltip-visible {\r\n  opacity: 1;\r\n  visibility: visible;\r\n}\r\n\r\n.action-button:hover .tooltip {\r\n  opacity: 1;\r\n  visibility: visible;\r\n}\r\n\r\n/* Añadir estilos para botones deshabilitados */\r\n.toggle-button:disabled {\r\n  background-color: #cccccc;\r\n  color: #666666;\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n</style>\r\n```\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}